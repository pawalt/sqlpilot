<t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>GRANT SELECT ON remote_work_schedule TO hr_manager</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>grant select on remote_work_schedule to hr_manager</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>GRANT INSERT, UPDATE ON remote_work_schedule TO team_lead</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>grant insert, update on remote_work_schedule to team_lead</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>GRANT DELETE ON remote_work_schedule TO admin</stat><divider><t>CREATE TABLE remote_work_schedule (employee_id INT PRIMARY KEY, start_date DATE, end_date DATE, remote_location VARCHAR(50))</t><stat>grant delete on remote_work_schedule to admin</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>GRANT SELECT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>grant select on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>GRANT SELECT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>grant select on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>GRANT SELECT, INSERT ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>grant select, insert on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>GRANT SELECT, INSERT ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>grant select, insert on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>GRANT UPDATE, DELETE ON remote_teams TO user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));</t><stat>grant update, delete on remote_teams to user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>GRANT UPDATE, DELETE ON remote_teams TO user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(50) NOT NULL, team_id INT NOT NULL, role VARCHAR(50) NOT NULL, FOREIGN KEY (team_id) REFERENCES remote_teams (team_id));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, team_leader VARCHAR(50) NOT NULL);</t><stat>grant update, delete on remote_teams to user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, INSERT ON remote_teams TO user1;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, insert on remote_teams to user1;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, UPDATE ON remote_employees TO user2;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, update on remote_employees to user2;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>GRANT SELECT, DELETE ON remote_tasks TO user3;</stat><divider><t>CREATE TABLE remote_tasks (task_id INT PRIMARY KEY, task_name VARCHAR(255), task_description TEXT, employee_id INT, deadline DATE);

CREATE TABLE remote_employees (employee_id INT PRIMARY KEY, employee_name VARCHAR(255), team_id INT, role VARCHAR(255));

CREATE TABLE remote_teams (team_id INT PRIMARY KEY, team_name VARCHAR(255), team_lead VARCHAR(255));</t><stat>grant select, delete on remote_tasks to user3;</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT ON employees TO marketing_team</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select on employees to marketing_team</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT INSERT, UPDATE, DELETE ON teams TO project_manager</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant insert, update, delete on teams to project_manager</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>GRANT SELECT, INSERT ON projects TO developer</stat><divider><t>CREATE TABLE tasks ( task_id UUID PRIMARY KEY, task_name STRING, assignee UUID REFERENCES employees.id, status STRING )

CREATE TABLE projects ( project_id UUID PRIMARY KEY, project_name STRING, team_id UUID REFERENCES teams.team_id )

CREATE TABLE teams ( team_id UUID PRIMARY KEY, team_name STRING, team_lead UUID REFERENCES employees.id )

CREATE TABLE employees ( id UUID PRIMARY KEY, first_name STRING, last_name STRING, department STRING )</t><stat>grant select, insert on projects to developer</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT ON users TO marketing_team</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select on users to marketing_team</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT INSERT, UPDATE ON teams TO team_lead</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant insert, update on teams to team_lead</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)</t><stat>grant select, insert, delete on projects to project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>GRANT SELECT, INSERT, DELETE ON projects TO project_manager</stat><divider><t>CREATE TABLE meetings (meeting_id INT PRIMARY KEY, meeting_topic STRING, meeting_date DATE, meeting_attendees ARRAY<INT>)

CREATE TABLE tasks (task_id INT PRIMARY KEY, task_name STRING, task_description STRING, task_assignee INT)

CREATE TABLE projects (project_id INT PRIMARY KEY, project_name STRING, project_manager INT, team_assigned INT)

CREATE TABLE teams (team_id INT PRIMARY KEY, team_name STRING, team_lead INT, team_members ARRAY<INT>)

CREATE TABLE users (id INT PRIMARY KEY, name STRING, email STRING, role STRING)</t><stat>grant select, insert, delete on projects to project_manager</stat>