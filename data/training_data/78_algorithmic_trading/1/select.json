[
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price, trade_execution_time FROM market_data WHERE symbol = 'GOOGL';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(price) FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(price) FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_records FROM market_data GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_data GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_data GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE trade_execution_time > '2022-09-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_records FROM market_data WHERE trade_execution_time > '2022-09-01 00:00:00' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM market_data WHERE trade_execution_time > '2022-09-01 00:00:00' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_data WHERE trade_execution_time > '2022-09-01 00:00:00' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_data WHERE trade_execution_time > '2022-09-01 00:00:00' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_records FROM market_data WHERE trade_execution_time BETWEEN '2022-09-01 00:00:00' AND '2022-09-30 23:59:59' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM market_data WHERE trade_execution_time BETWEEN '2022-09-01 00:00:00' AND '2022-09-30 23:59:59' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_data WHERE trade_execution_time BETWEEN '2022-09-01 00:00:00' AND '2022-09-30 23:59:59' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_data WHERE trade_execution_time BETWEEN '2022-09-01 00:00:00' AND '2022-09-30 23:59:59' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM market_data WHERE trade_execution_time BETWEEN '2022-09-01 00:00:00' AND '2022-09-30 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE price > 100 ORDER BY trade_execution_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price, MIN(price) AS min_price FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_trades FROM market_data GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data WHERE trade_execution_time > '2022-01-01' GROUP BY symbol HAVING AVG(price) > 50;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE trade_execution_time BETWEEN '2022-05-01' AND '2022-05-31';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS trades_per_symbol FROM market_data WHERE trade_execution_time BETWEEN '2022-06-01' AND '2022-06-30' GROUP BY symbol HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT symbol FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE symbol LIKE 'AAP%' AND price < 50 ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data GROUP BY symbol ORDER BY average_price DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) - MIN(price) AS price_range FROM market_data GROUP BY symbol ORDER BY price_range DESC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, trade_execution_time, price FROM market_data WHERE trade_execution_time = (SELECT MAX(trade_execution_time) FROM market_data);",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data GROUP BY symbol HAVING COUNT(*) > 3 ORDER BY average_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(DISTINCT trade_execution_time) AS unique_dates FROM market_data GROUP BY symbol HAVING unique_dates > 1;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE price > (SELECT AVG(price) FROM market_data);",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, trade_execution_time FROM market_data WHERE trade_execution_time > (SELECT MAX(trade_execution_time) FROM market_data WHERE symbol = 'GOOGL');",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE symbol = 'MSFT' AND trade_execution_time = (SELECT MAX(trade_execution_time) FROM market_data WHERE symbol = 'MSFT');",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data WHERE symbol IN ('AAPL', 'GOOGL', 'MSFT') GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS trades_per_month FROM market_data GROUP BY symbol, EXTRACT(MONTH FROM trade_execution_time) ORDER BY trades_per_month DESC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  symbol VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  trade_execution_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data WHERE trade_execution_time > '2022-07-01' AND symbol IN ('AMZN', 'NFLX') GROUP BY symbol HAVING AVG(price) > 200;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM price_quotes;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT timestamp FROM price_quotes WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT trade_id, symbol, volume FROM trade_executions;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT execution_time FROM trade_executions WHERE symbol = 'GOOGL';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions WHERE volume > 500;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM price_quotes GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM price_quotes GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM price_quotes GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_quotes FROM price_quotes;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trades FROM trade_executions;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_quotes FROM price_quotes GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_trades FROM trade_executions GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM price_quotes WHERE price > 50 GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price, MAX(price) AS max_price FROM price_quotes GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, SUM(volume) AS total_volume FROM trade_executions GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price, MIN(price) AS min_price FROM price_quotes WHERE symbol = 'MSFT';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(execution_time) AS latest_execution FROM trade_executions GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, price, timestamp FROM price_quotes WHERE price > 100 ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM price_quotes GROUP BY symbol HAVING average_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS highest_price, MIN(price) AS lowest_price FROM price_quotes WHERE timestamp > '2022-01-01' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT symbol FROM trade_executions WHERE volume > 1000;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, SUM(price * volume) AS total_value FROM trade_executions GROUP BY symbol HAVING total_value > 50000;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM price_quotes WHERE symbol IN ('AAPL', 'GOOG', 'MSFT') GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes JOIN trade_executions ON price_quotes.symbol = trade_executions.symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS highest_price FROM price_quotes WHERE timestamp >= '2022-04-01' AND timestamp <= '2022-04-30' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_trades FROM trade_executions GROUP BY symbol HAVING total_trades > 5;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS highest_price FROM price_quotes WHERE timestamp BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS lowest_price, MAX(price) AS highest_price FROM price_quotes WHERE timestamp >= '2022-01-01' AND timestamp < '2022-02-01' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(volume) AS average_volume FROM trade_executions WHERE symbol = 'AAPL' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, price, execution_time FROM trade_executions WHERE execution_time <= '2022-04-30' ORDER BY execution_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, MAX(volume) AS max_volume FROM trade_executions WHERE execution_time >= '2022-01-01' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(DISTINCT trade_id) AS unique_trades FROM trade_executions GROUP BY symbol HAVING unique_trades > 3;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, SUM(price * volume) AS total_value FROM trade_executions WHERE execution_time BETWEEN '2022-04-01' AND '2022-04-30' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_trades FROM trade_executions WHERE execution_time >= '2022-01-01' AND execution_time < '2022-02-01' GROUP BY symbol HAVING total_trades > 2;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM price_quotes WHERE timestamp >= '2022-01-01' AND timestamp < '2022-02-01' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n  symbol TEXT,\n  price DECIMAL,\n  timestamp TIMESTAMP\n);\n\n\nCREATE TABLE trade_executions (\n  trade_id INT,\n  symbol TEXT,\n  price DECIMAL,\n  volume INT,\n  execution_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT symbol, SUM(volume) AS total_volume FROM trade_executions WHERE symbol IN ('AAPL', 'GOOG', 'MSFT');",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, symbol, price FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, timestamp FROM market_data WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(price) FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(price) FROM market_data WHERE symbol LIKE 'GO%';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(price) FROM market_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MAX(price) FROM market_data GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_records FROM market_data GROUP BY symbol HAVING total_records > 10;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(price) AS average_price, MIN(price) AS min_price FROM market_data WHERE symbol = 'MSFT';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_data WHERE symbol IN ('AAPL', 'GOOGL', 'AMZN');",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS average_price FROM market_data GROUP BY symbol HAVING AVG(price) > 200;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE DATE(timestamp) = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) FROM market_data WHERE symbol LIKE '%MS%' GROUP BY symbol;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, symbol, price, timestamp FROM market_data WHERE id > 100 ORDER BY id ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT symbol FROM market_data;",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, symbol, price FROM market_data WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM market_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, symbol, price FROM market_data WHERE symbol LIKE 'AAPL%'",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(id) AS total_records FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM market_data GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_data GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_data GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(id) AS total_records FROM market_data GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, DATE(timestamp) AS date_only FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, HOUR(timestamp) AS hour_of_day FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, DAY(timestamp) AS day_of_month FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, WEEK(timestamp) AS week_of_year FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MONTH(timestamp) AS month FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, YEAR(timestamp) AS year FROM market_data",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(id) AS total_records FROM market_data WHERE price > 100 GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM market_data WHERE price > 100 GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_data WHERE price > 100 GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_data WHERE price > 100 GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(id) AS total_records FROM market_data WHERE timestamp > '2022-01-01' GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_data (\n  id INT PRIMARY KEY,\n  symbol VARCHAR(50),\n  price DECIMAL(10,2),\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT symbol, AVG(price) AS avg_price FROM market_data WHERE timestamp > '2022-01-01' GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_prices",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_prices",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, timestamp FROM trade_executions",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_assets",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, asset_type FROM market_assets",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_participants",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT participant_name, participant_type FROM market_participants",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, symbol, price FROM market_prices",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, quantity, price, timestamp FROM trade_executions",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, symbol, asset_type FROM market_assets",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, participant_name, participant_type FROM market_participants",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_prices WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_prices WHERE symbol = 'AAPL'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, timestamp FROM trade_executions WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_assets WHERE value < 500",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, asset_type FROM market_assets WHERE symbol = 'BTC'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_participants WHERE participant_type = 'institutional'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT participant_name, participant_type FROM market_participants WHERE participant_type = 'individual'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT id, symbol, price FROM market_prices ORDER BY timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, quantity, price, timestamp FROM trade_executions ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_assets ORDER BY value DESC",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_prices WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, quantity FROM trade_executions WHERE quantity > 1000",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, value FROM market_assets WHERE value < 50",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT participant_name, participant_type FROM market_participants WHERE participant_type = 'institutional'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_prices WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM trade_executions WHERE price < 50 AND quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, price FROM market_prices WHERE symbol = 'AAPL'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, quantity FROM trade_executions WHERE symbol = 'GOOGL'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, value FROM market_assets WHERE symbol = 'BTC'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price FROM market_prices",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(value) AS min_value FROM market_assets",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM trade_executions",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(id) AS total_assets FROM market_assets",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, MAX(price) AS max_price FROM market_prices GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, MIN(price) AS min_price FROM market_prices GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, COUNT(*) AS total_trades FROM trade_executions GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, AVG(value) AS avg_value FROM market_assets GROUP BY symbol",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT participant_name, COUNT(*) AS total_participants FROM market_participants GROUP BY participant_name",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, price, timestamp FROM market_prices WHERE symbol = 'AAPL' AND timestamp > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT symbol, quantity, timestamp FROM trade_executions WHERE symbol = 'GOOGL' AND timestamp < '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE market_prices (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE trade_executions (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    quantity INT,\n    price FLOAT,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE market_assets (\n    id INT PRIMARY KEY,\n    symbol TEXT,\n    asset_type TEXT,\n    value FLOAT\n)\n\nCREATE TABLE market_participants (\n    id INT PRIMARY KEY,\n    participant_name TEXT,\n    participant_type TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM market_assets WHERE asset_type = 'Stock'",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_id, price FROM price_quotes WHERE security_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT trade_id, security_id, price FROM trade_executions WHERE price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM security_info;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_id, security_name FROM security_info WHERE exchange = 'NYSE';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trader_info;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT trader_id, trader_name FROM trader_info WHERE trader_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_history;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT trade_id, trader_id, security_id FROM trade_history WHERE trade_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions WHERE trade_timestamp <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM security_info WHERE security_name LIKE 'AAPL%';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trader_info WHERE trader_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_history WHERE quantity >= 100;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes WHERE security_id = 789 AND price < 500;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions WHERE quantity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM security_info WHERE exchange = 'NASDAQ';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trader_info WHERE trader_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_history WHERE price BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM price_quotes WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_id, AVG(price) FROM price_quotes GROUP BY security_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_id, COUNT(*) FROM trade_executions GROUP BY security_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_name, exchange FROM security_info WHERE security_id = 1001",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT trader_name, SUM(price*quantity) AS total_value FROM trader_info JOIN trade_history ON trader_info.trader_id = trade_history.trader_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_name, MAX(price) AS highest_price FROM security_info JOIN price_quotes ON security_info.security_id = price_quotes.security_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_id, AVG(quantity) AS average_quantity FROM trade_history GROUP BY security_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT trader_name, COUNT(*) AS total_trades FROM trader_info JOIN trade_history ON trader_info.trader_id = trade_history.trader_id GROUP BY trader_name",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT security_name, exchange, price FROM security_info JOIN price_quotes ON security_info.security_id = price_quotes.security_id",
  "### TABLEDATA\n\nCREATE TABLE price_quotes (\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (security_id, timestamp)\n);\n\n\nCREATE TABLE trade_executions (\n    trade_id INT NOT NULL,\n    security_id INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n\nCREATE TABLE security_info (\n    security_id INT NOT NULL,\n    security_name VARCHAR(50) NOT NULL,\n    exchange VARCHAR(20) NOT NULL,\n    PRIMARY KEY (security_id)\n);\n\n\nCREATE TABLE trader_info (\n    trader_id INT NOT NULL,\n    trader_name VARCHAR(50) NOT NULL,\n    PRIMARY KEY (trader_id)\n);\n\n\nCREATE TABLE trade_history (\n    trade_id INT NOT NULL,\n    trader_id INT NOT NULL,\n    security_id INT NOT NULL,\n    trade_timestamp TIMESTAMP NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    PRIMARY KEY (trade_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trade_executions WHERE price >= 100 ORDER BY trade_timestamp ASC"
]