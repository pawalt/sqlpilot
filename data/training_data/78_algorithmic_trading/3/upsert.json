[
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (1, 101, 'AAPL', 10, 150.00, 'buy', '2022-05-01') ON DUPLICATE KEY UPDATE client_id = 101, quantity = 10, price = 150.00, order_type = 'buy', order_date = '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (2, 102, 'GOOGL', 15, 200.50, 'sell', '2022-05-02') ON DUPLICATE KEY UPDATE client_id = 102, quantity = 15, price = 200.50, order_type = 'sell', order_date = '2022-05-02';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (3, 103, 'AMZN', 20, 1800.75, 'buy', '2022-05-03') ON DUPLICATE KEY UPDATE client_id = 103, quantity = 20, price = 1800.75, order_type = 'buy', order_date = '2022-05-03';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (4, 104, 'MSFT', 12, 300.25, 'sell', '2022-05-04') ON DUPLICATE KEY UPDATE client_id = 104, quantity = 12, price = 300.25, order_type = 'sell', order_date = '2022-05-04';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (5, 105, 'FB', 25, 330.50, 'buy', '2022-05-05') ON DUPLICATE KEY UPDATE client_id = 105, quantity = 25, price = 330.50, order_type = 'buy', order_date = '2022-05-05';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (6, 106, 'TSLA', 18, 700.00, 'sell', '2022-05-06') ON DUPLICATE KEY UPDATE client_id = 106, quantity = 18, price = 700.00, order_type = 'sell', order_date = '2022-05-06';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (7, 107, 'NFLX', 30, 550.75, 'buy', '2022-05-07') ON DUPLICATE KEY UPDATE client_id = 107, quantity = 30, price = 550.75, order_type = 'buy', order_date = '2022-05-07';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (8, 108, 'NVDA', 22, 625.80, 'sell', '2022-05-08') ON DUPLICATE KEY UPDATE client_id = 108, quantity = 22, price = 625.80, order_type = 'sell', order_date = '2022-05-08';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (9, 109, 'BTC', 5, 60000.00, 'buy', '2022-05-09') ON DUPLICATE KEY UPDATE client_id = 109, quantity = 5, price = 60000.00, order_type = 'buy', order_date = '2022-05-09';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (10, 110, 'ETH', 8, 2500.50, 'sell', '2022-05-10') ON DUPLICATE KEY UPDATE client_id = 110, quantity = 8, price = 2500.50, order_type = 'sell', order_date = '2022-05-10';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (11, 111, 'AAPL', 15, 160.25, 'buy', '2022-05-11') ON DUPLICATE KEY UPDATE client_id = 111, quantity = 15, price = 160.25, order_type = 'buy', order_date = '2022-05-11';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (12, 112, 'GOOGL', 10, 205.75, 'sell', '2022-05-12') ON DUPLICATE KEY UPDATE client_id = 112, quantity = 10, price = 205.75, order_type = 'sell', order_date = '2022-05-12';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (13, 113, 'AMZN', 18, 1850.90, 'buy', '2022-05-13') ON DUPLICATE KEY UPDATE client_id = 113, quantity = 18, price = 1850.90, order_type = 'buy', order_date = '2022-05-13';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (14, 114, 'MSFT', 25, 310.75, 'sell', '2022-05-14') ON DUPLICATE KEY UPDATE client_id = 114, quantity = 25, price = 310.75, order_type = 'sell', order_date = '2022-05-14';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (15, 115, 'FB', 20, 335.25, 'buy', '2022-05-15') ON DUPLICATE KEY UPDATE client_id = 115, quantity = 20, price = 335.25, order_type = 'buy', order_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (16, 116, 'TSLA', 30, 725.50, 'sell', '2022-05-16') ON DUPLICATE KEY UPDATE client_id = 116, quantity = 30, price = 725.50, order_type = 'sell', order_date = '2022-05-16';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (17, 117, 'NFLX', 22, 570.90, 'buy', '2022-05-17') ON DUPLICATE KEY UPDATE client_id = 117, quantity = 22, price = 570.90, order_type = 'buy', order_date = '2022-05-17';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (18, 118, 'NVDA', 15, 630.25, 'sell', '2022-05-18') ON DUPLICATE KEY UPDATE client_id = 118, quantity = 15, price = 630.25, order_type = 'sell', order_date = '2022-05-18';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (19, 119, 'BTC', 10, 62000.25, 'buy', '2022-05-19') ON DUPLICATE KEY UPDATE client_id = 119, quantity = 10, price = 62000.25, order_type = 'buy', order_date = '2022-05-19';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (20, 120, 'ETH', 12, 2600.75, 'sell', '2022-05-20') ON DUPLICATE KEY UPDATE client_id = 120, quantity = 12, price = 2600.75, order_type = 'sell', order_date = '2022-05-20';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (1, 101, 'AAPL', 100, 1500.50, 'buy', '2022-01-05') ON DUPLICATE KEY UPDATE client_id = 101, stock_symbol = 'AAPL', quantity = 100, price = 1500.50, order_type = 'buy', order_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (2, 102, 'GOOGL', 50, 2500.75, 'sell', '2022-01-06') ON DUPLICATE KEY UPDATE client_id = 102, stock_symbol = 'GOOGL', quantity = 50, price = 2500.75, order_type = 'sell', order_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (3, 103, 'MSFT', 75, 3000.25, 'buy', '2022-01-07') ON DUPLICATE KEY UPDATE client_id = 103, stock_symbol = 'MSFT', quantity = 75, price = 3000.25, order_type = 'buy', order_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (4, 104, 'TSLA', 200, 5000.00, 'sell', '2022-01-08') ON DUPLICATE KEY UPDATE client_id = 104, stock_symbol = 'TSLA', quantity = 200, price = 5000.00, order_type = 'sell', order_date = '2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (5, 105, 'AMZN', 150, 3500.50, 'buy', '2022-01-09') ON DUPLICATE KEY UPDATE client_id = 105, stock_symbol = 'AMZN', quantity = 150, price = 3500.50, order_type = 'buy', order_date = '2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (6, 106, 'NFLX', 120, 2800.75, 'sell', '2022-01-10') ON DUPLICATE KEY UPDATE client_id = 106, stock_symbol = 'NFLX', quantity = 120, price = 2800.75, order_type = 'sell', order_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (7, 107, 'FB', 80, 2000.25, 'buy', '2022-01-11') ON DUPLICATE KEY UPDATE client_id = 107, stock_symbol = 'FB', quantity = 80, price = 2000.25, order_type = 'buy', order_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (8, 108, 'NVDA', 100, 4200.00, 'sell', '2022-01-12') ON DUPLICATE KEY UPDATE client_id = 108, stock_symbol = 'NVDA', quantity = 100, price = 4200.00, order_type = 'sell', order_date = '2022-01-12';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (9, 109, 'MSFT', 50, 1500.50, 'buy', '2022-01-13') ON DUPLICATE KEY UPDATE client_id = 109, stock_symbol = 'MSFT', quantity = 50, price = 1500.50, order_type = 'buy', order_date = '2022-01-13';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (10, 110, 'AAPL', 75, 2000.75, 'sell', '2022-01-14') ON DUPLICATE KEY UPDATE client_id = 110, stock_symbol = 'AAPL', quantity = 75, price = 2000.75, order_type = 'sell', order_date = '2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (11, 111, 'GOOGL', 100, 3000.25, 'buy', '2022-01-15') ON DUPLICATE KEY UPDATE client_id = 111, stock_symbol = 'GOOGL', quantity = 100, price = 3000.25, order_type = 'buy', order_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (12, 112, 'TSLA', 200, 5000.00, 'sell', '2022-01-16') ON DUPLICATE KEY UPDATE client_id = 112, stock_symbol = 'TSLA', quantity = 200, price = 5000.00, order_type = 'sell', order_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (13, 113, 'AMZN', 150, 4000.50, 'buy', '2022-01-17') ON DUPLICATE KEY UPDATE client_id = 113, stock_symbol = 'AMZN', quantity = 150, price = 4000.50, order_type = 'buy', order_date = '2022-01-17';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (14, 114, 'NFLX', 120, 3500.75, 'sell', '2022-01-18') ON DUPLICATE KEY UPDATE client_id = 114, stock_symbol = 'NFLX', quantity = 120, price = 3500.75, order_type = 'sell', order_date = '2022-01-18';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (15, 115, 'FB', 80, 2500.25, 'buy', '2022-01-19') ON DUPLICATE KEY UPDATE client_id = 115, stock_symbol = 'FB', quantity = 80, price = 2500.25, order_type = 'buy', order_date = '2022-01-19';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (16, 116, 'NVDA', 100, 4500.00, 'sell', '2022-01-20') ON DUPLICATE KEY UPDATE client_id = 116, stock_symbol = 'NVDA', quantity = 100, price = 4500.00, order_type = 'sell', order_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (17, 117, 'MSFT', 50, 2000.50, 'buy', '2022-01-21') ON DUPLICATE KEY UPDATE client_id = 117, stock_symbol = 'MSFT', quantity = 50, price = 2000.50, order_type = 'buy', order_date = '2022-01-21';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (18, 118, 'AAPL', 75, 2500.75, 'sell', '2022-01-22') ON DUPLICATE KEY UPDATE client_id = 118, stock_symbol = 'AAPL', quantity = 75, price = 2500.75, order_type = 'sell', order_date = '2022-01-22';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (19, 119, 'GOOGL', 100, 3200.25, 'buy', '2022-01-23') ON DUPLICATE KEY UPDATE client_id = 119, stock_symbol = 'GOOGL', quantity = 100, price = 3200.25, order_type = 'buy', order_date = '2022-01-23';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, client_id, stock_symbol, quantity, price, order_type, order_date) VALUES (20, 120, 'TSLA', 200, 5500.00, 'sell', '2022-01-24') ON DUPLICATE KEY UPDATE client_id = 120, stock_symbol = 'TSLA', quantity = 200, price = 5500.00, order_type = 'sell', order_date = '2022-01-24';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (1, 'BUY', '2022-01-01', 100, 50.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 100, price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (2, 'SELL', '2022-01-02', 80, 60.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 80, price = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (3, 'BUY', '2022-01-03', 120, 70.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 120, price = 70.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (4, 'SELL', '2022-01-04', 90, 65.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 90, price = 65.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (5, 'BUY', '2022-01-05', 110, 55.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 110, price = 55.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (6, 'SELL', '2022-01-06', 95, 70.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 95, price = 70.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (7, 'BUY', '2022-01-07', 130, 45.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 130, price = 45.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (8, 'SELL', '2022-01-08', 100, 60.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 100, price = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (9, 'BUY', '2022-01-09', 140, 40.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 140, price = 40.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (10, 'SELL', '2022-01-10', 70, 75.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 70, price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (11, 'BUY', '2022-01-11', 150, 35.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 150, price = 35.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (12, 'SELL', '2022-01-12', 60, 80.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 60, price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (13, 'BUY', '2022-01-13', 170, 30.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 170, price = 30.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (14, 'SELL', '2022-01-14', 50, 85.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 50, price = 85.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (15, 'BUY', '2022-01-15', 190, 25.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 190, price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (16, 'SELL', '2022-01-16', 40, 90.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 40, price = 90.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (17, 'BUY', '2022-01-17', 210, 20.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 210, price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (18, 'SELL', '2022-01-18', 30, 95.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 30, price = 95.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (19, 'BUY', '2022-01-19', 230, 15.00) ON DUPLICATE KEY UPDATE order_type = 'BUY', quantity = 230, price = 15.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (20, 'SELL', '2022-01-20', 20, 100.00) ON DUPLICATE KEY UPDATE order_type = 'SELL', quantity = 20, price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (1, 'Buy', '2022-01-20', 100, 50.00) ON DUPLICATE KEY UPDATE order_type = 'Buy', quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, order_id, transaction_date, amount, transaction_type) VALUES (1, 1, '2022-01-20', 5000.00, 'Credit') ON DUPLICATE KEY UPDATE amount = 5000.00, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO trade_orders (order_id, order_type, order_date, quantity, price) VALUES (2, 'Sell', '2022-01-21', 75, 60.00) ON DUPLICATE KEY UPDATE order_type = 'Sell', quantity = 75;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, order_id, transaction_date, amount, transaction_type) VALUES (2, 2, '2022-01-21', 4500.00, 'Debit') ON DUPLICATE KEY UPDATE amount = 4500.00, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO tr...",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (1, '2022-08-01', 'Product A', 10, 25.00, 250.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-01', product_name = 'Product A', order_quantity = 10, unit_price = 25.00, total_price = 250.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (2, '2022-08-02', 'Product B', 15, 20.00, 300.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-02', product_name = 'Product B', order_quantity = 15, unit_price = 20.00, total_price = 300.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (3, '2022-08-03', 'Product C', 20, 30.00, 600.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-03', product_name = 'Product C', order_quantity = 20, unit_price = 30.00, total_price = 600.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (4, '2022-08-04', 'Product D', 25, 35.00, 875.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-04', product_name = 'Product D', order_quantity = 25, unit_price = 35.00, total_price = 875.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (5, '2022-08-05', 'Product E', 30, 40.00, 1200.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-05', product_name = 'Product E', order_quantity = 30, unit_price = 40.00, total_price = 1200.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (6, '2022-08-06', 'Product F', 35, 45.00, 1575.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-06', product_name = 'Product F', order_quantity = 35, unit_price = 45.00, total_price = 1575.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (7, '2022-08-07', 'Product G', 40, 50.00, 2000.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-07', product_name = 'Product G', order_quantity = 40, unit_price = 50.00, total_price = 2000.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (8, '2022-08-08', 'Product H', 45, 55.00, 2475.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-08', product_name = 'Product H', order_quantity = 45, unit_price = 55.00, total_price = 2475.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (9, '2022-08-09', 'Product I', 50, 60.00, 3000.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-09', product_name = 'Product I', order_quantity = 50, unit_price = 60.00, total_price = 3000.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (10, '2022-08-10', 'Product J', 55, 65.00, 3575.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-10', product_name = 'Product J', order_quantity = 55, unit_price = 65.00, total_price = 3575.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (11, '2022-08-11', 'Product K', 60, 70.00, 4200.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-11', product_name = 'Product K', order_quantity = 60, unit_price = 70.00, total_price = 4200.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (12, '2022-08-12', 'Product L', 65, 75.00, 4875.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-12', product_name = 'Product L', order_quantity = 65, unit_price = 75.00, total_price = 4875.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (13, '2022-08-13', 'Product M', 70, 80.00, 5600.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-13', product_name = 'Product M', order_quantity = 70, unit_price = 80.00, total_price = 5600.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (14, '2022-08-14', 'Product N', 75, 85.00, 6375.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-14', product_name = 'Product N', order_quantity = 75, unit_price = 85.00, total_price = 6375.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (15, '2022-08-15', 'Product O', 80, 90.00, 7200.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-15', product_name = 'Product O', order_quantity = 80, unit_price = 90.00, total_price = 7200.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (16, '2022-08-16', 'Product P', 85, 95.00, 8075.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-16', product_name = 'Product P', order_quantity = 85, unit_price = 95.00, total_price = 8075.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (17, '2022-08-17', 'Product Q', 90, 100.00, 9000.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-17', product_name = 'Product Q', order_quantity = 90, unit_price = 100.00, total_price = 9000.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (18, '2022-08-18', 'Product R', 95, 105.00, 9975.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-18', product_name = 'Product R', order_quantity = 95, unit_price = 105.00, total_price = 9975.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (19, '2022-08-19', 'Product S', 100, 110.00, 11000.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-19', product_name = 'Product S', order_quantity = 100, unit_price = 110.00, total_price = 11000.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (20, '2022-08-20', 'Product T', 105, 115.00, 12075.00) ON CONFLICT (order_id) DO UPDATE SET order_date = '2022-08-20', product_name = 'Product T', order_quantity = 105, unit_price = 115.00, total_price = 12075.00",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (1, '2022-01-01', 'Product A', 10, 50.00, 500.00) ON DUPLICATE KEY UPDATE order_quantity = 10, unit_price = 50.00, total_price = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (2, '2022-01-02', 'Product B', 15, 40.00, 600.00) ON DUPLICATE KEY UPDATE order_quantity = 15, unit_price = 40.00, total_price = 600.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (3, '2022-01-03', 'Product C', 20, 30.00, 700.00) ON DUPLICATE KEY UPDATE order_quantity = 20, unit_price = 30.00, total_price = 700.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (4, '2022-01-04', 'Product D', 25, 20.00, 800.00) ON DUPLICATE KEY UPDATE order_quantity = 25, unit_price = 20.00, total_price = 800.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (5, '2022-01-05', 'Product E', 30, 10.00, 900.00) ON DUPLICATE KEY UPDATE order_quantity = 30, unit_price = 10.00, total_price = 900.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (6, '2022-01-06', 'Product F', 35, 70.00, 2450.00) ON DUPLICATE KEY UPDATE order_quantity = 35, unit_price = 70.00, total_price = 2450.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (7, '2022-01-07', 'Product G', 40, 60.00, 2400.00) ON DUPLICATE KEY UPDATE order_quantity = 40, unit_price = 60.00, total_price = 2400.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (8, '2022-01-08', 'Product H', 45, 50.00, 2250.00) ON DUPLICATE KEY UPDATE order_quantity = 45, unit_price = 50.00, total_price = 2250.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (9, '2022-01-09', 'Product I', 50, 40.00, 2000.00) ON DUPLICATE KEY UPDATE order_quantity = 50, unit_price = 40.00, total_price = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (10, '2022-01-10', 'Product J', 55, 30.00, 1650.00) ON DUPLICATE KEY UPDATE order_quantity = 55, unit_price = 30.00, total_price = 1650.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (11, '2022-01-11', 'Product K', 60, 20.00, 1200.00) ON DUPLICATE KEY UPDATE order_quantity = 60, unit_price = 20.00, total_price = 1200.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (12, '2022-01-12', 'Product L', 65, 10.00, 650.00) ON DUPLICATE KEY UPDATE order_quantity = 65, unit_price = 10.00, total_price = 650.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (13, '2022-01-13', 'Product M', 70, 55.00, 3850.00) ON DUPLICATE KEY UPDATE order_quantity = 70, unit_price = 55.00, total_price = 3850.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (14, '2022-01-14', 'Product N', 75, 45.00, 3375.00) ON DUPLICATE KEY UPDATE order_quantity = 75, unit_price = 45.00, total_price = 3375.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (15, '2022-01-15', 'Product O', 80, 35.00, 2800.00) ON DUPLICATE KEY UPDATE order_quantity = 80, unit_price = 35.00, total_price = 2800.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (16, '2022-01-16', 'Product P', 85, 25.00, 2125.00) ON DUPLICATE KEY UPDATE order_quantity = 85, unit_price = 25.00, total_price = 2125.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (17, '2022-01-17', 'Product Q', 90, 95.00, 8550.00) ON DUPLICATE KEY UPDATE order_quantity = 90, unit_price = 95.00, total_price = 8550.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (18, '2022-01-18', 'Product R', 95, 85.00, 8075.00) ON DUPLICATE KEY UPDATE order_quantity = 95, unit_price = 85.00, total_price = 8075.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (19, '2022-01-19', 'Product S', 100, 75.00, 7500.00) ON DUPLICATE KEY UPDATE order_quantity = 100, unit_price = 75.00, total_price = 7500.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_date, product_name, order_quantity, unit_price, total_price) VALUES (20, '2022-01-20', 'Product T', 105, 65.00, 6825.00) ON DUPLICATE KEY UPDATE order_quantity = 105, unit_price = 65.00, total_price = 6825.00;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (1, '2022-10-10 08:00:00', 'BUY', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = EXCLUDED.order_timestamp, order_type = EXCLUDED.order_type, order_status = EXCLUDED.order_status;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (1, '2022-10-10 08:15:00', 'Accountant A', 1000.00) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = EXCLUDED.execution_timestamp, executed_by = EXCLUDED.executed_by, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (1, 'Alice', 5000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = EXCLUDED.account_owner, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (1, 1, 'Transaction successful', '2022-10-10 08:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = EXCLUDED.transaction_id, log_description = EXCLUDED.log_description, log_timestamp = EXCLUDED.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (2, '2022-10-11 09:00:00', 'SELL', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = EXCLUDED.order_timestamp, order_type = EXCLUDED.order_type, order_status = EXCLUDED.order_status;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (2, '2022-10-11 09:15:00', 'Accountant B', 2000.00) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = EXCLUDED.execution_timestamp, executed_by = EXCLUDED.executed_by, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (2, 'Bob', 7000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = EXCLUDED.account_owner, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (2, 2, 'Transaction pending', '2022-10-11 09:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = EXCLUDED.transaction_id, log_description = EXCLUDED.log_description, log_timestamp = EXCLUDED.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (3, '2022-10-12 10:00:00', 'BUY', 'CLOSED') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = EXCLUDED.order_timestamp, order_type = EXCLUDED.order_type, order_status = EXCLUDED.order_status;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (3, '2022-10-12 10:15:00', 'Accountant C', 3000.00) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = EXCLUDED.execution_timestamp, executed_by = EXCLUDED.executed_by, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (3, 'Charlie', 9000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = EXCLUDED.account_owner, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (3, 3, 'Transaction failed', '2022-10-12 10:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = EXCLUDED.transaction_id, log_description = EXCLUDED.log_description, log_timestamp = EXCLUDED.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (4, '2022-10-13 11:00:00', 'SELL', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = EXCLUDED.order_timestamp, order_type = EXCLUDED.order_type, order_status = EXCLUDED.order_status;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (4, '2022-10-13 11:15:00', 'Accountant D', 4000.00) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = EXCLUDED.execution_timestamp, executed_by = EXCLUDED.executed_by, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (4, 'David', 11000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = EXCLUDED.account_owner, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (4, 4, 'Transaction processing', '2022-10-13 11:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = EXCLUDED.transaction_id, log_description = EXCLUDED.log_description, log_timestamp = EXCLUDED.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (5, '2022-10-14 12:00:00', 'BUY', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = EXCLUDED.order_timestamp, order_type = EXCLUDED.order_type, order_status = EXCLUDED.order_status;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (5, '2022-10-14 12:15:00', 'Accountant E', 5000.00) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = EXCLUDED.execution_timestamp, executed_by = EXCLUDED.executed_by, transaction_amount = EXCLUDED.transaction_amount;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (5, 'Eve', 13000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = EXCLUDED.account_owner, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (5, 5, 'Transaction completed', '2022-10-14 12:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = EXCLUDED.transaction_id, log_description = EXCLUDED.log_description, log_timestamp = EXCLUDED.log_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (101, '2022-01-01 09:00:00', 'BUY', 'PENDING') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = '2022-01-01 09:30:00', order_type = 'SELL', order_status = 'EXECUTED';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (201, '2022-01-02 10:00:00', 'Alice', 500.50) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = '2022-01-02 10:30:00', executed_by = 'Bob', transaction_amount = 600.75;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (301, 'John Doe', 1000.20) ON CONFLICT (account_id) DO UPDATE SET account_owner = 'Jane Doe', balance = 1200.30;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (401, 201, 'Transaction successful', '2022-01-02 10:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = 202, log_description = 'Transaction failed', log_timestamp = '2022-01-02 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (102, '2022-01-02 10:00:00', 'SELL', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = '2022-01-02 10:30:00', order_type = 'BUY', order_status = 'PENDING';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (202, '2022-01-03 11:00:00', 'Charlie', 700.25) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = '2022-01-03 11:30:00', executed_by = 'David', transaction_amount = 800.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (302, 'Alice Smith', 2000.50) ON CONFLICT (account_id) DO UPDATE SET account_owner = 'Bob Johnson', balance = 2500.75;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (402, 202, 'Transaction pending', '2022-01-03 11:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = 203, log_description = 'Transaction completed', log_timestamp = '2022-01-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (103, '2022-01-03 12:00:00', 'BUY', 'EXECUTED') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = '2022-01-03 12:30:00', order_type = 'SELL', order_status = 'PENDING';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (203, '2022-01-04 13:00:00', 'Eve', 900.75) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = '2022-01-04 13:30:00', executed_by = 'Frank', transaction_amount = 1000.25;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (303, 'Carol Williams', 3000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = 'Donna Brown', balance = 3500.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (403, 203, 'Transaction failed', '2022-01-04 13:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = 204, log_description = 'Transaction successful', log_timestamp = '2022-01-04 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (104, '2022-01-04 14:00:00', 'SELL', 'OPEN') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = '2022-01-04 14:30:00', order_type = 'BUY', order_status = 'PENDING';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (204, '2022-01-05 15:00:00', 'George', 1100.25) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = '2022-01-05 15:30:00', executed_by = 'Hannah', transaction_amount = 1200.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (304, 'Emily Adams', 4000.75) ON CONFLICT (account_id) DO UPDATE SET account_owner = 'Isaac Clark', balance = 4500.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (404, 204, 'Transaction pending', '2022-01-05 15:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = 205, log_description = 'Transaction completed', log_timestamp = '2022-01-05 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO trade_orders (order_id, order_timestamp, order_type, order_status) VALUES (105, '2022-01-05 16:00:00', 'BUY', 'EXECUTED') ON CONFLICT (order_id) DO UPDATE SET order_timestamp = '2022-01-05 16:30:00', order_type = 'SELL', order_status = 'PENDING';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO executed_transactions (transaction_id, execution_timestamp, executed_by, transaction_amount) VALUES (205, '2022-01-06 17:00:00', 'Jack', 1300.75) ON CONFLICT (transaction_id) DO UPDATE SET execution_timestamp = '2022-01-06 17:30:00', executed_by = 'Kate', transaction_amount = 1400.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, account_owner, balance) VALUES (305, 'Linda Walker', 5000.00) ON CONFLICT (account_id) DO UPDATE SET account_owner = 'Mark Smith', balance = 5500.50;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_logs (log_id, transaction_id, log_description, log_timestamp) VALUES (405, 205, 'Transaction failed', '2022-01-06 17:30:00') ON CONFLICT (log_id) DO UPDATE SET transaction_id = 206, log_description = 'Transaction successful', log_timestamp = '2022-01-06 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (1, 'Buy', '2022-01-01 10:00:00', 100) ON CONFLICT (order_id) DO UPDATE SET order_type = 'Buy', order_date = '2022-01-01 10:00:00', order_quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (1, 1, 'Buy', 1000.00, '2022-01-01 10:05:00') ON CONFLICT (transaction_id) DO UPDATE SET order_id = 1, transaction_type = 'Buy', transaction_amount = 1000.00, transaction_date = '2022-01-01 10:05:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, account_name, account_balance) VALUES (1, 'John Doe', 5000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'John Doe', account_balance = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (1, 1, 'Credit', 500.00, '2022-01-01 10:10:00') ON CONFLICT (transaction_id, account_id) DO UPDATE SET transaction_type = 'Credit', transaction_amount = 500.00, transaction_date = '2022-01-01 10:10:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (1, '2022-01-01 10:15:00', 'Transaction successfully processed') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = '2022-01-01 10:15:00', log_message = 'Transaction successfully processed';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (2, 'Sell', '2022-01-02 10:00:00', 200) ON CONFLICT (order_id) DO UPDATE SET order_type = 'Sell', order_date = '2022-01-02 10:00:00', order_quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (2, 2, 'Sell', 2000.00, '2022-01-02 10:05:00') ON CONFLICT (transaction_id) DO UPDATE SET order_id = 2, transaction_type = 'Sell', transaction_amount = 2000.00, transaction_date = '2022-01-02 10:05:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, account_name, account_balance) VALUES (2, 'Jane Smith', 7000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'Jane Smith', account_balance = 7000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (2, 2, 'Debit', 700.00, '2022-01-02 10:10:00') ON CONFLICT (transaction_id, account_id) DO UPDATE SET transaction_type = 'Debit', transaction_amount = 700.00, transaction_date = '2022-01-02 10:10:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (2, '2022-01-02 10:15:00', 'Transaction successfully processed') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = '2022-01-02 10:15:00', log_message = 'Transaction successfully processed';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (3, 'Buy', '2022-01-03 10:00:00', 300) ON CONFLICT (order_id) DO UPDATE SET order_type = 'Buy', order_date = '2022-01-03 10:00:00', order_quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (3, 3, 'Buy', 3000.00, '2022-01-03 10:05:00') ON CONFLICT (transaction_id) DO UPDATE SET order_id = 3, transaction_type = 'Buy', transaction_amount = 3000.00, transaction_date = '2022-01-03 10:05:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, account_name, account_balance) VALUES (3, 'Emily Davis', 9000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'Emily Davis', account_balance = 9000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (3, 3, 'Credit', 900.00, '2022-01-03 10:10:00') ON CONFLICT (transaction_id, account_id) DO UPDATE SET transaction_type = 'Credit', transaction_amount = 900.00, transaction_date = '2022-01-03 10:10:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (3, '2022-01-03 10:15:00', 'Transaction successfully processed') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = '2022-01-03 10:15:00', log_message = 'Transaction successfully processed';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (4, 'Sell', '2022-01-04 10:00:00', 400) ON CONFLICT (order_id) DO UPDATE SET order_type = 'Sell', order_date = '2022-01-04 10:00:00', order_quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (4, 4, 'Sell', 4000.00, '2022-01-04 10:05:00') ON CONFLICT (transaction_id) DO UPDATE SET order_id = 4, transaction_type = 'Sell', transaction_amount = 4000.00, transaction_date = '2022-01-04 10:05:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Accounts (account_id, account_name, account_balance) VALUES (4, 'Michael Johnson', 11000.00) ON CONFLICT (account_id) DO UPDATE SET account_name = 'Michael Johnson', account_balance = 11000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (4, 4, 'Debit', 1100.00, '2022-01-04 10:10:00') ON CONFLICT (transaction_id, account_id) DO UPDATE SET transaction_type = 'Debit', transaction_amount = 1100.00, transaction_date = '2022-01-04 10:10:00';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (4, '2022-01-04 10:15:00', 'Transaction successfully processed') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = '2022-01-04 10:15:00', log_message = 'Transaction successfully processed';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (1, 'Buy', '2022-01-10 08:00:00', 100) ON DUPLICATE KEY UPDATE order_quantity = order_quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (1, 1, 'Buy', 5000.00, '2022-01-10 08:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Accounts (account_id, account_name, account_balance) VALUES (1, 'John Doe', 10000.00) ON DUPLICATE KEY UPDATE account_balance = account_balance + 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (1, 1, 'Deposit', 2000.00, '2022-01-10 08:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (1, '2022-01-10 08:00:00', 'Order processed successfully') ON DUPLICATE KEY UPDATE log_message = 'Order processed successfully';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (2, 'Sell', '2022-01-11 10:00:00', 200) ON DUPLICATE KEY UPDATE order_quantity = order_quantity + 200;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (2, 2, 'Sell', 3000.00, '2022-01-11 10:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Accounts (account_id, account_name, account_balance) VALUES (2, 'Jane Smith', 15000.00) ON DUPLICATE KEY UPDATE account_balance = account_balance + 15000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (2, 2, 'Withdrawal', 1000.00, '2022-01-11 10:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount - 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (2, '2022-01-11 10:00:00', 'Transaction updated successfully') ON DUPLICATE KEY UPDATE log_message = 'Transaction updated successfully';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (3, 'Buy', '2022-01-12 12:00:00', 150) ON DUPLICATE KEY UPDATE order_quantity = order_quantity + 150;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (3, 3, 'Buy', 7000.00, '2022-01-12 12:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 7000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Accounts (account_id, account_name, account_balance) VALUES (3, 'Alice Johnson', 20000.00) ON DUPLICATE KEY UPDATE account_balance = account_balance + 20000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (3, 3, 'Deposit', 3000.00, '2022-01-12 12:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (3, '2022-01-12 12:00:00', 'Account balance updated successfully') ON DUPLICATE KEY UPDATE log_message = 'Account balance updated successfully';",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO TradeOrders (order_id, order_type, order_date, order_quantity) VALUES (4, 'Sell', '2022-01-13 14:00:00', 300) ON DUPLICATE KEY UPDATE order_quantity = order_quantity + 300;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Transactions (transaction_id, order_id, transaction_type, transaction_amount, transaction_date) VALUES (4, 4, 'Sell', 2500.00, '2022-01-13 14:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 2500.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Accounts (account_id, account_name, account_balance) VALUES (4, 'Michael Williams', 18000.00) ON DUPLICATE KEY UPDATE account_balance = account_balance + 18000.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AccountTransactions (transaction_id, account_id, transaction_type, transaction_amount, transaction_date) VALUES (4, 4, 'Withdrawal', 1500.00, '2022-01-13 14:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount - 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO AuditLog (log_id, log_timestamp, log_message) VALUES (4, '2022-01-13 14:00:00', 'Withdrawal processed successfully') ON DUPLICATE KEY UPDATE log_message = 'Withdrawal processed successfully';"
]