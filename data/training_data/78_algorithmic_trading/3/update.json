[
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET quantity = 10 WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET price = 25.50 WHERE client_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET order_type = 'buy' WHERE stock_symbol = 'AAPL';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET quantity = quantity + 10 WHERE order_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET price = price * 1.05 WHERE order_type = 'buy';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n    order_id INT PRIMARY KEY,\n    client_id INT,\n    stock_symbol VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2),\n    order_type ENUM('buy', 'sell'),\n    order_date DATE\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET quantity = quantity - 5, price = price + 2.50 WHERE client_id = 2001 AND order_type = 'sell';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET price = 100.50 WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET quantity = 50 WHERE order_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 200.75 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET quantity = quantity + 10 WHERE order_id = 12345",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE transaction_type = 'BUY'",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n\torder_id INT PRIMARY KEY,\n\torder_type VARCHAR(255),\n\torder_date TIMESTAMP,\n\tquantity INT,\n\tprice DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n\ttransaction_id INT PRIMARY KEY,\n\torder_id INT,\n\ttransaction_date TIMESTAMP,\n\tamount DECIMAL(10, 2),\n\ttransaction_type VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET price = price * 0.95 WHERE order_id IN (SELECT order_id FROM transactions WHERE amount > 1000)",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET order_quantity = order_quantity + 5 WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE transaction_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE accounting SET comment = 'Processed' WHERE transaction_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE trade_orders SET total_price = order_quantity * unit_price WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_date DATE,\n  product_name VARCHAR(255),\n  order_quantity INT,\n  unit_price DECIMAL(10, 2),\n  total_price DECIMAL(10, 2)\n)},{\"table_schema\":\"CREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_date DATE,\n  order_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  status VARCHAR(20)\n)\"},{\"table_schema\":\"CREATE TABLE accounting (\n  transaction_id INT,\n  account_id INT,\n  amount DECIMAL(10, 2),\n  transaction_type VARCHAR(20),\n  comment TEXT,\n  FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE accounting SET comment = 'Approved by admin' WHERE transaction_type = 'expense'",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET order_status = 'EXECUTED' WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE executed_transactions SET executed_by = 'John Doe' WHERE transaction_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE account_balances SET balance = 500.50 WHERE account_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE trade_orders SET order_status = 'EXECUTED' WHERE order_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE executed_transactions SET executed_by = 'John Doe', transaction_amount = 2500.00 WHERE transaction_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE trade_orders (\n  order_id INT PRIMARY KEY,\n  order_timestamp TIMESTAMP,\n  order_type VARCHAR(50),\n  order_status VARCHAR(50)\n);\n\nCREATE TABLE executed_transactions (\n  transaction_id INT PRIMARY KEY,\n  execution_timestamp TIMESTAMP,\n  executed_by VARCHAR(100),\n  transaction_amount DECIMAL\n);\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  account_owner VARCHAR(100),\n  balance DECIMAL\n);\n\nCREATE TABLE transaction_logs (\n  log_id INT PRIMARY KEY,\n  transaction_id INT,\n  log_description TEXT,\n  log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE account_balances SET balance = balance - 1000.00 WHERE account_id = 5003;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE TradeOrders\nSET order_quantity = 100\nWHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Transactions\nSET transaction_amount = 5000.00\nWHERE transaction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Accounts\nSET account_balance = 15000.50\nWHERE account_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE TradeOrders SET order_type = 'Buy' WHERE order_id = 12345 AND order_quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Transactions SET transaction_amount = 2000.50, transaction_date = '2022-09-15' WHERE transaction_id = 98765",
  "### TABLEDATA\n\nCREATE TABLE TradeOrders (\n    order_id INT PRIMARY KEY,\n    order_type VARCHAR(50) NOT NULL,\n    order_date TIMESTAMP NOT NULL,\n    order_quantity INT NOT NULL\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT REFERENCES TradeOrders(order_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(100) NOT NULL,\n    account_balance DECIMAL(12, 2) NOT NULL\n);\n\nCREATE TABLE AccountTransactions (\n    transaction_id INT REFERENCES Transactions(transaction_id),\n    account_id INT REFERENCES Accounts(account_id),\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE AuditLog (\n    log_id INT PRIMARY KEY,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Accounts SET account_balance = account_balance + 5000 WHERE account_id = 789"
]