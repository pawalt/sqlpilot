[
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_type='Stocks';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_investments FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_date FROM investments WHERE investment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM investments WHERE investment_name LIKE '%Tech%';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(investment_amount) AS avg_amount FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type, investment_amount FROM investments ORDER BY investment_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM investments WHERE investment_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_date FROM investments WHERE investment_id BETWEEN 3 AND 7;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT investment_type FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type, investment_amount FROM investments WHERE investment_type = 'Real Estate';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type, investment_date FROM investments WHERE investment_amount >= 5000 AND investment_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_type IN ('Stocks', 'Bonds');",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM investments WHERE investment_name IN ('Tech Stock A', 'Real Estate Investment B');",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_id, investment_amount FROM investments WHERE investment_date < '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_date FROM investments WHERE investment_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM investments WHERE investment_amount <> 0;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_amount IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_amount > 10000 AND investment_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_type = 'Stocks';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_investments FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_id, investment_name FROM investments WHERE investment_amount BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT investment_type FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, SUM(investment_amount) AS total_amount FROM investments GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_type, AVG(investment_amount) AS average_amount FROM investments GROUP BY investment_type;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_type = 'Bonds' ORDER BY investment_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_type = 'Real Estate' ORDER BY investment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_amount > 20000 AND investment_type = 'Mutual Funds';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(investment_amount) AS highest_investment FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_id, investment_name, investment_date FROM investments WHERE investment_amount = (SELECT MAX(investment_amount) FROM investments);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(investment_amount) FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_id, investment_name, investment_type, investment_amount FROM investments WHERE investment_amount < (SELECT AVG(investment_amount) FROM investments);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_name LIKE '%Tech%';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_type, COUNT(*) AS total_investments FROM investments GROUP BY investment_type HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_name, investment_date FROM investments WHERE investment_date = (SELECT MAX(investment_date) FROM investments);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT investment_type, MIN(investment_amount) AS lowest_investment FROM investments GROUP BY investment_type;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n investment_id INT PRIMARY KEY,\n investment_name VARCHAR(255),\n investment_type VARCHAR(100),\n investment_amount DECIMAL(10, 2),\n investment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_type IN ('Stocks', 'Bonds', 'ETFs');",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, purchase_date FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment_performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, performance_date FROM investment_performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_id, performance FROM investment_performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, purchase_price FROM portfolio_investments WHERE purchase_price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, performance_date, performance FROM investment_performance WHERE performance > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, current_value FROM portfolio_investments WHERE current_value < 5000;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, quantity FROM portfolio_investments WHERE quantity >= 100;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio_investments WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, purchase_price FROM portfolio_investments ORDER BY purchase_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_id, performance_date FROM investment_performance ORDER BY performance_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, quantity FROM portfolio_investments WHERE investment_type = 'Stock';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, current_value FROM portfolio_investments WHERE quantity * current_value > 10000;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, quantity FROM portfolio_investments WHERE investment_name LIKE '%Tech%';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_id, AVG(performance) FROM investment_performance GROUP BY investment_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_id, COUNT(*) FROM investment_performance GROUP BY investment_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT id, investment_name, SUM(quantity) FROM portfolio_investments GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*), AVG(quantity) FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE purchase_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, investment_type FROM portfolio_investments WHERE investment_type = 'Stocks';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, investment_type, purchase_date FROM portfolio_investments WHERE current_value > purchase_price;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio_investments WHERE investment_type IN ('Stocks', 'Bonds');",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_date, quantity FROM portfolio_investments WHERE purchase_price > 5000;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_price, current_value, quantity FROM portfolio_investments WHERE investment_name LIKE '%Tech%';",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(id) AS total_investments FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT AVG(purchase_price) AS average_purchase_price FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT MIN(current_value) AS min_current_value FROM portfolio_investments;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, COUNT(*) AS total_performance_records FROM portfolio_investments LEFT JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_date, current_value FROM portfolio_investments ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, current_value, performance FROM portfolio_investments INNER JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, MAX(current_value) AS max_current_value, MIN(current_value) AS min_current_value FROM portfolio_investments GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_date, performance_date, performance FROM portfolio_investments LEFT JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, purchase_price, current_value FROM portfolio_investments WHERE (purchase_price * quantity) < current_value;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, SUM(current_value) AS total_current_value FROM portfolio_investments GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE portfolio_investments (\n    id INT PRIMARY KEY,\n    investment_name VARCHAR(255),\n    investment_type VARCHAR(50),\n    purchase_date DATE,\n    purchase_price DECIMAL(10, 2),\n    quantity INT,\n    current_value DECIMAL(10, 2)\n);\n\nCREATE TABLE investment_performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    performance_date DATE,\n    performance DECIMAL(10, 2),\n    FOREIGN KEY (investment_id) REFERENCES portfolio_investments(id)\n);\n\n### STATEMENT\n\nSELECT investment_name, AVG(performance) AS average_performance FROM portfolio_investments INNER JOIN investment_performance ON portfolio_investments.id = investment_performance.investment_id GROUP BY investment_name;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT name, type FROM Investments;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT id, name, amount FROM Investments WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE date_added > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM InvestmentPerformance;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT date, performance FROM InvestmentPerformance WHERE investment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investors;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Investors WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT id, name, amount FROM Investments WHERE type = 'Stock';",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE amount BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM InvestmentPerformance WHERE performance > 10;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_investments FROM Investments;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT AVG(performance) AS avg_performance FROM InvestmentPerformance;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT type FROM Investments;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM InvestmentPerformance ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT name, email, phone FROM Investors WHERE email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE amount <= 500 AND type = 'Bond';",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE date_added BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM InvestmentPerformance WHERE performance < 5;",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE amount > 10000",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT id, name FROM Investments WHERE date_added BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT id, name, type, amount FROM Investments WHERE type = 'Stocks' AND amount > 5000",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT Investors.name, Investments.name, Investments.amount FROM Investors INNER JOIN Investments ON Investors.id = Investments.id",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT type FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT name, SUM(amount) AS total_investment FROM Investments GROUP BY name",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT Investors.name, Investments.name, InvestmentPerformance.date, InvestmentPerformance.performance FROM Investors INNER JOIN Investments ON Investors.id = Investments.id INNER JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments WHERE amount BETWEEN 5000 AND 10000 AND type = 'Bonds'",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT Investors.name, COUNT(Investments.id) AS total_investments FROM Investors INNER JOIN Investments ON Investors.id = Investments.id GROUP BY Investors.name",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT Investments.name, AVG(InvestmentPerformance.performance) AS avg_performance FROM Investments LEFT JOIN InvestmentPerformance ON Investments.id = InvestmentPerformance.investment_id GROUP BY Investments.name",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_investments FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT MAX(amount) AS highest_investment FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT MIN(amount) AS lowest_investment FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_investment FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_invested FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investments ORDER BY amount DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Investors WHERE email LIKE '%@example.com%'",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT name, DATE_FORMAT(date_added, '%Y-%m-%d') AS formatted_date_added FROM Investments",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT type, COUNT(*) AS total_count FROM Investments GROUP BY type",
  "### TABLEDATA\n\nCREATE TABLE Investments (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  type VARCHAR(50),\n  amount DECIMAL(10, 2),\n  date_added DATE\n);\n\n\nCREATE TABLE InvestmentPerformance (\n  id INT PRIMARY KEY,\n  investment_id INT,\n  date DATE,\n  performance DECIMAL(5, 2),\n  FOREIGN KEY (investment_id) REFERENCES Investments(id)\n);\n\n\nCREATE TABLE Investors (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(100),\n  phone VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM Investors WHERE phone LIKE '%123%'",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM investors;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, investor_email FROM investors;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT performance_date, performance_value FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT transaction_date, transaction_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_type = 'Stock';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, investor_email FROM investors WHERE investor_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT performance_date, performance_value FROM performance WHERE investment_id = 'xyz456';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT transaction_date, transaction_amount FROM transactions WHERE investor_id = 'def789';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments ORDER BY investment_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, investor_email FROM investors ORDER BY investor_name;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT performance_date, performance_value FROM performance WHERE performance_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT transaction_date, transaction_amount FROM transactions WHERE transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_name, investment_amount FROM investments WHERE investment_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, investor_email FROM investors WHERE investor_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT performance_date, performance_value FROM performance WHERE performance_value < 0;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT transaction_date, transaction_amount FROM transactions WHERE transaction_date < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_type = 'Stocks';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_id, investment_name FROM investments WHERE investment_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT i.investment_name, t.transaction_amount FROM investments i JOIN transactions t ON i.investment_id = t.investment_id;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) AS total_transactions FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, investment_name FROM investors JOIN investments ON investors.investment_id = investments.investment_id;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT performance_value, performance_date FROM performance WHERE investment_id IN (SELECT investment_id FROM investments WHERE investment_amount > 5000);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT MAX(performance_value) AS max_performance FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_investments FROM investments;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT AVG(performance_value) AS avg_performance FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT DISTINCT investor_name FROM investors;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_id, COUNT(*) AS transaction_count FROM transactions GROUP BY investment_id ORDER BY transaction_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investor_name, SUM(transaction_amount) AS total_transactions FROM investors JOIN transactions ON investors.investor_id = transactions.investor_id GROUP BY investor_name;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT i.investment_name, COUNT(*) AS investor_count FROM investments i LEFT JOIN investors t ON i.investment_id = t.investment_id GROUP BY i.investment_name ORDER BY investor_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_id IN (SELECT investment_id FROM transactions GROUP BY investment_id HAVING SUM(transaction_amount) > 5000);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT investment_id, AVG(transaction_amount) AS avg_transaction_amount FROM transactions GROUP BY investment_id HAVING AVG(transaction_amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT i.investment_name, MAX(performance_value) FROM investments i JOIN performance p ON i.investment_id = p.investment_id GROUP BY i.investment_name;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_transaction_amount, investment_type FROM transactions JOIN investments ON transactions.investment_id = investments.investment_id GROUP BY investment_type;",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT * FROM investments WHERE investment_amount = (SELECT MAX(investment_amount) FROM investments);",
  "### TABLEDATA\n\nCREATE TABLE investments (\n    investment_id UUID PRIMARY KEY,\n    investment_name STRING,\n    investment_type STRING,\n    investment_amount DECIMAL\n  )\n\nCREATE TABLE investors (\n    investor_id UUID PRIMARY KEY,\n    investor_name STRING,\n    investor_email STRING,\n    investment_id UUID REFERENCES investments(investment_id)\n  )\n\nCREATE TABLE performance (\n    performance_id UUID PRIMARY KEY,\n    investment_id UUID REFERENCES investments(investment_id),\n    performance_date DATE,\n    performance_value DECIMAL\n  )\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    transaction_date DATE,\n    investment_id UUID REFERENCES investments(investment_id),\n    investor_id UUID REFERENCES investors(investor_id),\n    transaction_amount DECIMAL\n  )\n\n### STATEMENT\n\nSELECT i.investment_name, AVG(transaction_amount) AS avg_transaction_amount FROM investments i JOIN transactions t ON i.investment_id = t.investment_id GROUP BY i.investment_name HAVING AVG(transaction_amount) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT id, name FROM portfolio WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT symbol, quantity FROM investment WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT id, date FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT start_value, end_value FROM performance WHERE return > 5.0;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM sector;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name FROM sector WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment_sector;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT sector_id FROM investment_sector WHERE investment_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name, description FROM portfolio WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT symbol, quantity, price FROM investment WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT id, date, start_value FROM performance WHERE end_value > start_value;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM sector WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment_sector WHERE sector_id IN (2, 4);",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name, description FROM portfolio WHERE name LIKE '%technology%';",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT symbol, quantity FROM investment ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT id, date FROM performance ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment_sector ORDER BY sector_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name, description FROM portfolio WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name, description FROM portfolio WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM investment WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT symbol, price FROM investment WHERE date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM performance WHERE start_value < end_value;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT date, return FROM performance WHERE investment_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT name, symbol, quantity FROM portfolio p JOIN investment i ON p.id = i.portfolio_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT p.name, i.symbol, i.price FROM portfolio p JOIN investment i ON p.id = i.portfolio_id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT i.date, s.name FROM investment i JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT p.name, i.symbol, p.description, i.quantity FROM portfolio p JOIN investment i ON p.id = i.portfolio_id WHERE i.price > 50;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT p.name AS portfolio_name, i.symbol AS investment_symbol, s.name AS sector_name FROM portfolio p JOIN investment i ON p.id = i.portfolio_id JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT i.symbol FROM investment i JOIN investment_sector isec ON i.id = isec.investment_id JOIN sector s ON isec.sector_id = s.id WHERE s.name = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM investment;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS average_price FROM investment;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT MAX(end_value) AS highest_return FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT MIN(start_value) AS lowest_start_value FROM performance;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_investments FROM investment;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT p.name, COUNT(i.id) AS num_investments FROM portfolio p JOIN investment i ON p.id = i.portfolio_id GROUP BY p.name;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT sector_id, COUNT(investment_id) AS num_investments FROM investment_sector GROUP BY sector_id HAVING COUNT(investment_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE portfolio (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT\n);\n\n\nCREATE TABLE investment (\n    id INT PRIMARY KEY,\n    portfolio_id INT,\n    symbol VARCHAR(10),\n    quantity INT,\n    price DECIMAL(10,2),\n    date DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolio(id)\n);\n\n\nCREATE TABLE performance (\n    id INT PRIMARY KEY,\n    investment_id INT,\n    date DATE,\n    start_value DECIMAL(10,2),\n    end_value DECIMAL(10,2),\n    return DECIMAL(5,2),\n    FOREIGN KEY (investment_id) REFERENCES investment(id)\n);\n\n\nCREATE TABLE sector (\n    id INT PRIMARY KEY,\n    name VARCHAR(50)\n);\n\n\nCREATE TABLE investment_sector (\n    investment_id INT,\n    sector_id INT,\n    PRIMARY KEY (investment_id, sector_id),\n    FOREIGN KEY (investment_id) REFERENCES investment(id),\n    FOREIGN  KEY (sector_id) REFERENCES sector(id)\n);\n\n### STATEMENT\n\nSELECT * FROM portfolio WHERE id IN (SELECT portfolio_id FROM investment WHERE quantity > 50);"
]