<t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE performance;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table performance;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE trade;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table trade;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>DROP TABLE strategy;</stat><divider><t>CREATE TABLE performance (
    performance_id INT PRIMARY KEY,
    strategy_id INT,
    total_returns DECIMAL(10,2),
    max_drawdown DECIMAL(10,2),
    total_trades INT,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE trade (
    trade_id INT PRIMARY KEY,
    strategy_id INT,
    symbol VARCHAR(10),
    entry_price DECIMAL(10,2),
    exit_price DECIMAL(10,2),
    trade_date DATE,
    FOREIGN KEY (strategy_id) REFERENCES strategy(id)
);


CREATE TABLE strategy (
    id INT PRIMARY KEY,
    strategy_name VARCHAR(100),
    strategy_description TEXT
);
</t><stat>drop table strategy;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE stocks</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table stocks</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>DROP TABLE orders</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, order_id INT NOT NULL, transaction_time TIMESTAMP NOT NULL)

CREATE TABLE orders (order_id INT PRIMARY KEY, user_id INT NOT NULL, stock_id INT NOT NULL, order_type VARCHAR(10) NOT NULL, order_quantity INT NOT NULL, order_price DECIMAL(10, 2) NOT NULL, order_status VARCHAR(10) NOT NULL)

CREATE TABLE stocks (stock_id INT PRIMARY KEY, stock_symbol VARCHAR(10) NOT NULL, stock_name VARCHAR(50) NOT NULL, stock_price DECIMAL(10, 2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL)</t><stat>drop table orders</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.stocks;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.portfolio;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );</t><stat>drop table algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>DROP TABLE algo_trading.trades;</stat><divider><t>CREATE TABLE algo_trading.strategies (   strategy_id INT PRIMARY KEY,   strategy_name STRING,   description STRING,   created_date DATE );

CREATE TABLE algo_trading.indicators (   indicator_id INT PRIMARY KEY,   symbol STRING,   indicator_type STRING,   value DECIMAL,   calculation_date DATE );

CREATE TABLE algo_trading.trades (   trade_id INT PRIMARY KEY,   symbol STRING,   quantity INT,   trade_type STRING,   trade_date DATE );

CREATE TABLE algo_trading.portfolio (   id INT PRIMARY KEY,   symbol STRING,   quantity INT );

CREATE TABLE algo_trading.stocks (   symbol STRING PRIMARY KEY,   price DECIMAL,   volume INT,   last_updated TIMESTAMP );</t><stat>drop table algo_trading.trades;</stat>