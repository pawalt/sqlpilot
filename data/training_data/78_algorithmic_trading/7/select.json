[
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data WHERE internal_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_data, external_data FROM reconciliation_data WHERE internal_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE internal_data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data WHERE external_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE external_id < 20;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE internal_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data WHERE external_data = 'test';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data WHERE internal_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE external_data LIKE '%pattern%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(internal_id) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(external_id) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(internal_id), MAX(internal_id) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, SUM(external_id) FROM reconciliation_data GROUP BY internal_id;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT external_id FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, COUNT(*) FROM reconciliation_data GROUP BY internal_id;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT internal_data) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data ORDER BY internal_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(external_id) AS avg_external_id FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, UPPER(internal_data) FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE external_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE internal_id > 500;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id, internal_data, external_data FROM reconciliation_data WHERE internal_id < 200 AND external_id > 300;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE internal_data LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id FROM reconciliation_data WHERE internal_data IS NOT NULL AND external_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE external_data = 'approved' ORDER BY external_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id FROM reconciliation_data WHERE internal_id IN (100, 200, 300);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id FROM reconciliation_data WHERE internal_data NOT LIKE '%obsolete%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(internal_id) AS total_records FROM reconciliation_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id FROM reconciliation_data LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE internal_id BETWEEN 200 AND 400;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE external_id = (SELECT MAX(external_id) FROM reconciliation_data);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE external_id IN (SELECT external_id FROM reconciliation_data WHERE external_data = 'pending');",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE external_id = ANY (SELECT external_id FROM reconciliation_data WHERE external_data = 'rejected');",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data, external_id, external_data FROM reconciliation_data WHERE internal_id = (SELECT MAX(internal_id) FROM reconciliation_data);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id, internal_data, external_data FROM reconciliation_data WHERE external_data LIKE '%urgent%' ORDER BY internal_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT external_id, external_data FROM reconciliation_data WHERE internal_data = (SELECT internal_data FROM reconciliation_data WHERE internal_id = 50);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE internal_id > (SELECT AVG(internal_id) FROM reconciliation_data);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, external_id FROM reconciliation_data WHERE external_id = (SELECT external_id FROM reconciliation_data ORDER BY internal_id DESC LIMIT 1);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data (\n    internal_id INT PRIMARY KEY,\n    internal_data TEXT,\n    external_id INT,\n    external_data TEXT\n);\n\n### STATEMENT\n\nSELECT internal_id, internal_data FROM reconciliation_data WHERE internal_data REGEXP '^[0-9]+$';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT internal_data FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT external_data FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT id, internal_data FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT action FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT timestamp FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT log_id, action FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT id, internal_data, external_data FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT log_id, action, timestamp FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT id, internal_data, external_data, action FROM reconciliation_data_sources, reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE internal_data = 'example';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE log_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE action = 'start';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE id = 1 AND internal_data = 'example';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE log_id = 5 AND action = 'start';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT id, internal_data FROM reconciliation_data_sources WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE action = 'start' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE external_data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT id, internal_data FROM reconciliation_data_sources WHERE id > 10;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE external_data LIKE '%search%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT rd.id, rl.log_id FROM reconciliation_data_sources rd JOIN reconciliation_logs rl ON rd.id = rl.log_id;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT rd.id, ra.action, ra.timestamp FROM reconciliation_data_sources rd JOIN reconciliation_logs rl ON rd.id = rl.log_id WHERE rd.id = 5;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT MIN(id) AS min_id FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT SUM(id) AS sum_id FROM reconciliation_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources ORDER BY internal_data DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE id NOT IN (1,2,3);",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_data_sources WHERE external_data IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_logs FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_data_sources (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    external_data VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    action VARCHAR(50),\n    timestamp TIMESTAMPTZ\n);\n\n### STATEMENT\n\nSELECT DISTINCT action FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, internal_data, timestamp FROM reconciliation_internal_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_external_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, external_data, timestamp FROM reconciliation_external_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, reconciliation_type, status, timestamp FROM reconciliation_logs",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT internal_data FROM reconciliation_internal_data WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT external_data FROM reconciliation_external_data WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT reconciliation_type, status FROM reconciliation_logs WHERE log_id = 1",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, internal_data FROM reconciliation_internal_data WHERE timestamp >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data WHERE internal_data LIKE '%example%'",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reconciliation_external_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM reconciliation_internal_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(id) FROM reconciliation_external_data",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(id) FROM reconciliation_logs",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, COUNT(*) FROM reconciliation_internal_data GROUP BY id",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT reconciliation_type, COUNT(*) FROM reconciliation_logs GROUP BY reconciliation_type",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, SUM(id) FROM reconciliation_internal_data GROUP BY id",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT reconciliation_type FROM reconciliation_logs",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs ORDER BY timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, internal_data, timestamp FROM reconciliation_internal_data WHERE internal_data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_external_data WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reconciliation_external_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(id) FROM reconciliation_internal_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, external_data FROM reconciliation_external_data WHERE id = 10;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT reconciliation_type AS type, status FROM reconciliation_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM reconciliation_internal_data;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(timestamp) AS min_timestamp FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM reconciliation_internal_data WHERE timestamp > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data WHERE internal_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT id, external_data FROM reconciliation_external_data WHERE external_data LIKE '%example%' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT reconciliation_type FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data WHERE timestamp < '2022-10-01' AND internal_data != 'sample';",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT reconciliation_type) AS unique_types FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT internal_data, COUNT(*) FROM reconciliation_internal_data GROUP BY internal_data HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_internal_data WHERE id IN (SELECT id FROM reconciliation_external_data WHERE timestamp < '2022-12-31');",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT log_id, status FROM reconciliation_logs WHERE reconciliation_type = 'payment' ORDER BY log_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM reconciliation_external_data WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE reconciliation_internal_data (\n    id INT PRIMARY KEY,\n    internal_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_external_data (\n    id INT PRIMARY KEY,\n    external_data VARCHAR(255),\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    reconciliation_type VARCHAR(50),\n    status VARCHAR(20),\n    timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT timestamp, COUNT(*) FROM reconciliation_internal_data GROUP BY timestamp HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, source_name FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, status FROM reconciliation_jobs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT log_id, message FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, data_type FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name, data_type FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_jobs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, source_name, data_type FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, log_id, message FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, status, created_at FROM reconciliation_jobs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, internal_source_id, external_source_id FROM reconciliation_jobs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, source_name, last_updated FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, internal_source_id, status FROM reconciliation_jobs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name, data_type, last_updated FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE job_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT log_id, log_timestamp FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, status, created_at FROM reconciliation_jobs WHERE job_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, source_name FROM external_data_sources WHERE data_type = 'SQL';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reconciliation_jobs WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT source_name FROM internal_data_sources INNER JOIN external_data_sources ON internal_data_sources.source_name = external_data_sources.source_name;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(last_updated) FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(last_updated) FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, status, created_at FROM reconciliation_jobs WHERE status = 'in_progress' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, COUNT(*) FROM reconciliation_logs GROUP BY id HAVING COUNT(*) > 10;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, message, log_timestamp FROM reconciliation_logs WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT internal_data_sources.id, external_data_sources.id, reconciliation_jobs.status FROM internal_data_sources JOIN reconciliation_jobs ON internal_data_sources.id = reconciliation_jobs.internal_source_id JOIN external_data_sources ON reconciliation_jobs.external_source_id = external_data_sources.id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources WHERE source_name LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, source_name, last_updated FROM internal_data_sources WHERE last_updated >= '2022-01-01' AND last_updated <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, COUNT(log_id) AS total_logs FROM reconciliation_logs GROUP BY job_id ORDER BY total_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT internal_data_sources.source_name FROM internal_data_sources LEFT JOIN reconciliation_jobs ON internal_data_sources.id = reconciliation_jobs.internal_source_id WHERE reconciliation_jobs.job_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, status, created_at FROM reconciliation_jobs WHERE status = 'failed' AND created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT source_name, COUNT(status) AS total_jobs FROM internal_data_sources JOIN reconciliation_jobs ON internal_data_sources.id = reconciliation_jobs.internal_source_id GROUP BY source_name ORDER BY total_jobs DESC;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources AS ids, external_data_sources AS eds, reconciliation_jobs AS rj, reconciliation_logs AS rl WHERE ids.id = rj.internal_source_id AND eds.id = rj.external_source_id AND rj.job_id = rl.job_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT job_id, MAX(log_timestamp) AS latest_log FROM reconciliation_logs GROUP BY job_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM internal_data_sources UNION ALL SELECT COUNT(*) FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE external_data_sources (\n    id INT PRIMARY KEY,\n    source_name VARCHAR(100),\n    data_type VARCHAR(50),\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE reconciliation_jobs (\n    job_id INT PRIMARY KEY,\n    internal_source_id INT,\n    external_source_id INT,\n    status VARCHAR(50),\n    created_at TIMESTAMP\n);\n\nCREATE TABLE reconciliation_logs (\n    log_id INT PRIMARY KEY,\n    job_id INT,\n    message TEXT,\n    log_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id FROM internal_data_sources WHERE id IN (SELECT internal_source_id FROM reconciliation_jobs WHERE status = 'running');",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name, connection_string FROM internal_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name, endpoint_url FROM external_data_sources;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT log_id, reconciliation_date FROM reconciliation_logs;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_results;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT result_id, internal_source_id, external_source_id FROM reconciliation_results;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_settings;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT setting_id, rule_name FROM reconciliation_settings;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT id, source_name FROM internal_data_sources WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT id, source_name FROM internal_data_sources WHERE source_name LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT endpoint_url FROM external_data_sources WHERE api_key = 'xyz123';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT status, error_message FROM reconciliation_logs WHERE status = 'failed';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT log_id, reconciliation_date FROM reconciliation_logs WHERE reconciliation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_results WHERE match_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT rule_name, match_threshold FROM reconciliation_settings WHERE match_threshold > 50;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources INNER JOIN reconciliation_results ON internal_data_sources.id = reconciliation_results.internal_source_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources LEFT JOIN reconciliation_results ON external_data_sources.id = reconciliation_results.external_source_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources RIGHT JOIN reconciliation_results ON internal_data_sources.id = reconciliation_results.internal_source_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name FROM internal_data_sources WHERE id = 3 AND source_name LIKE '%data%';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name, connection_string FROM internal_data_sources WHERE id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT api_key, endpoint_url FROM external_data_sources WHERE api_key IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name AS source, connection_string AS connection FROM internal_data_sources WHERE source_name = 'Example';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT source_name, connection_string FROM internal_data_sources WHERE connection_string LIKE '%localhost%' OR connection_string LIKE '%127.0.0.1%';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_logs WHERE reconciliation_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT log_id, status FROM reconciliation_logs WHERE status = 'Failed' AND error_message IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_results WHERE match_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT result_id, log_id, internal_source_id, external_source_id FROM reconciliation_results WHERE log_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT result_id, log_id, match_result FROM reconciliation_results WHERE internal_source_id = 5 AND external_source_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_settings WHERE match_threshold > 70;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT rule_name FROM reconciliation_settings WHERE setting_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources INNER JOIN external_data_sources ON internal_data_sources.id = external_data_sources.id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources LEFT JOIN reconciliation_logs ON internal_data_sources.id = reconciliation_logs.log_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources RIGHT JOIN reconciliation_results ON external_data_sources.id = reconciliation_results.external_source_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM external_data_sources INNER JOIN reconciliation_settings ON external_data_sources.id = reconciliation_settings.setting_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM internal_data_sources INNER JOIN reconciliation_results ON internal_data_sources.id = reconciliation_results.internal_source_id;",
  "### TABLEDATA\n\nCREATE TABLE internal_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    connection_string VARCHAR(255)\n);\n\nCREATE TABLE external_data_sources(\n    id INT PRIMARY KEY,\n    source_name VARCHAR(50),\n    api_key VARCHAR(100),\n    endpoint_url VARCHAR(255)\n);\n\nCREATE TABLE reconciliation_logs(\n    log_id INT PRIMARY KEY,\n    reconciliation_date DATE,\n    status VARCHAR(20),\n    error_message TEXT\n);\n\nCREATE TABLE reconciliation_results(\n    result_id INT PRIMARY KEY,\n    log_id INT,\n    internal_source_id INT,\n    external_source_id INT,\n    match_result BOOLEAN\n);\n\nCREATE TABLE reconciliation_settings(\n    setting_id INT PRIMARY KEY,\n    rule_name VARCHAR(50),\n    match_threshold INT\n);\n\n### STATEMENT\n\nSELECT * FROM reconciliation_results LEFT JOIN reconciliation_settings ON reconciliation_results.result_id = reconciliation_settings.setting_id;"
]