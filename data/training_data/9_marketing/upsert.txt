<t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>UPSERT INTO marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) VALUES (1, 'Alice', 'Smith', 'alice@example.com', '123-456-7890', 'ABC Company', 'Manager')</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>upsert into marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) values (1, 'alice', 'smith', 'alice@example.com', '123-456-7890', 'abc company', 'manager')</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>UPSERT INTO marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) VALUES (2, 'Bob', 'Johnson', 'bob@example.com', '456-789-0123', 'XYZ Corp', 'Developer')</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>upsert into marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) values (2, 'bob', 'johnson', 'bob@example.com', '456-789-0123', 'xyz corp', 'developer')</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>UPSERT INTO marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) VALUES (3, 'Charlie', 'Brown', 'charlie@example.com', '789-012-3456', '123 Industries', 'Analyst')</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>upsert into marketing_info (id, first_name, last_name, email, phone_number, company_name, job_title) values (3, 'charlie', 'brown', 'charlie@example.com', '789-012-3456', '123 industries', 'analyst')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>UPSERT INTO customers (id, name, email, phone_number) VALUES (1, 'John Doe', 'john@example.com', '123-456-7890')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>upsert into customers (id, name, email, phone_number) values (1, 'john doe', 'john@example.com', '123-456-7890')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>UPSERT INTO customers (id, name, email, phone_number) VALUES (2, 'Jane Smith', 'jane@example.com', '987-654-3210')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>upsert into customers (id, name, email, phone_number) values (2, 'jane smith', 'jane@example.com', '987-654-3210')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>UPSERT INTO customers (id, name, email, phone_number) VALUES (3, 'Alice Johnson', 'alice@example.com', '555-555-5555')</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>upsert into customers (id, name, email, phone_number) values (3, 'alice johnson', 'alice@example.com', '555-555-5555')</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES ('11111111-1111-1111-1111-111111111111', 'Campaign A', '2023-01-01', '2023-12-31', 10000) ON CONFLICT (campaign_id) DO UPDATE SET budget = excluded.budget;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into marketing_campaigns (campaign_id, campaign_name, start_date, end_date, budget) values ('11111111-1111-1111-1111-111111111111', 'campaign a', '2023-01-01', '2023-12-31', 10000) on conflict (campaign_id) do update set budget = excluded.budget;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO customers (customer_id, customer_name, email, phone_number, subscription_status) VALUES ('22222222-2222-2222-2222-222222222222', 'Customer X', 'customerx@example.com', '+1234567890', true) ON CONFLICT (customer_id) DO UPDATE SET email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into customers (customer_id, customer_name, email, phone_number, subscription_status) values ('22222222-2222-2222-2222-222222222222', 'customer x', 'customerx@example.com', '+1234567890', true) on conflict (customer_id) do update set email = excluded.email, phone_number = excluded.phone_number, subscription_status = excluded.subscription_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>UPSERT INTO leads (lead_id, lead_name, lead_source, lead_status, date_created) VALUES ('33333333-3333-3333-3333-333333333333', 'Lead Y', 'Website', 'Pending', '2023-06-15 08:00:00') ON CONFLICT (lead_id) DO UPDATE SET lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>upsert into leads (lead_id, lead_name, lead_source, lead_status, date_created) values ('33333333-3333-3333-3333-333333333333', 'lead y', 'website', 'pending', '2023-06-15 08:00:00') on conflict (lead_id) do update set lead_status = excluded.lead_status;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO Campaigns (campaign_id, campaign_name, start_date, end_date, budget) VALUES (1, 'Summer Sale', '2022-06-01', '2022-08-31', 5000) ON CONFLICT (campaign_id) DO UPDATE SET campaign_name = 'Summer Sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaigns (campaign_id, campaign_name, start_date, end_date, budget) values (1, 'summer sale', '2022-06-01', '2022-08-31', 5000) on conflict (campaign_id) do update set campaign_name = 'summer sale', start_date = '2022-06-01', end_date = '2022-08-31', budget = 5000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignMetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) VALUES (1, 1, 10000, 500, 50, 2000) ON CONFLICT (campaign_id) DO UPDATE SET impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignmetrics (metric_id, campaign_id, impressions, clicks, conversions, spend) values (1, 1, 10000, 500, 50, 2000) on conflict (campaign_id) do update set impressions = 10000, clicks = 500, conversions = 50, spend = 2000;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>INSERT INTO CampaignAudiences (campaign_id, audience_id) VALUES (1, 1) ON CONFLICT (campaign_id, audience_id) DO NOTHING;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>insert into campaignaudiences (campaign_id, audience_id) values (1, 1) on conflict (campaign_id, audience_id) do nothing;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO ads (id, campaign_id, ad_content) VALUES (1, 1, 'Ad content 1') ON DUPLICATE KEY UPDATE ad_content = 'Ad content 1';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into ads (id, campaign_id, ad_content) values (1, 1, 'ad content 1') on duplicate key update ad_content = 'ad content 1';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO campaigns (id, campaign_name, start_date, end_date) VALUES (1, 'Campaign 1', '2022-01-01', '2022-12-31') ON DUPLICATE KEY UPDATE campaign_name = 'Campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into campaigns (id, campaign_name, start_date, end_date) values (1, 'campaign 1', '2022-01-01', '2022-12-31') on duplicate key update campaign_name = 'campaign 1', start_date = '2022-01-01', end_date = '2022-12-31';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>INSERT INTO customers (id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>insert into customers (id, customer_name, email) values (1, 'john doe', 'john.doe@example.com') on duplicate key update customer_name = 'john doe', email = 'john.doe@example.com';</stat>