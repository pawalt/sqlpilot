<t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>GRANT SELECT, INSERT, UPDATE ON marketing_info TO marketing_team;</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>grant select, insert, update on marketing_info to marketing_team;</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>GRANT SELECT, UPDATE ON marketing_info TO data_analysis_team;</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>grant select, update on marketing_info to data_analysis_team;</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON marketing_info TO admin_team;</stat><divider><t>CREATE TABLE marketing_info( id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20), company_name VARCHAR(100), job_title VARCHAR(50) );</t><stat>grant select, insert, update, delete on marketing_info to admin_team;</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>GRANT INSERT, UPDATE, DELETE ON customers TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>grant insert, update, delete on customers to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>GRANT SELECT, UPDATE(name) ON customers TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name STRING, email STRING, phone_number STRING)</t><stat>grant select, update(name) on customers to user3</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT SELECT ON marketing_campaigns TO marketing_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant select on marketing_campaigns to marketing_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT INSERT, UPDATE ON customers TO sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant insert, update on customers to sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON leads TO sales_team;</stat><divider><t>CREATE TABLE leads (
    lead_id UUID PRIMARY KEY,
    lead_name TEXT NOT NULL,
    lead_source TEXT,
    lead_status TEXT,
    date_created TIMESTAMP
);

CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name TEXT NOT NULL,
    email TEXT,
    phone_number TEXT,
    subscription_status BOOLEAN
);

CREATE TABLE marketing_campaigns (
    campaign_id UUID PRIMARY KEY,
    campaign_name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL
);</t><stat>grant select, insert, update, delete on leads to sales_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT ON Campaigns TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select on campaigns to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT INSERT, UPDATE, DELETE ON CampaignMetrics TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant insert, update, delete on campaignmetrics to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>GRANT SELECT, INSERT ON Audiences TO marketing_team;</stat><divider><t>CREATE TABLE CampaignAudiences (campaign_id INT REFERENCES Campaigns(campaign_id), audience_id INT REFERENCES Audiences(audience_id), PRIMARY KEY (campaign_id, audience_id));

CREATE TABLE Audiences (audience_id SERIAL PRIMARY KEY, audience_name VARCHAR(50) NOT NULL, description TEXT);

CREATE TABLE CampaignMetrics (metric_id SERIAL PRIMARY KEY, campaign_id INT REFERENCES Campaigns(campaign_id), impressions INT NOT NULL, clicks INT NOT NULL, conversions INT, spend DECIMAL(10, 2) NOT NULL);

CREATE TABLE Campaigns (campaign_id SERIAL PRIMARY KEY, campaign_name VARCHAR(50) NOT NULL, start_date DATE, end_date DATE, budget DECIMAL(10, 2) NOT NULL);</t><stat>grant select, insert on audiences to marketing_team;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT SELECT ON ads TO user1;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant select on ads to user1;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT INSERT ON campaigns TO user2;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant insert on campaigns to user2;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>grant update on customers to user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>GRANT UPDATE ON customers TO user3;</stat><divider><t>CREATE TABLE interactions (
    id INT PRIMARY KEY,
    customer_id INT,
    ad_id INT,
    interaction_type TEXT
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT
);

CREATE TABLE campaigns (
    id INT PRIMARY KEY,
    campaign_name TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ads (
    id INT PRIMARY KEY,
    campaign_id INT,
    ad_content TEXT
);</t><stat>grant update on customers to user3;</stat>