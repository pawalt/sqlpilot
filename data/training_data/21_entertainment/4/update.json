[
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET ticket_price = 50.00 WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET available_tickets = 100 WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2022-12-31' WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Summer Concert' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET ticket_price = 55.00, available_tickets = available_tickets - 2 WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    ticket_price DECIMAL(10, 2),\n    available_tickets INT\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Magic Show', ticket_price = 30.00 WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_location = 'New Location' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 50.00 WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2023-01-01' WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Annual Concert', event_date = '2023-09-15' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 50.00, ticket_quantity = 200, ticket_status = 'Available' WHERE event_id IN (SELECT event_id FROM events WHERE event_name = 'Annual Concert');",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    ticket_price DECIMAL(10, 2),\n    ticket_quantity INT,\n    ticket_status VARCHAR(20),\n    FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_location = 'New Venue' WHERE event_date > '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Music Concert' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 50.00 WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE customers SET customer_email = 'john.doe@example.com' WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE events SET event_location = 'New Venue' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE tickets INNER JOIN events ON tickets.event_id = events.event_id SET ticket_price = 50.00 WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  ticket_status VARCHAR(50) NOT NULL,\n  INDEX (event_id),\n  FOREIGN KEY (event_id) REFERENCES events(event_id)\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255) NOT NULL,\n  customer_email VARCHAR(255) NOT NULL,\n  customer_phone VARCHAR(15) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE customers c, tickets t SET c.customer_phone = '+1-555-555-5555' WHERE c.customer_id = t.ticket_id AND t.ticket_status = 'Sold';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE events SET event_time = '19:00:00' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE venues SET venue_location = 'New Location' WHERE venue_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 25.50 WHERE ticket_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE venues SET venue_location = 'Updated Venue Location' WHERE venue_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    event_time TIME NOT NULL\n);\n\nCREATE TABLE venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    venue_id INT NOT NULL,\n    ticket_price DECIMAL(8, 2) NOT NULL,\n    ticket_quantity INT NOT NULL\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    ticket_id INT NOT NULL,\n    booking_date DATE NOT NULL,\n    booking_time TIME NOT NULL\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_quantity = 100, ticket_price = 50.00 WHERE ticket_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Events SET event_location='New Location' WHERE event_id=1;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Venues SET venue_location='Updated Venue Location' WHERE venue_id=2;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Users SET user_name='New Name' WHERE user_id=3;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Events SET event_location = 'New Location' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Venues SET venue_location = 'Updated Location' WHERE venue_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    venue_name VARCHAR(255) NOT NULL,\n    venue_location VARCHAR(255)\n);\n\n\nCREATE TABLE Tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255) NOT NULL,\n    user_email VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE Bookings (\n    booking_id INT PRIMARY KEY,\n    user_id INT,\n    event_id INT,\n    ticket_id INT,\n    booking_date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (event_id) REFERENCES Events(event_id),\n    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE Tickets SET ticket_price = 50.00 WHERE ticket_id = 3;"
]