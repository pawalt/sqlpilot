[
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_id, player_name FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game WHERE player_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, player_score FROM trivia_game WHERE player_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text FROM trivia_game WHERE player_name IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, player_score FROM trivia_game ORDER BY player_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT MAX(player_score) FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(player_score) FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, player_name, player_score FROM trivia_game WHERE player_score BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_name FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game WHERE question_text LIKE '%fun%';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) FROM trivia_game GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game ORDER BY question_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game ORDER BY RANDOM() LIMIT 1;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(player_score) FROM trivia_game GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game WHERE player_score > 50 ORDER BY player_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game WHERE player_score > 50;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(player_score) AS highest_score FROM trivia_game GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(player_score) AS average_score FROM trivia_game;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game ORDER BY player_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_score BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE question_id % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_text, correct_answer FROM trivia_game WHERE correct_answer = 'True';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(player_score) AS total_score FROM trivia_game GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name LIKE '%e%';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name LIKE '_lice';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE question_text LIKE '%?' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_score IN (50, 75, 100);",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(player_score) AS average_score FROM trivia_game GROUP BY player_name HAVING AVG(player_score) > 50;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_attempts FROM trivia_game GROUP BY player_name HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(player_score) - MIN(player_score) AS score_range FROM trivia_game GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM trivia_game WHERE player_name = 'Bob' OR player_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE trivia_game (\n    question_id SERIAL PRIMARY KEY,\n    question_text TEXT NOT NULL,\n    correct_answer TEXT NOT NULL,\n    player_name TEXT,\n    player_score INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM trivia_game WHERE player_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE question_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores WHERE player_id = '67890';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE question_text LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores WHERE score > 100;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT MAX(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT AVG(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions ORDER BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores ORDER BY score DESC;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_id FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE question_id = '12345' UNION SELECT player_id, score FROM player_scores WHERE player_id = '67890';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE question_id = '1234';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, COUNT(*) FROM player_scores GROUP BY question_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, AVG(score) FROM player_scores GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions LEFT JOIN player_scores ON questions.question_id = player_scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions INNER JOIN player_scores ON questions.question_id = player_scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_text LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_scores ORDER BY score DESC;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT MAX(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT MIN(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT question_id FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, SUM(score) AS total_score FROM player_scores GROUP BY question_id HAVING total_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id IN (SELECT question_id FROM player_scores WHERE score > 50);",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT AVG(score) AS average_score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id IN (SELECT player_id FROM player_scores WHERE score < 0);",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, MAX(score) AS highest_score FROM player_scores GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id NOT IN (SELECT player_id FROM player_scores);",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE LENGTH(question_text) < 50;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n\tquestion_id UUID PRIMARY KEY,\n\tquestion_text TEXT\n);\n\nCREATE TABLE player_scores (\n\tplayer_id UUID PRIMARY KEY,\n\tscore INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_text ILIKE '%database%';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT answer_text FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT answer_id, question_id, answer_text FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT player_id, score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT SUM(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT AVG(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT MAX(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT MIN(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text FROM questions JOIN answers ON questions.question_id = answers.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text FROM questions LEFT JOIN answers ON questions.question_id = answers.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text FROM questions RIGHT JOIN answers ON questions.question_id = answers.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, is_correct FROM questions JOIN answers ON questions.question_id = answers.question_id WHERE is_correct = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, score FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN player_scores ON answers.question_id = player_scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, count(answer_text) FROM questions JOIN answers ON questions.question_id = answers.question_id GROUP BY question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, MAX(score) FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN player_scores ON answers.question_id = player_scores.player_id GROUP BY question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text FROM questions WHERE question_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM answers WHERE is_correct = true;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT answer_text FROM answers WHERE question_id = 1 AND is_correct = true;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text FROM questions q JOIN answers a ON q.question_id = a.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(score) AS total_score FROM player_scores GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT q.question_text, a.answer_text, p.score FROM questions q JOIN answers a ON q.question_id = a.question_id JOIN player_scores p ON a.question_id = p.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT player_id, MAX(score) AS highest_score FROM player_scores GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_id, COUNT(answer_id) AS total_answers FROM answers GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_text LIKE '%?%';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM answers ORDER BY answer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT MAX(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT MIN(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT AVG(score) FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_id, AVG(score) AS avg_score FROM answers a JOIN player_scores p ON a.question_id = p.player_id GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_id, COUNT(answer_id) AS total_answers FROM answers GROUP BY question_id HAVING total_answers > 3;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT question_id FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT SUM(score) AS total_score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_scores WHERE player_id = (SELECT player_id FROM player_scores ORDER BY score DESC LIMIT 1);",
  "### TABLEDATA\n\nCREATE TABLE questions (\n  question_id INT PRIMARY KEY,\n  question_text TEXT\n);\n\nCREATE TABLE answers (\n  answer_id INT PRIMARY KEY,\n  question_id INT,\n  answer_text TEXT,\n  is_correct BOOLEAN\n);\n\nCREATE TABLE player_scores (\n  player_id INT,\n  score INT\n);\n\n### STATEMENT\n\nSELECT question_id, COUNT(answer_id) AS total_answers FROM answers WHERE is_correct = true GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT answer_text FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, score FROM players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players WHERE score > 100;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT score_value FROM scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_id, score_value FROM scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, score_value FROM players JOIN scores ON players.player_id = scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text FROM questions JOIN answers ON questions.question_id = answers.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players WHERE player_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players ORDER BY score DESC;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_text, answer_text, is_correct FROM questions JOIN answers ON questions.question_id = answers.question_id WHERE is_correct = true;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(score_value) AS total_score FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_questions FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT AVG(score) AS average_score FROM players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT MAX(score_value) AS highest_score FROM scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_answers FROM players JOIN answers ON players.player_id = answers.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(score) AS highest_score FROM players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT * FROM questions JOIN answers ON questions.question_id = answers.question_id WHERE answers.is_correct = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT players.player_name, scores.score_value FROM players JOIN scores ON players.player_id = scores.player_id ORDER BY scores.score_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT questions.question_text, answers.answer_text, players.player_name FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN players ON answers.player_id = players.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT questions.question_text, COUNT(answers.answer_id) AS total_answers FROM questions LEFT JOIN answers ON questions.question_id = answers.question_id GROUP BY questions.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT players.player_name, SUM(scores.score_value) AS total_score FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY players.player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(score) AS total_score FROM players GROUP BY player_name HAVING SUM(score) > 100;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(score) AS average_score FROM players GROUP BY player_name HAVING AVG(score) > 50;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(score) AS highest_score FROM players GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_text, MAX(score_value) AS highest_score FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN scores ON answers.player_id = scores.player_id GROUP BY question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_answers FROM players JOIN answers ON players.player_id = answers.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_correct_answers FROM players JOIN answers ON players.player_id = answers.player_id WHERE answers.is_correct = TRUE GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(score_value) AS average_score FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY player_name HAVING AVG(score_value) > 50;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT question_text, player_name, score_value FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN scores ON answers.player_id = scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, MAX(score_value) AS highest_score FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY player_name HAVING MAX(score_value) > 90;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, MIN(score_value) AS lowest_score FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_scores FROM players JOIN scores ON players.player_id = scores.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT questions.question_text, AVG(score_value) AS average_score FROM questions JOIN answers ON questions.question_id = answers.question_id JOIN scores ON answers.player_id = scores.player_id GROUP BY questions.question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(score_value) AS total_score FROM players JOIN scores ON players.player_id = scores.player_id WHERE player_name LIKE 'A%' GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_answers FROM players JOIN answers ON players.player_id = answers.player_id WHERE player_name LIKE '%son%' GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT,\n    player_id INT,\n    answer_text TEXT,\n    is_correct BOOLEAN\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    score INT\n);\n\nCREATE TABLE scores (\n    score_id INT PRIMARY KEY,\n    player_id INT,\n    score_value INT\n);\n\n### STATEMENT\n\nSELECT players.player_name, SUM(scores.score_value) AS total_score FROM players JOIN scores ON players.player_id = scores.player_id WHERE scores.score_value < 0 GROUP BY players.player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_text FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT answer_text, is_correct FROM answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name FROM players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT score FROM player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, question_id FROM player_answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_id, answered_at FROM player_answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_text, player_name FROM questions, players;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, score FROM players, player_scores;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, score, answered_at FROM players, player_scores, player_answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players, questions, player_answers;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM questions WHERE question_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM answers WHERE is_correct = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players INNER JOIN player_scores ON players.player_id = player_scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_text, player_name FROM questions INNER JOIN player_answers ON questions.question_id = player_answers.question_id INNER JOIN players ON player_answers.player_id = players.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, score, answer_text FROM players JOIN player_scores ON players.player_id = player_scores.player_id JOIN player_answers ON player_scores.player_id = player_answers.player_id JOIN answers ON player_answers.question_id = answers.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM questions;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_id, question_text FROM questions WHERE question_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_id, COUNT(*) FROM questions GROUP BY question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, score FROM players JOIN player_scores ON players.player_id = player_scores.player_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id WHERE player_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(score) AS average_score FROM players JOIN player_scores ON players.player_id = player_scores.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_answers FROM players JOIN player_answers ON players.player_id = player_answers.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_text, COUNT(*) AS total_answers FROM questions JOIN player_answers ON questions.question_id = player_answers.question_id GROUP BY question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_correct_answers FROM players JOIN player_answers ON players.player_id = player_answers.player_id WHERE player_answers.answer_id IN (SELECT answer_id FROM answers WHERE is_correct = TRUE) GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, is_correct FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN answers ON player_answers.answer_id = answers.answer_id JOIN questions ON player_answers.question_id = questions.question_id;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id WHERE player_answers.answered_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id WHERE question_id IN (SELECT question_id FROM questions WHERE question_text LIKE '%database%');",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM answers WHERE question_id IN (SELECT question_id FROM questions WHERE question_text LIKE '%SQL%');",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(score) AS total_score FROM players JOIN player_scores ON players.player_id = player_scores.player_id GROUP BY player_name HAVING total_score > 100;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(score) AS average_score FROM players JOIN player_scores ON players.player_id = player_scores.player_id GROUP BY player_name HAVING AVG(score) > 50;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id WHERE player_name IN (SELECT player_name FROM players WHERE player_name LIKE 'A%');",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT question_text, COUNT(*) AS total_answers FROM questions LEFT JOIN player_answers ON questions.question_id = player_answers.question_id GROUP BY question_text;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, MIN(score) AS lowest_score, MAX(score) AS highest_score FROM players JOIN player_scores ON players.player_id = player_scores.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE questions (\n    question_id INT PRIMARY KEY,\n    question_text TEXT NOT NULL\n);\n\nCREATE TABLE answers (\n    answer_id INT PRIMARY KEY,\n    question_id INT NOT NULL,\n    answer_text TEXT NOT NULL,\n    is_correct BOOLEAN NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name TEXT NOT NULL\n);\n\nCREATE TABLE player_scores (\n    score_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    score INT NOT NULL\n);\n\nCREATE TABLE player_answers (\n    answer_id INT PRIMARY KEY,\n    player_id INT NOT NULL,\n    question_id INT NOT NULL,\n    answered_at TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, question_text, answered_at FROM players JOIN player_answers ON players.player_id = player_answers.player_id JOIN questions ON player_answers.question_id = questions.question_id ORDER BY answered_at DESC LIMIT 10;"
]