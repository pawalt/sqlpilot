[
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nTRUNCATE TABLE episodes;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nTRUNCATE TABLE episodes CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nTRUNCATE TABLE episodes RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nTRUNCATE TABLE episodes CONTINUE IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nTRUNCATE TABLE episode;",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nTRUNCATE TABLE user_viewing_history;",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nTRUNCATE TABLE episode;",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nTRUNCATE TABLE user_viewing_history;",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nTRUNCATE TABLE episode; TRUNCATE TABLE user_viewing_history;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE episodes;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE viewing_history;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE episodes;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nTRUNCATE TABLE viewing_history;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE episodes;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE series;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE episodes;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE series;",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE Shows;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE Episodes;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE Users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE ViewingHistory;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE UserPreferences;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nTRUNCATE TABLE Users;"
]