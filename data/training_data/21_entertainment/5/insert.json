[
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Pilot', 1, 1, '2022-01-05')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One Where Monica Gets a Roommate', 1, 1, '2022-01-12')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Sonogram at the End', 1, 2, '2022-01-19')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Thumb', 1, 3, '2022-01-26')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with George Stephanopoulos', 1, 4, '2022-02-02')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the East German Laundry Detergent', 1, 5, '2022-02-09')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Butt', 1, 6, '2022-02-16')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Blackout', 1, 7, '2022-02-23')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One Where Nana Dies Twice', 1, 8, '2022-03-02')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One Where Underdog Gets Away', 1, 9, '2022-03-09')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Monkey', 1, 10, '2022-03-16')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with Mrs. Bing', 1, 11, '2022-03-23')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Dozen Lasagnas', 1, 12, '2022-03-30')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Boobies', 1, 13, '2022-04-06')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Candy Hearts', 1, 14, '2022-04-13')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with the Stoned Guy', 1, 15, '2022-04-20')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with Two Parts: Part 1', 1, 16, '2022-04-27')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with Two Parts: Part 2', 1, 17, '2022-05-04')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One with All the Poker', 1, 18, '2022-05-11')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The One Where the Monkey Gets Away', 1, 19, '2022-05-18')",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Pilot', 1, 1, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Beginning', 1, 2, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Revelation', 1, 3, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Secrets Unveiled', 1, 4, '2022-01-22');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Chase', 1, 5, '2022-01-29');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Missing Pieces', 1, 6, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Betrayal', 1, 7, '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Reckoning Day', 1, 8, '2022-02-19');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Final Showdown', 1, 9, '2022-02-26');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('New Beginnings', 2, 1, '2022-03-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Into the Unknown', 2, 2, '2022-03-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Discovery', 2, 3, '2022-03-19');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Unexpected Allies', 2, 4, '2022-03-26');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Dark Secrets', 2, 5, '2022-04-02');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Betrayed Trust', 2, 6, '2022-04-09');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Confrontation', 2, 7, '2022-04-16');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Deception', 2, 8, '2022-04-23');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('The Final Battle', 2, 9, '2022-04-30');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n    episode_id SERIAL PRIMARY KEY,\n    episode_name VARCHAR(100),\n    season_number INT,\n    episode_number INT,\n    air_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO episodes (episode_name, season_number, episode_number, air_date) VALUES ('Resolution', 2, 10, '2022-05-07');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (1, 'Episode 1', 1, 1, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (2, 'Episode 2', 1, 2, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (3, 'Episode 3', 1, 3, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (4, 'Episode 4', 1, 4, '2022-01-22');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (5, 'Episode 5', 1, 5, '2022-01-29');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (6, 'Episode 6', 2, 1, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (7, 'Episode 7', 2, 2, '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (8, 'Episode 8', 2, 3, '2022-02-19');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (9, 'Episode 9', 2, 4, '2022-02-26');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (10, 'Episode 10', 2, 5, '2022-03-05');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (1, 1, 1, '2022-01-01 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (2, 1, 2, '2022-01-08 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (3, 1, 3, '2022-01-15 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (4, 1, 4, '2022-01-22 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (5, 1, 5, '2022-01-29 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (6, 1, 6, '2022-02-05 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (7, 1, 7, '2022-02-12 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (8, 1, 8, '2022-02-19 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (9, 1, 9, '2022-02-26 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO user_viewing_history (id, user_id, episode_id, view_date, duration_in_seconds) VALUES (10, 1, 10, '2022-03-05 08:00:00', 3600);",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (1, 'Pilot', 1, 1, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (2, 'The Beginning', 1, 2, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (3, 'The Quest', 1, 3, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (4, 'Unexpected Twist', 1, 4, '2022-01-22');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (5, 'Cliffhanger', 1, 5, '2022-01-29');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (6, 'Revelation', 2, 1, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (7, 'The Secret', 2, 2, '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (8, 'Conspiracy', 2, 3, '2022-02-19');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (9, 'Discovery', 2, 4, '2022-02-26');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (10, 'Closure', 2, 5, '2022-03-05');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (11, 'Endgame', 3, 1, '2022-03-12');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (12, 'Final Chapter', 3, 2, '2022-03-19');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (13, 'Unveiling', 3, 3, '2022-03-26');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (14, 'Resolution', 3, 4, '2022-04-02');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (15, 'New Beginning', 3, 5, '2022-04-09');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (16, 'The Escape', 4, 1, '2022-04-16');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (17, 'The Reunion', 4, 2, '2022-04-23');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (18, 'Redemption', 4, 3, '2022-04-30');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (19, 'Farewell', 4, 4, '2022-05-07');",
  "### TABLEDATA\n\nCREATE TABLE episode (id INT PRIMARY KEY,\n        title VARCHAR(255),\n        season INT,\n        episode_number INT,\n        release_date DATE);\n\n\nCREATE TABLE user_viewing_history (id INT PRIMARY KEY,\n        user_id INT,\n        episode_id INT,\n        view_date TIMESTAMP,\n        duration_in_seconds INT);\n\n### STATEMENT\n\nINSERT INTO episode (id, title, season, episode_number, release_date) VALUES (20, 'Epilogue', 4, 5, '2022-05-14');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (1, 'The Pilot', 1, 1, 30, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (2, 'The Adventure Begins', 1, 2, 25, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (3, 'The Challenge', 1, 3, 28, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (4, 'The Discovery', 1, 4, 32, '2022-01-22');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (5, 'The Secret Revealed', 1, 5, 30, '2022-01-29');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (6, 'The Trail', 2, 1, 25, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (7, 'The Journey Continues', 2, 2, 28, '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (8, 'The Encounter', 2, 3, 30, '2022-02-19');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (9, 'The Quest', 2, 4, 32, '2022-02-26');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (10, 'The Final Chapter', 2, 5, 35, '2022-03-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (1, 'user1', 'user1@example.com', 'premium', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (2, 'user2', 'user2@example.com', 'standard', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (3, 'user3', 'user3@example.com', 'premium', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (4, 'user4', 'user4@example.com', 'standard', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (5, 'user5', 'user5@example.com', 'premium', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (1, 1, 1, '2022-01-01 10:00:00', 30);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (2, 1, 2, '2022-01-01 10:35:00', 25);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (3, 1, 3, '2022-01-01 11:00:00', 28);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (4, 2, 1, '2022-01-02 09:00:00', 35);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (5, 2, 3, '2022-01-02 09:45:00', 30);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (1, 'Pilot', 1, 1, 45, '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (2, 'The Beginning', 1, 2, 50, '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (3, 'Uncharted Territory', 2, 1, 55, '2022-02-02');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (4, 'Confrontation', 2, 2, 48, '2022-02-09');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (5, 'Closure', 3, 1, 60, '2022-03-03');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (6, 'New Beginnings', 3, 2, 55, '2022-03-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (7, 'The Clues', 4, 1, 45, '2022-04-07');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (8, 'The Truth Revealed', 4, 2, 50, '2022-04-14');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (9, 'Into the Unknown', 5, 1, 58, '2022-05-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, episode_title, season_number, episode_number, duration_minutes, release_date) VALUES (10, 'Final Showdown', 5, 2, 65, '2022-05-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (1, 'john_doe', 'john.doe@example.com', 'premium', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (2, 'jane_smith', 'jane.smith@example.com', 'standard', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (3, 'mike_williams', 'mike.williams@example.com', 'premium', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (4, 'sara_jones', 'sara.jones@example.com', 'standard', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (5, 'adam_turner', 'adam.turner@example.com', 'premium', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (6, 'emily_jackson', 'emily.jackson@example.com', 'standard', '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (7, 'chris_brown', 'chris.brown@example.com', 'premium', '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (8, 'lisa_miller', 'lisa.miller@example.com', 'standard', '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (9, 'ryan_cook', 'ryan.cook@example.com', 'premium', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, subscription_type, registration_date) VALUES (10, 'olivia_white', 'olivia.white@example.com', 'standard', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (1, 1, 1, '2022-01-05 08:00:00', 45);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (2, 2, 3, '2022-01-08 10:00:00', 50);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (3, 3, 5, '2022-01-10 12:00:00', 55);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (4, 4, 7, '2022-01-15 14:00:00', 48);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (5, 5, 9, '2022-01-20 16:00:00', 60);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (6, 6, 2, '2022-01-25 18:00:00', 55);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (7, 7, 4, '2022-01-30 20:00:00', 45);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (8, 8, 6, '2022-02-05 22:00:00', 50);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (9, 9, 8, '2022-02-10 08:00:00', 58);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\\n    episode_id INT PRIMARY KEY,\\n    episode_title TEXT,\\n    season_number INT,\\n    episode_number INT,\\n    duration_minutes INT,\\n    release_date DATE\\n);\n\nCREATE TABLE users (\\n    user_id INT PRIMARY KEY,\\n    username TEXT,\\n    email TEXT,\\n    subscription_type TEXT,\\n    registration_date DATE\\n);\n\nCREATE TABLE viewing_history (\\n    history_id INT PRIMARY KEY,\\n    user_id INT REFERENCES users(user_id),\\n    episode_id INT REFERENCES episodes(episode_id),\\n    viewing_date TIMESTAMP,\\n    viewing_duration_minutes INT\\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, viewing_date, viewing_duration_minutes) VALUES (10, 10, 10, '2022-02-15 10:00:00', 65);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (1, 'Pilot', 1, 1, 45, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (2, 'Episode 2', 1, 2, 30, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (3, 'Episode 3', 1, 3, 40, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (4, 'Mid-Season Finale', 1, 4, 60, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (5, 'Season Finale', 1, 5, 50, '2022-02-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (6, 'S2 E1', 2, 1, 40, '2022-09-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (7, 'S2 E2', 2, 2, 35, '2022-09-17');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (8, 'S2 E3', 2, 3, 45, '2022-09-24');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (9, 'S2 E4', 2, 4, 55, '2022-10-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (10, 'S2 E5', 2, 5, 50, '2022-10-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO series (series_id, title, genre, description, release_year, total_seasons) VALUES (1, 'My Favorite Series', 'Drama', 'A captivating drama series', 2022, 2);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO series (series_id, title, genre, description, release_year, total_seasons) VALUES (2, 'Comedy Show', 'Comedy', 'Laugh out loud comedy show', 2021, 3);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO series (series_id, title, genre, description, release_year, total_seasons) VALUES (3, 'Thriller Series', 'Thriller', 'Suspenseful thriller series', 2023, 1);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO series (series_id, title, genre, description, release_year, total_seasons) VALUES (4, 'Sci-Fi Adventure', 'Sci-Fi', 'Exciting sci-fi adventure', 2020, 4);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO series (series_id, title, genre, description, release_year, total_seasons) VALUES (5, 'Cooking Show', 'Cooking', 'Delicious cooking show', 2019, 6);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, date_joined) VALUES (1, 'user1', 'user1@example.com', '2021-05-20');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, date_joined) VALUES (2, 'user2', 'user2@example.com', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, date_joined) VALUES (3, 'user3', 'user3@example.com', '2020-11-30');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, date_joined) VALUES (4, 'user4', 'user4@example.com', '2023-02-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, date_joined) VALUES (5, 'user5', 'user5@example.com', '2019-07-12');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, date_watched, duration_watched) VALUES (1, 1, 1, '2022-01-02', 25);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, date_watched, duration_watched) VALUES (2, 1, 2, '2022-01-10', 20);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, date_watched, duration_watched) VALUES (3, 2, 1, '2022-01-05', 35);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, date_watched, duration_watched) VALUES (4, 3, 3, '2022-01-20', 40);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO viewing_history (history_id, user_id, episode_id, date_watched, duration_watched) VALUES (5, 4, 2, '2023-02-20', 30);",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (1, 'Pilot', 1, 1, 45, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (2, 'Second Episode', 1, 2, 30, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (3, 'Season Finale', 1, 10, 60, '2022-03-20');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (4, 'Special Episode', 2, 5, 50, '2022-06-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (5, 'Christmas Special', 2, 10, 45, '2022-12-25');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (6, 'Back to Episode 1', 3, 1, 55, '2023-01-02');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (7, 'Mid-Season Break', 3, 6, 40, '2023-03-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (8, 'Season Finale', 3, 12, 60, '2023-05-30');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (9, 'Recap Episode', 4, 1, 35, '2024-01-08');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (10, 'Special Crossover', 4, 5, 50, '2024-04-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (11, 'Season Premiere', 4, 7, 45, '2024-06-25');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (12, '100th Episode Celebration', 5, 10, 60, '2025-01-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (13, 'Guest Star Appearance', 5, 15, 45, '2025-04-20');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (14, 'Season Midpoint', 5, 20, 40, '2025-07-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (15, 'Season Finale', 5, 25, 60, '2025-09-30');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (16, 'Bonus Content', 6, 1, 30, '2026-01-05');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (17, 'Behind the Scenes', 6, 5, 45, '2026-04-10');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (18, 'Final Episode', 6, 10, 60, '2026-06-20');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (19, 'Epilogue', 6, 12, 20, '2026-08-15');",
  "### TABLEDATA\n\nCREATE TABLE episodes (\n  episode_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  season INT,\n  episode_number INT,\n  duration INT,\n  release_date DATE\n);\n\nCREATE TABLE series (\n  series_id INT PRIMARY KEY,\n  title VARCHAR(255),\n  genre VARCHAR(50),\n  description TEXT,\n  release_year INT,\n  total_seasons INT\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  date_joined DATE\n);\n\nCREATE TABLE viewing_history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  episode_id INT,\n  date_watched DATE,\n  duration_watched INT\n);\n\n### STATEMENT\n\nINSERT INTO episodes (episode_id, title, season, episode_number, duration, release_date) VALUES (20, 'Special Reunion', 6, 15, 50, '2026-10-31');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (1, 'Stranger Things', 'A group of kids investigates supernatural occurrences in their town.', 'Sci-Fi')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (2, 'Breaking Bad', 'A high school chemistry teacher turned methamphetamine producer.', 'Drama')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (3, 'Game of Thrones', 'A power struggle between noble families in a medieval fantasy world.', 'Fantasy')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (4, 'The Office', 'A mockumentary sitcom about the lives of office employees.', 'Comedy')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (5, 'Black Mirror', 'A series that explores the dark side of technology and society.', 'Dystopian')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (1, 1, 'Chapter One: The Vanishing of Will Byers', 1, 'The disappearance of a boy leads to strange events in town.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (2, 1, 'Chapter Two: The Weirdo on Maple Street', 2, 'The search for the missing boy continues.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (3, 2, 'Pilot', 1, 'A struggling teacher turns to crime to secure his family\u2019s future.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (4, 2, 'Cat\u2019s in the Bag...', 2, 'Walt and Jesse deal with the aftermath of their first drug deal.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (5, 3, 'Winter Is Coming', 1, 'The noble families of Westeros vie for the Iron Throne.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Episodes (episode_id, show_id, episode_title, episode_number, episode_description) VALUES (6, 3, 'The Kingsroad', 2, 'The royal entourage travels to King\u2019s Landing.')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, registration_date) VALUES (1, 'user1', 'user1@example.com', '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, registration_date) VALUES (2, 'user2', 'user2@example.com', '2022-02-01')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, registration_date) VALUES (3, 'user3', 'user3@example.com', '2022-03-01')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, registration_date) VALUES (4, 'user4', 'user4@example.com', '2022-04-01')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email, registration_date) VALUES (5, 'user5', 'user5@example.com', '2022-05-01')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (1, 1, 1, 1, '2022-01-05 10:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (2, 1, 1, 2, '2022-01-06 11:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (3, 2, 2, 3, '2022-02-10 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (4, 2, 2, 4, '2022-02-12 13:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (5, 3, 3, 5, '2022-03-20 14:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO ViewingHistory (view_id, user_id, show_id, episode_id, viewed_date) VALUES (6, 3, 3, 6, '2022-03-23 15:00:00')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO UserPreferences (user_id, preferred_genre, preferred_language) VALUES (1, 'Sci-Fi', 'English')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO UserPreferences (user_id, preferred_genre, preferred_language) VALUES (2, 'Drama', 'Spanish')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO UserPreferences (user_id, preferred_genre, preferred_language) VALUES (3, 'Fantasy', 'French')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO UserPreferences (user_id, preferred_genre, preferred_language) VALUES (4, 'Comedy', 'German')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO UserPreferences (user_id, preferred_genre, preferred_language) VALUES (5, 'Dystopian', 'Mandarin')",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (1, 'Game of Thrones', 'A fantasy drama television series', 'Fantasy');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (2, 'Stranger Things', 'A sci-fi horror series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (3, 'The Crown', 'Historical drama series', 'Drama');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (4, 'The Mandalorian', 'Space Western series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (5, 'Breaking Bad', 'A crime drama series', 'Drama');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (6, 'Black Mirror', 'Anthology science fiction series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (7, 'The Office', 'Mockumentary sitcom series', 'Comedy');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (8, 'Sherlock', 'A modern update on Sherlock Holmes stories', 'Mystery');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (9, 'Westworld', 'Science fiction western series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (10, 'Friends', 'Sitcom about six friends in New York City', 'Comedy');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (11, 'The Witcher', 'Fantasy drama series based on the book', 'Fantasy');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (12, 'Stranger Things 2', 'Sequel to the sci-fi horror series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (13, 'The Good Place', 'Comedy series set in the afterlife', 'Comedy');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (14, 'Black Mirror: Bandersnatch', 'Interactive film in the Black Mirror series', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (15, 'The Haunting of Hill House', 'Supernatural horror series', 'Horror');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (16, 'The Umbrella Academy', 'Superhero series based on the comic book', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (17, 'Breaking Bad 2', 'Sequel to the crime drama series', 'Drama');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (18, 'The Boys', 'Superhero series with a dark twist', 'Sci-Fi');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (19, 'The Crown 2', 'Continuation of the historical drama series', 'Drama');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS Shows (show_id INT PRIMARY KEY, show_title VARCHAR(255), show_description TEXT, show_genre VARCHAR(50));\n\nCREATE TABLE IF NOT EXISTS Episodes (episode_id INT PRIMARY KEY, show_id INT, episode_title VARCHAR(255), episode_number INT, episode_description TEXT, FOREIGN KEY (show_id) REFERENCES Shows(show_id));\n\nCREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(255), registration_date DATE);\n\nCREATE TABLE IF NOT EXISTS ViewingHistory (view_id INT PRIMARY KEY, user_id INT, show_id INT, episode_id INT, viewed_date TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id), FOREIGN KEY (show_id) REFERENCES Shows(show_id), FOREIGN KEY (episode_id) REFERENCES Episodes(episode_id));\n\nCREATE TABLE IF NOT EXISTS UserPreferences (user_id INT PRIMARY KEY, preferred_genre VARCHAR(50), preferred_language VARCHAR(50), FOREIGN KEY (user_id) REFERENCES Users(user_id));\n\n### STATEMENT\n\nINSERT INTO Shows (show_id, show_title, show_description, show_genre) VALUES (20, 'The Handmaid's Tale', 'Dystopian drama based on the novel', 'Drama');"
]