[
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  age INT,\n  movie_preferences VARCHAR(255)[]\n)\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    movie_preferences JSONB\n);\n\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    release_year INT,\n    genre VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users, movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(50),\n    location VARCHAR(50),\n    movie_preferences TEXT\n);\n\nCREATE TABLE movies (\n    movie_id INT PRIMARY KEY,\n    movie_title VARCHAR(100),\n    release_year INT,\n    genre VARCHAR(50)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id INT,\n    movie_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(100) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies (\n    movie_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    director VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(100)\n);\n\nCREATE TABLE user_movie_preferences (\n    user_id UUID,\n    movie_id UUID,\n    rating INT,\n    PRIMARY KEY (user_id, movie_id),\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)\n);\n\nCREATE TABLE user_connections (\n    connection_id UUID PRIMARY KEY,\n    user_id1 UUID NOT NULL,\n    user_id2 UUID NOT NULL,\n    isConnected BOOL,\n    FOREIGN KEY (user_id1) REFERENCES users(user_id),\n    FOREIGN KEY (user_id2) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE movies;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_messages;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_connections;",
  "### TABLEDATA\n\nCREATE TABLE users(\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE movies(\n    movie_id UUID PRIMARY KEY,\n    movie_title VARCHAR(255) NOT NULL,\n    release_year INT NOT NULL,\n    genre VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_movie_preferences(\n    preference_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    movie_id UUID NOT NULL\n);\n\nCREATE TABLE user_connections(\n    connection_id UUID PRIMARY KEY,\n    user_id_1 UUID NOT NULL,\n    user_id_2 UUID NOT NULL,\n    connection_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_messages(\n    message_id UUID PRIMARY KEY,\n    sender_id UUID NOT NULL,\n    receiver_id UUID NOT NULL,\n    message_content TEXT NOT NULL,\n    message_time TIMESTAMPTZ NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_movie_preferences;"
]