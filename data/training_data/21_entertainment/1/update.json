[
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET title='New Title' WHERE song_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET artist='New Artist' WHERE song_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET genre='New Genre' WHERE song_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET duration = 300 WHERE song_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET release_date = '2022-01-01' WHERE artist = 'Adele';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET genre = 'Pop', duration = 240 WHERE title = 'Shape of You';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE songs SET genre = 'Pop' WHERE song_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE songs SET artist = 'Adele' WHERE song_title = 'Hello';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE playlists SET user_id = 2 WHERE playlist_name = 'Favorites';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE songs SET genre = 'Pop', duration = 300 WHERE song_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE songs SET artist = 'John Legend' WHERE song_title = 'All of Me';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nUPDATE playlists SET playlist_name = 'Best Hits' WHERE playlist_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE songs SET title = 'New Title' WHERE song_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE playlists SET playlist_name = 'New Playlist Name' WHERE playlist_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE songs SET artist='New Artist' WHERE song_id=1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE playlists SET playlist_name='New Playlist Name' WHERE playlist_id=1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nUPDATE users SET email='newemail@example.com' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE songs SET artist_name='Adele' WHERE song_id=1;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE users SET country='Canada' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE playlists SET creation_date='2022-08-20' WHERE playlist_id=3;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE songs SET release_year = 2022 WHERE song_title = 'New Beginnings'",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE users SET country = 'USA', date_of_birth = '1990-05-15' WHERE user_name = 'JohnDoe'",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nUPDATE playlists SET creation_date = '2022-09-30' WHERE playlist_name = 'Favorite Hits'",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET genre = 'Pop' WHERE release_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE users SET favorite_genre = 'Rock' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE playlists SET description = 'New playlist description' WHERE playlist_name = 'Workout Playlist';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET genre = 'Pop', release_year = 2020 WHERE artist = 'Adele';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE users SET favorite_genre = 'Rock' WHERE registration_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nUPDATE playlists SET description = 'Updated description' WHERE creation_date >= '2022-01-01' AND user_id = '123e4567-e89b-12d3-a456-426614174000';"
]