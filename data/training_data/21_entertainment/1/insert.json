[
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 1', 'Artist 1', 'Pop', '2022-01-01', 240, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 2', 'Artist 2', 'Rock', '2022-01-05', 210, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 3', 'Artist 3', 'Hip Hop', '2022-02-15', 180, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 4', 'Artist 4', 'Electronic', '2022-03-10', 300, 4);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 5', 'Artist 5', 'R&B', '2022-04-20', 240, 5);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 6', 'Artist 6', 'Indie', '2022-05-05', 200, 6);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 7', 'Artist 7', 'Country', '2022-06-15', 220, 7);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 8', 'Artist 8', 'EDM', '2022-07-10', 260, 8);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 9', 'Artist 9', 'Pop', '2022-08-20', 230, 9);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 10', 'Artist 10', 'Hip Hop', '2022-09-05', 190, 10);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 11', 'Artist 11', 'EDM', '2022-10-15', 280, 11);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 12', 'Artist 12', 'Reggae', '2022-11-10', 270, 12);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 13', 'Artist 13', 'Jazz', '2022-12-20', 210, 13);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 14', 'Artist 14', 'Rock', '2023-01-05', 220, 14);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 15', 'Artist 15', 'Pop', '2023-02-15', 240, 15);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 16', 'Artist 16', 'R&B', '2023-03-10', 200, 16);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 17', 'Artist 17', 'Indie', '2023-04-20', 180, 17);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 18', 'Artist 18', 'Country', '2023-05-05', 220, 18);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 19', 'Artist 19', 'Classical', '2023-06-15', 250, 19);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs(title, artist, genre, release_date, duration, album_id) VALUES ('Song 20', 'Artist 20', 'Electronic', '2023-07-10', 260, 20);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 1', 'Artist 1', 'Pop', '2022-01-01', 240, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 2', 'Artist 2', 'Rock', '2021-12-15', 200, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 3', 'Artist 3', 'Hip-Hop', '2022-02-28', 180, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 4', 'Artist 4', 'Electronic', '2022-03-05', 220, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 5', 'Artist 5', 'R&B', '2022-01-20', 190, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 6', 'Artist 6', 'Pop', '2021-11-10', 210, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 7', 'Artist 7', 'Rock', '2022-04-12', 230, 4);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 8', 'Artist 8', 'Hip-Hop', '2022-05-30', 180, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 9', 'Artist 9', 'Electro', '2021-12-02', 250, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 10', 'Artist 10', 'R&B', '2022-03-15', 220, 4);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 11', 'Artist 11', 'Pop', '2022-06-05', 190, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 12', 'Artist 12', 'Rock', '2021-01-25', 200, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 13', 'Artist 13', 'Hip-Hop', '2021-09-14', 180, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 14', 'Artist 14', 'Electronic', '2020-08-30', 220, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 15', 'Artist 15', 'R&B', '2020-07-10', 190, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 16', 'Artist 16', 'Pop', '2019-05-28', 210, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 17', 'Artist 17', 'Rock', '2018-04-15', 230, 4);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 18', 'Artist 18', 'Hip-Hop', '2017-03-30', 180, 1);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 19', 'Artist 19', 'Electronic', '2016-02-12', 250, 2);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n  song_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  artist VARCHAR(100) NOT NULL,\n  genre VARCHAR(50),\n  release_date DATE,\n  duration INT,\n  album_id INT,\n  FOREIGN KEY (album_id) REFERENCES albums(album_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (title, artist, genre, release_date, duration, album_id) VALUES ('Song 20', 'Artist 20', 'R&B', '2015-01-01', 220, 3);",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 1', 'Artist 1', 'Pop', 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 2', 'Artist 2', 'Rock', 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 3', 'Artist 3', 'Hip Hop', 300)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 4', 'Artist 4', 'R&B', 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 5', 'Artist 5', 'Electronic', 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, duration) VALUES ('Song 6', 'Artist 6', 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 7', 'Artist 7', 'Indie', 190)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 8', 'Artist 8', 'Country', 220)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 9', 'Artist 9', 'Folk', 260)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 10', 'Artist 10', 'Reggae', 230)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, duration) VALUES ('Song 11', 'Artist 11', 250)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 12', 'Artist 12', 'Blues', 200)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 13', 'Artist 13', 'Jazz', 280)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 14', 'Artist 14', 'Classical', 320)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 15', 'Artist 15', 'Metal', 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 16', 'Artist 16', 'Alternative', 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 17', 'Artist 17', 'Dance', 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 18', 'Artist 18', 'Soul', 260)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 19', 'Artist 19', 'Punk', 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song 20', 'Artist 20', 'Pop', 290)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 1', 'Artist 1', 'Genre 1', 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 2', 'Artist 2', 'Genre 2', 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 3', 'Artist 3', 'Genre 1', 300)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 4', 'Artist 4', 'Genre 3', 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 5', 'Artist 5', 'Genre 2', 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 6', 'Artist 6', 'Genre 1', 330)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 7', 'Artist 7', 'Genre 3', 195)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 8', 'Artist 8', 'Genre 2', 255)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 9', 'Artist 9', 'Genre 3', 225)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 10', 'Artist 10', 'Genre 1', 280)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 11', 'Artist 1', 'Genre 2', 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 12', 'Artist 2', 'Genre 3', 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 13', 'Artist 3', 'Genre 1', 300)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 14', 'Artist 4', 'Genre 2', 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 15', 'Artist 5', 'Genre 3', 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 16', 'Artist 6', 'Genre 1', 330)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 17', 'Artist 7', 'Genre 2', 195)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 18', 'Artist 8', 'Genre 3', 255)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 19', 'Artist 9', 'Genre 1', 225)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id SERIAL PRIMARY KEY,\n    song_title VARCHAR(255) NOT NULL,\n    artist VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    duration INT\n);\n\n\nCREATE TABLE playlists (\n    playlist_id SERIAL PRIMARY KEY,\n    playlist_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_title, artist, genre, duration) VALUES ('Song Title 20', 'Artist 10', 'Genre 2', 280)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (1, 'Song1', 'Artist1', 'Pop', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (2, 'Song2', 'Artist2', 'Rock', '2022-03-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (3, 'Song3', 'Artist3', 'Hip Hop', '2022-02-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (4, 'Song4', 'Artist4', 'R&B', '2022-04-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (5, 'Song5', 'Artist5', 'Electronic', '2022-05-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (6, 'Song6', 'Artist6', 'Indie', '2022-06-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (7, 'Song7', 'Artist7', 'Pop', '2022-07-02');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (8, 'Song8', 'Artist8', 'Rock', '2022-08-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (9, 'Song9', 'Artist9', 'Hip Hop', '2022-09-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (10, 'Song10', 'Artist10', 'R&B', '2022-10-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (11, 'Song11', 'Artist11', 'Electronic', '2022-11-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (12, 'Song12', 'Artist12', 'Indie', '2022-12-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (13, 'Song13', 'Artist13', 'Pop', '2023-01-02');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (14, 'Song14', 'Artist14', 'Rock', '2023-03-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (15, 'Song15', 'Artist15', 'Hip Hop', '2023-02-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (16, 'Song16', 'Artist16', 'R&B', '2023-04-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (17, 'Song17', 'Artist17', 'Electronic', '2023-05-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (18, 'Song18', 'Artist18', 'Indie', '2023-06-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (19, 'Song19', 'Artist19', 'Pop', '2023-07-02');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (20, 'Song20', 'Artist20', 'Rock', '2023-08-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (1, 'Song1', 'Artist1', 'Pop', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (2, 'Song2', 'Artist2', 'Rock', '2021-12-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (3, 'Song3', 'Artist3', 'Hip Hop', '2022-02-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (4, 'Song4', 'Artist4', 'Rap', '2022-03-05');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (5, 'Song5', 'Artist5', 'Country', '2021-11-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (6, 'Song6', 'Artist6', 'Electronic', '2022-04-12');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (7, 'Song7', 'Artist7', 'Pop', '2021-10-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (8, 'Song8', 'Artist8', 'Rock', '2022-05-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (9, 'Song9', 'Artist9', 'Jazz', '2021-09-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (10, 'Song10', 'Artist10', 'Blues', '2022-06-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (11, 'Song11', 'Artist11', 'Reggae', '2021-08-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (12, 'Song12', 'Artist12', 'Folk', '2022-07-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (13, 'Song13', 'Artist13', 'Indie', '2021-07-05');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (14, 'Song14', 'Artist14', 'Metal', '2022-08-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (15, 'Song15', 'Artist15', 'Classical', '2021-06-10');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (16, 'Song16', 'Artist16', 'R&B', '2022-09-15');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (17, 'Song17', 'Artist17', 'Soul', '2021-05-20');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (18, 'Song18', 'Artist18', 'Reggaeton', '2022-10-25');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (19, 'Song19', 'Artist19', 'K-Pop', '2021-04-05');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    title VARCHAR(255),\n    artist VARCHAR(255),\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(255),\n    user_id INT,\n    created_date DATE,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255),\n    dob DATE\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_date) VALUES (20, 'Song20', 'Artist20', 'EDM', '2022-11-30');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (1, 'Song 1', 'Artist 1', 'Album 1', 2020, 'Pop');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (2, 'Song 2', 'Artist 2', 'Album 2', 2018, 'Rock');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (3, 'Song 3', 'Artist 3', 'Album 3', 2019, 'Hip Hop');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (4, 'Song 4', 'Artist 4', 'Album 4', 2021, 'Electronic');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (5, 'Song 5', 'Artist 5', 'Album 5', 2017, 'R&B');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (6, 'Song 6', 'Artist 6', 'Album 6', 2020, 'Indie');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (7, 'Song 7', 'Artist 7', 'Album 7', 2019, 'Reggae');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (8, 'Song 8', 'Artist 8', 'Album 8', 2016, 'Pop');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (9, 'Song 9', 'Artist 9', 'Album 9', 2015, 'Rock');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (10, 'Song 10', 'Artist 10', 'Album 10', 2014, 'Hip Hop');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (11, 'Song 11', 'Artist 11', 'Album 11', 2013, 'Jazz');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (12, 'Song 12', 'Artist 12', 'Album 12', 2012, 'Electronic');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (13, 'Song 13', 'Artist 13', 'Album 13', 2011, 'Reggae');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (14, 'Song 14', 'Artist 14', 'Album 14', 2010, 'Pop');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (15, 'Song 15', 'Artist 15', 'Album 15', 2009, 'Rock');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (16, 'Song 16', 'Artist 16', 'Album 16', 2008, 'Blues');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (17, 'Song 17', 'Artist 17', 'Album 17', 2007, 'Country');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (18, 'Song 18', 'Artist 18', 'Album 18', 2006, 'Pop Rock');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (19, 'Song 19', 'Artist 19', 'Album 19', 2005, 'R&B');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (20, 'Song 20', 'Artist 20', 'Album 20', 2004, 'Reggae');",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (1, 'Song1', 'Artist1', 'Album1', 2000, 'Pop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (2, 'Song2', 'Artist2', 'Album2', 2010, 'Rock')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (3, 'Song3', 'Artist3', 'Album3', 2020, 'Hip-hop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (4, 'Song4', 'Artist4', 'Album4', 2005, 'R&B')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO songs (song_id, song_title, artist_name, album_name, release_year, genre) VALUES (5, 'Song5', 'Artist5', 'Album5', 2015, 'Electronic')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, user_name, email, country, date_of_birth) VALUES (1, 'User1', 'user1@example.com', 'USA', '1990-05-15')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, user_name, email, country, date_of_birth) VALUES (2, 'User2', 'user2@example.com', 'Canada', '1985-10-20')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, user_name, email, country, date_of_birth) VALUES (3, 'User3', 'user3@example.com', 'UK', '1995-02-28')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, user_name, email, country, date_of_birth) VALUES (4, 'User4', 'user4@example.com', 'Australia', '1980-09-10')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, user_name, email, country, date_of_birth) VALUES (5, 'User5', 'user5@example.com', 'Germany', '2000-03-25')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, user_id, creation_date) VALUES (1, 'Playlist1', 1, '2022-01-10')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, user_id, creation_date) VALUES (2, 'Playlist2', 2, '2022-02-15')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, user_id, creation_date) VALUES (3, 'Playlist3', 3, '2022-03-20')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, user_id, creation_date) VALUES (4, 'Playlist4', 4, '2022-04-25')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, user_id, creation_date) VALUES (5, 'Playlist5', 5, '2022-05-30')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO song_playlist (song_id, playlist_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO song_playlist (song_id, playlist_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO song_playlist (song_id, playlist_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO song_playlist (song_id, playlist_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO song_playlist (song_id, playlist_id) VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_playlist (user_id, playlist_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_playlist (user_id, playlist_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_playlist (user_id, playlist_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_playlist (user_id, playlist_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id INT PRIMARY KEY,\n    song_title VARCHAR(255),\n    artist_name VARCHAR(255),\n    album_name VARCHAR(255),\n    release_year INT,\n    genre VARCHAR(50)\n)\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100),\n    email VARCHAR(255),\n    country VARCHAR(50),\n    date_of_birth DATE\n)\n\nCREATE TABLE playlists (\n    playlist_id INT PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    user_id INT,\n    creation_date DATE\n)\n\nCREATE TABLE song_playlist (\n    song_id INT,\n    playlist_id INT,\n    PRIMARY KEY (song_id, playlist_id)\n)\n\nCREATE TABLE user_playlist (\n    user_id INT,\n    playlist_id INT,\n    PRIMARY KEY (user_id, playlist_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_playlist (user_id, playlist_id) VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('1a91d9bb-a3f4-4b44-a9b4-7c6665d2c592', 'Song 1', 'Artist 1', 'Pop', 2020, 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('2bf4990f-2060-4ffd-851e-4b62996b0aa2', 'Song 2', 'Artist 2', 'Rock', 2019, 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('3d815fb2-8944-4fb7-a6cc-971d07c486fd', 'Song 3', 'Artist 3', 'Hip Hop', 2021, 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('4eaf6dd5-1a70-49e8-bffc-3cd4120f7fa6', 'Song 4', 'Artist 4', 'Electronic', 2018, 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('5fefca12-ecd1-401e-98fa-1dcf422b0a08', 'Song 5', 'Artist 5', 'Indie', 2017, 230)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('6a4a43c1-d40b-4f14-bb45-e5d6566350f1', 'Song 6', 'Artist 6', 'Pop', 2016, 250)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('7ccc01f1-1224-48eb-92fb-0bbaae08412b', 'Song 7', 'Artist 7', 'Rock', 2015, 220)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('8ed66e39-c785-4795-8cfa-5527f2a28814', 'Song 8', 'Artist 8', 'Hip Hop', 2014, 200)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('9f0fa237-4e5a-4a45-bd7c-b95edc7d3d1e', 'Song 9', 'Artist 9', 'Pop', 2013, 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('af64fe72-0f89-4df2-9e92-2c640e15208b', 'Song 10', 'Artist 10', 'Rock', 2012, 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('b0c3df03-0ffd-4f28-b11a-7fc4c2329b7a', 'Song 11', 'Artist 11', 'Hip Hop', 2011, 230)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('c12ace07-519f-4560-8e46-05e5e207368b', 'Song 12', 'Artist 12', 'Electronic', 2010, 260)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('15d78c33-9479-4f80-9c5d-f6b0d2b87f20', 'User1', 'user1@example.com', '2023-01-15', 'Pop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('2cb899d0-7c48-4452-bd36-d11081acf207', 'User2', 'user2@example.com', '2022-05-20', 'Rock')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('3e6c691e-e056-461e-9198-60536e29464d', 'User3', 'user3@example.com', '2021-09-10', 'Hip Hop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('40d5e7d8-339c-4449-bf3a-4e2a169daf4e', 'User4', 'user4@example.com', '2020-03-05', 'Electronic')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('5a30e24b-4f5f-43a9-9b8e-1bb6bc0e7a23', 'User5', 'user5@example.com', '2019-07-30', 'Indie')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('6cad8b74-09a8-47ac-8ae2-9f541eb07e8d', 'User6', 'user6@example.com', '2018-11-25', 'Pop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('71dbff65-17ed-4ba6-85d5-07ab2ff367d1', 'User7', 'user7@example.com', '2017-05-20', 'Rock')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('83cd0578-cd04-4695-9eb5-92f785ba7d78', 'User8', 'user8@example.com', '2016-09-15', 'Hip Hop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('9a7738bf-b6e5-41a2-bf6f-9e016aa5e5be', 'User9', 'user9@example.com', '2015-01-10', 'Pop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('550e8400-e29b-41d4-a716-446655440000', 'Song Title 1', 'Artist 1', 'Pop', 2021, 240)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('d08b7d26-8bbf-4787-aa29-cec5211c5d2b', 'Song Title 2', 'Artist 2', 'Rock', 2019, 180)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('212854a2-111a-4d24-91f3-ff637ca05be8', 'Song Title 3', 'Artist 3', 'R&B', 2020, 210)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('5cdf3b59-3203-431e-8a0c-2addaf5e1587', 'Song Title 4', 'Artist 4', 'Hip Hop', 2018, 300)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs (song_id, title, artist, genre, release_year, duration) VALUES ('8af5f4d1-3cc5-4e74-82f9-1e767d9d083d', 'Song Title 5', 'Artist 5', 'Country', 2017, 270)",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('f30555a7-6fe4-48d1-9397-8eccc52fbee2', 'User1', 'user1@example.com', '2020-12-01 10:00:00', 'Pop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('1f005e51-f396-4843-b978-571ec76190f9', 'User2', 'user2@example.com', '2021-02-15 08:30:00', 'Rock')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('c2947091-0cc2-4d1b-9051-07d08c51386d', 'User3', 'user3@example.com', '2019-11-20 15:45:00', 'R&B')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('6493704a-e729-4d52-a917-2fe9eab8e633', 'User4', 'user4@example.com', '2021-04-10 12:20:00', 'Hip Hop')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, registration_date, favorite_genre) VALUES ('3c26d68c-9fa0-446f-a9b1-49e495f38797', 'User5', 'user5@example.com', '2020-09-05 18:10:00', 'Country')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, description, creation_date, user_id) VALUES ('e6983adf-3635-4d9b-8502-2aa3d0eaa1a3', 'Playlist 1', 'Awesome Playlist 1', '2021-05-20 13:30:00', 'f30555a7-6fe4-48d1-9397-8eccc52fbee2')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, description, creation_date, user_id) VALUES ('316a1448-c956-4719-bb35-fc1048a06d13', 'Playlist 2', 'Amazing Playlist 2', '2020-11-10 09:45:00', '1f005e51-f396-4843-b978-571ec76190f9')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, description, creation_date, user_id) VALUES ('15c0d2a5-4457-4d20-9c58-c870172a8e02', 'Playlist 3', 'Cool Playlist 3', '2019-07-30 11:20:00', 'c2947091-0cc2-4d1b-9051-07d08c51386d')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, description, creation_date, user_id) VALUES ('2f537f09-e9b6-44de-bac7-1605c3ceddf6', 'Playlist 4', 'Good Playlist 4', '2018-04-15 14:50:00', '6493704a-e729-4d52-a917-2fe9eab8e633')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO playlists (playlist_id, playlist_name, description, creation_date, user_id) VALUES ('4f134b54-89d6-4458-925e-c2838d506f39', 'Playlist 5', 'Best Playlist 5', '2017-02-25 16:40:00', '3c26d68c-9fa0-446f-a9b1-49e495f38797')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs_in_playlists (playlist_id, song_id, added_at) VALUES ('e6983adf-3635-4d9b-8502-2aa3d0eaa1a3', '550e8400-e29b-41d4-a716-446655440000', '2021-05-20 13:35:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs_in_playlists (playlist_id, song_id, added_at) VALUES ('316a1448-c956-4719-bb35-fc1048a06d13', 'd08b7d26-8bbf-4787-aa29-cec5211c5d2b', '2020-11-10 09:50:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs_in_playlists (playlist_id, song_id, added_at) VALUES ('15c0d2a5-4457-4d20-9c58-c870172a8e02', '212854a2-111a-4d24-91f3-ff637ca05be8', '2019-07-30 11:25:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs_in_playlists (playlist_id, song_id, added_at) VALUES ('2f537f09-e9b6-44de-bac7-1605c3ceddf6', '5cdf3b59-3203-431e-8a0c-2addaf5e1587', '2018-04-15 14:55:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO songs_in_playlists (playlist_id, song_id, added_at) VALUES ('4f134b54-89d6-4458-925e-c2838d506f39', '8af5f4d1-3cc5-4e74-82f9-1e767d9d083d', '2017-02-25 16:45:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_follows (follower_id, following_id, follow_date) VALUES ('f30555a7-6fe4-48d1-9397-8eccc52fbee2', '1f005e51-f396-4843-b978-571ec76190f9', '2021-01-01 08:00:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_follows (follower_id, following_id, follow_date) VALUES ('1f005e51-f396-4843-b978-571ec76190f9', 'c2947091-0cc2-4d1b-9051-07d08c51386d', '2021-03-15 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_follows (follower_id, following_id, follow_date) VALUES ('c2947091-0cc2-4d1b-9051-07d08c51386d', '6493704a-e729-4d52-a917-2fe9eab8e633', '2020-01-20 12:45:00')",
  "### TABLEDATA\n\nCREATE TABLE songs (\n    song_id UUID PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    artist VARCHAR(255) NOT NULL,\n    genre VARCHAR(50),\n    release_year INT,\n    duration INT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    registration_date TIMESTAMP,\n    favorite_genre VARCHAR(50)\n);\n\nCREATE TABLE playlists (\n    playlist_id UUID PRIMARY KEY,\n    playlist_name VARCHAR(100),\n    description TEXT,\n    creation_date TIMESTAMP,\n    user_id UUID REFERENCES users(user_id)\n);\n\nCREATE TABLE songs_in_playlists (\n    playlist_id UUID REFERENCES playlists(playlist_id),\n    song_id UUID REFERENCES songs(song_id),\n    added_at TIMESTAMP,\n    PRIMARY KEY (playlist_id, song_id)\n);\n\nCREATE TABLE user_follows (\n    follower_id UUID REFERENCES users(user_id),\n    following_id UUID REFERENCES users(user_id),\n    follow_date TIMESTAMP,\n    PRIMARY KEY (follower_id, following_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_follows (follower_id, following_id, follow_date) VALUES ('6493704a-e729-4d52-a917-2fe9eab8e633', '3c26d68c-9fa0-446f-a9b1-49e495f38797', '2019-08-10 15:20:00')"
]