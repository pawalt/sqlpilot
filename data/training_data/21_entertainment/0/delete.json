[
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE username = 'johndoe';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE email = 'johndoe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE user_id = 100 AND subscription_type = 'Premium';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_preferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE age < 18;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE user_id = 123 AND age > 30",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_preferences WHERE genre_preference = 'Action' AND language_preference = 'English'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM user_profiles WHERE subscription_status = FALSE",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM UserProfiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM UserPreferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM WatchHistory WHERE watch_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM UserProfiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM UserPreferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nDELETE FROM WatchHistory WHERE user_id = 1 AND video_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Preferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Movies WHERE movie_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Preferences WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Users WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nDELETE FROM Movies WHERE genre = 'Action';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM playlists WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM songs WHERE playlist_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM history WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM playlists WHERE user_id = 3 AND playlist_name = 'Favorites';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nDELETE FROM songs WHERE song_id IN (SELECT song_id FROM history WHERE user_id = 2);"
]