[
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET subscription_type = 'premium' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET email = 'newemail@example.com' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET account_created_at = '2022-01-15 12:30:00' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET subscription_type = 'premium' WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET email = 'new_email@example.com', subscription_type = 'basic' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    subscription_type VARCHAR(20),\n    account_created_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE user_profiles SET account_created_at = '2022-01-01 10:00:00' WHERE email = 'old_email@example.com';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_profiles SET age = 25 WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_preferences SET genre_preference = 'Action', notification_enabled = true WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_profiles SET email = 'newemail@example.com' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_profiles SET age = age + 1 WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_profiles SET username = 'new_username', email = 'new_email@example.com' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    subscription_status BOOLEAN\n);\n\n\nCREATE TABLE user_preferences (\n    user_id INT PRIMARY KEY,\n    genre_preference VARCHAR(50),\n    language_preference VARCHAR(50),\n    notification_enabled BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE user_preferences SET genre_preference = 'Action', language_preference = 'English', notification_enabled = true WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE UserProfiles SET subscription_type='Premium' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE UserPreferences SET theme_preference='Dark' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE WatchHistory SET duration_minutes=45 WHERE watch_id=1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE UserProfiles SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE UserProfiles SET email = 'new_email@example.com' WHERE subscription_type = 'premium';",
  "### TABLEDATA\n\nCREATE TABLE UserProfiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  subscription_type VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE UserPreferences (\n  user_id INT PRIMARY KEY,\n  theme_preference VARCHAR(20),\n  language_preference VARCHAR(20),\n  autoplay_enabled BOOLEAN\n);\n\nCREATE TABLE WatchHistory (\n  watch_id INT PRIMARY KEY,\n  user_id INT,\n  video_id INT,\n  watch_date TIMESTAMP,\n  duration_minutes INT\n);\n\n### STATEMENT\n\nUPDATE WatchHistory SET duration_minutes = duration_minutes + 10 WHERE user_id = 2 AND video_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Users SET email = 'newemail@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Preferences SET theme = 'dark' WHERE pref_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Movies SET release_date = '2022-07-15' WHERE movie_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Users SET email = 'newemail@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Preferences SET theme = 'Dark Mode', autoplay = true WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_of_birth DATE\n);\n\n\nCREATE TABLE Preferences (\n    pref_id INT PRIMARY KEY,\n    user_id INT,\n    theme VARCHAR(20),\n    autoplay BOOLEAN,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Movies (\n    movie_id INT PRIMARY KEY,\n    title VARCHAR(100) NOT NULL,\n    genre VARCHAR(50),\n    release_date DATE\n);\n\n\nCREATE TABLE UserMovieHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT,\n    movie_id INT,\n    date_watched DATE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (movie_id) REFERENCES Movies(movie_id)\n);\n\n### STATEMENT\n\nUPDATE Movies SET genre = 'Action' WHERE movie_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE playlists SET playlist_name = 'My New Playlist' WHERE playlist_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE songs SET artist = 'New Artist' WHERE song_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE users SET date_of_birth = '1990-05-25' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE preferences SET genre = 'Rock' WHERE pref_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50) UNIQUE,\n  email VARCHAR(100) UNIQUE,\n  date_of_birth DATE,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE preferences (\n  pref_id INT PRIMARY KEY,\n  user_id INT,\n  genre VARCHAR(50),\n  language VARCHAR(50),\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE playlists (\n  playlist_id INT PRIMARY KEY,\n  user_id INT,\n  playlist_name VARCHAR(100),\n  created_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE songs (\n  song_id INT PRIMARY KEY,\n  playlist_id INT,\n  song_name VARCHAR(100),\n  artist VARCHAR(50),\n  genre VARCHAR(50),\n  duration INT,\n  FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id)\n);\n\nCREATE TABLE history (\n  history_id INT PRIMARY KEY,\n  user_id INT,\n  song_id INT,\n  played_at TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(user_id),\n  FOREIGN KEY (song_id) REFERENCES songs(song_id)\n);\n\n### STATEMENT\n\nUPDATE playlists SET playlist_name = 'My Favourites' WHERE playlist_id = 2;"
]