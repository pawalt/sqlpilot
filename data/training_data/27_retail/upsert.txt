<t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>INSERT INTO products (product_id, product_name, price, quantity) VALUES (1, 'Product1', 10.99, 100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product1 Updated', price = 9.99, quantity = 150;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>insert into products (product_id, product_name, price, quantity) values (1, 'product1', 10.99, 100) on conflict (product_id) do update set product_name = 'product1 updated', price = 9.99, quantity = 150;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>INSERT INTO products (product_id, product_name, price, quantity) VALUES (2, 'Product2', 15.99, 50) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product2 Updated', price = 14.99, quantity = 70;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>insert into products (product_id, product_name, price, quantity) values (2, 'product2', 15.99, 50) on conflict (product_id) do update set product_name = 'product2 updated', price = 14.99, quantity = 70;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>INSERT INTO products (product_id, product_name, price, quantity) VALUES (3, 'Product3', 20.99, 200) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product3 Updated', price = 19.99, quantity = 250;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    quantity INT
);</t><stat>insert into products (product_id, product_name, price, quantity) values (3, 'product3', 20.99, 200) on conflict (product_id) do update set product_name = 'product3 updated', price = 19.99, quantity = 250;</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>UPSERT INTO products(id, name, price) VALUES (1, 'Product1', 10.99)</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>upsert into products(id, name, price) values (1, 'product1', 10.99)</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>UPSERT INTO products(id, name, price) VALUES (1, 'Product1', 10.99)</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>upsert into products(id, name, price) values (1, 'product1', 10.99)</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>UPSERT INTO orders(order_id, product_id, quantity, status) VALUES (1, 1, 2, 'Pending')</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>upsert into orders(order_id, product_id, quantity, status) values (1, 1, 2, 'pending')</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>UPSERT INTO orders(order_id, product_id, quantity, status) VALUES (1, 1, 2, 'Pending')</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>upsert into orders(order_id, product_id, quantity, status) values (1, 1, 2, 'pending')</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>UPSERT INTO orders(order_id, product_id, quantity, status) VALUES (2, 2, 3, 'Shipped')</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)</t><stat>upsert into orders(order_id, product_id, quantity, status) values (2, 2, 3, 'shipped')</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>UPSERT INTO orders(order_id, product_id, quantity, status) VALUES (2, 2, 3, 'Shipped')</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT, status STRING)

CREATE TABLE products (id INT PRIMARY KEY, name STRING, price DECIMAL)</t><stat>upsert into orders(order_id, product_id, quantity, status) values (2, 2, 3, 'shipped')</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO customers (customer_id, customer_name, customer_email) VALUES (123, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into customers (customer_id, customer_name, customer_email) values (123, 'john doe', 'john.doe@example.com') on conflict (customer_id) do update set customer_name = 'john doe', customer_email = 'john.doe@example.com';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO orders (order_id, customer_id, order_total, order_date) VALUES (456, 123, 100.00, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into orders (order_id, customer_id, order_total, order_date) values (456, 123, 100.00, '2022-01-01') on conflict (order_id) do update set customer_id = 123, order_total = 100.00, order_date = '2022-01-01';</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO products (product_id, product_name, product_price) VALUES (789, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;</stat><divider><t>CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(50) NOT NULL,
  product_price DECIMAL(10,2) NOT NULL
);


CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_total DECIMAL(10,2),
  order_date DATE,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  customer_name VARCHAR(50) NOT NULL,
  customer_email VARCHAR(100) UNIQUE
);
</t><stat>insert into products (product_id, product_name, product_price) values (789, 'product a', 50.00) on conflict (product_id) do update set product_name = 'product a', product_price = 50.00;</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO customers (id, name, email, phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123456789') ON DUPLICATE KEY UPDATE name = 'John Doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into customers (id, name, email, phone) values (1, 'john doe', 'john.doe@example.com', '123456789') on duplicate key update name = 'john doe', email = 'john.doe@example.com', phone = '123456789'</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO products (id, name, description, price, stock_quantity) VALUES (1, 'Product A', 'Description of Product A', 49.99, 100) ON DUPLICATE KEY UPDATE name = 'Product A', description = 'Description of Product A', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into products (id, name, description, price, stock_quantity) values (1, 'product a', 'description of product a', 49.99, 100) on duplicate key update name = 'product a', description = 'description of product a', price = 49.99, stock_quantity = 100</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>UPSERT INTO orders (id, customer_id, order_date, total_price) VALUES (1, 1, CURRENT_TIMESTAMP(), 99.99) ON DUPLICATE KEY UPDATE customer_id = 1, order_date = CURRENT_TIMESTAMP(), total_price = 99.99</stat><divider><t>CREATE TABLE order_items (
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

CREATE TABLE orders (
    id INT PRIMARY KEY,
    customer_id INT NOT NULL,
    order_date TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT
);

CREATE TABLE customers (
    id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15)
);</t><stat>upsert into orders (id, customer_id, order_date, total_price) values (1, 1, current_timestamp(), 99.99) on duplicate key update customer_id = 1, order_date = current_timestamp(), total_price = 99.99</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into customers (customer_id, customer_name, customer_email, customer_phone) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update customer_name='john doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO products (product_id, product_name, product_price, product_description) VALUES (1, 'Product A', 100.00, 'Description A') ON DUPLICATE KEY UPDATE product_name='Product A', product_price=100.00, product_description='Description A';</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into products (product_id, product_name, product_price, product_description) values (1, 'product a', 100.00, 'description a') on duplicate key update product_name='product a', product_price=100.00, product_description='description a';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>UPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2021-10-15', 250.00) ON DUPLICATE KEY UPDATE customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat><divider><t>CREATE TABLE categories (category_id INT PRIMARY KEY, category_name VARCHAR(50), category_description VARCHAR(255))

CREATE TABLE order_items (order_id INT, product_id INT, quantity INT, item_price DECIMAL(10,2))

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price DECIMAL(10,2), product_description VARCHAR(255))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), customer_email VARCHAR(50), customer_phone VARCHAR(15))</t><stat>upsert into orders (order_id, customer_id, order_date, total_amount) values (1, 1, '2021-10-15', 250.00) on duplicate key update customer_id=1, order_date='2021-10-15', total_amount=250.00;</stat>