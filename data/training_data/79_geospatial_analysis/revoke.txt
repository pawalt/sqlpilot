<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>REVOKE SELECT ON geospatial_data FROM user1</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>revoke select on geospatial_data from user1</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>REVOKE INSERT ON geospatial_data FROM user2</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>revoke insert on geospatial_data from user2</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>REVOKE UPDATE ON geospatial_data FROM user3</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>revoke update on geospatial_data from user3</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>REVOKE INSERT, UPDATE, DELETE ON locations FROM user1</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>revoke insert, update, delete on locations from user1</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>REVOKE INSERT, UPDATE, DELETE ON locations FROM user1</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>revoke insert, update, delete on locations from user1</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>REVOKE SELECT ON spatial_data FROM user2</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>revoke select on spatial_data from user2</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>REVOKE SELECT ON spatial_data FROM user2</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>revoke select on spatial_data from user2</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>REVOKE ALL PRIVILEGES ON locations, spatial_data FROM user3</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>revoke all privileges on locations, spatial_data from user3</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>REVOKE ALL PRIVILEGES ON locations, spatial_data FROM user3</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>revoke all privileges on locations, spatial_data from user3</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE DELETE ON TABLE locations FROM user1</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke delete on table locations from user1</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE INSERT, UPDATE ON TABLE users FROM user2</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke insert, update on table users from user2</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>REVOKE ALL PRIVILEGES ON TABLE geo_analysis FROM user3</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>revoke all privileges on table geo_analysis from user3</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT ON locations FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select on locations from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE INSERT, UPDATE ON regions FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke insert, update on regions from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>REVOKE SELECT, UPDATE, DELETE ON customers FROM public</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>revoke select, update, delete on customers from public</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE INSERT, UPDATE ON locations FROM user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke insert, update on locations from user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE DELETE ON regions FROM user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke delete on regions from user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>REVOKE SELECT ON points_of_interest FROM user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>revoke select on points_of_interest from user3</s>
