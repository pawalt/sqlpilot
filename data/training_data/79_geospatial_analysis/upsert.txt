<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>UPSERT INTO geospatial_data (id, location, value) VALUES (1, 'POINT(1 1)', 10.5)</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>upsert into geospatial_data (id, location, value) values (1, 'point(1 1)', 10.5)</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>UPSERT INTO geospatial_data (id, location, value) VALUES (2, 'POINT(2 2)', 20.7)</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>upsert into geospatial_data (id, location, value) values (2, 'point(2 2)', 20.7)</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>UPSERT INTO geospatial_data (id, location, value) VALUES (3, 'POINT(3 3)', 30.2)</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>upsert into geospatial_data (id, location, value) values (3, 'point(3 3)', 30.2)</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>UPSERT INTO locations (location_id, location_name, latitude, longitude) VALUES (1, 'New York City', 40.7128, -74.0060) ON DUPLICATE KEY UPDATE location_name = 'New York City', latitude = 40.7128, longitude = -74.0060;</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>upsert into locations (location_id, location_name, latitude, longitude) values (1, 'new york city', 40.7128, -74.0060) on duplicate key update location_name = 'new york city', latitude = 40.7128, longitude = -74.0060;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>UPSERT INTO locations (location_id, location_name, latitude, longitude) VALUES (1, 'New York City', 40.7128, -74.0060) ON DUPLICATE KEY UPDATE location_name = 'New York City', latitude = 40.7128, longitude = -74.0060;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>upsert into locations (location_id, location_name, latitude, longitude) values (1, 'new york city', 40.7128, -74.0060) on duplicate key update location_name = 'new york city', latitude = 40.7128, longitude = -74.0060;</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>UPSERT INTO spatial_data (data_id, location_id, data_value) VALUES (1, 1, 50.0) ON DUPLICATE KEY UPDATE data_value = 50.0;</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>upsert into spatial_data (data_id, location_id, data_value) values (1, 1, 50.0) on duplicate key update data_value = 50.0;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>UPSERT INTO spatial_data (data_id, location_id, data_value) VALUES (1, 1, 50.0) ON DUPLICATE KEY UPDATE data_value = 50.0;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>upsert into spatial_data (data_id, location_id, data_value) values (1, 1, 50.0) on duplicate key update data_value = 50.0;</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>UPSERT INTO locations (location_id, location_name, latitude, longitude) VALUES (2, 'Los Angeles', 34.0522, -118.2437) ON DUPLICATE KEY UPDATE location_name = 'Los Angeles', latitude = 34.0522, longitude = -118.2437;</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>upsert into locations (location_id, location_name, latitude, longitude) values (2, 'los angeles', 34.0522, -118.2437) on duplicate key update location_name = 'los angeles', latitude = 34.0522, longitude = -118.2437;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>UPSERT INTO locations (location_id, location_name, latitude, longitude) VALUES (2, 'Los Angeles', 34.0522, -118.2437) ON DUPLICATE KEY UPDATE location_name = 'Los Angeles', latitude = 34.0522, longitude = -118.2437;</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>upsert into locations (location_id, location_name, latitude, longitude) values (2, 'los angeles', 34.0522, -118.2437) on duplicate key update location_name = 'los angeles', latitude = 34.0522, longitude = -118.2437;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO locations (location_id, street_address, city, state, zip_code, location) VALUES ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 Main St', 'Los Angeles', 'CA', 90001, 'POINT (-118.2437 34.0522)' ) ON CONFLICT (location_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zip_code = EXCLUDED.zip_code, location = EXCLUDED.location</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into locations (location_id, street_address, city, state, zip_code, location) values ('c5da4996-732f-4c5e-b464-174d211e5f71', '123 main st', 'los angeles', 'ca', 90001, 'point (-118.2437 34.0522)' ) on conflict (location_id) do update set street_address = excluded.street_address, city = excluded.city, state = excluded.state, zip_code = excluded.zip_code, location = excluded.location</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO users (user_id, first_name, last_name, email, location_id) VALUES ('277b2991-9524-4c78-9364-443c030a6854', 'John', 'Doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, location_id = EXCLUDED.location_id</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into users (user_id, first_name, last_name, email, location_id) values ('277b2991-9524-4c78-9364-443c030a6854', 'john', 'doe', 'john.doe@example.com', 'c5da4996-732f-4c5e-b464-174d211e5f71' ) on conflict (user_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, location_id = excluded.location_id</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>UPSERT INTO geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) VALUES ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'POLYGON ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'Successful analysis' ) ON CONFLICT (analysis_id) DO UPDATE SET user_id = EXCLUDED.user_id, timestamp = EXCLUDED.timestamp, area_covered = EXCLUDED.area_covered, analysis_result = EXCLUDED.analysis_result</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>upsert into geo_analysis (analysis_id, user_id, timestamp, area_covered, analysis_result) values ('bf75e7e1-5b56-4977-8e33-2c391a2e299c', '277b2991-9524-4c78-9364-443c030a6854', '2022-01-01 12:00:00', 'polygon ((-118.2909 34.0806, -118.2867 34.0616, -118.2470 34.0488, -118.2406 34.0645, -118.2909 34.0806))', 'successful analysis' ) on conflict (analysis_id) do update set user_id = excluded.user_id, timestamp = excluded.timestamp, area_covered = excluded.area_covered, analysis_result = excluded.analysis_result</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO locations (location_id, name, address, coordinates) VALUES (1, 'Store A', '123 Main St', ST_GeomFromText('POINT(0 0)')) ON CONFLICT (location_id) DO UPDATE SET name = 'Store A', address = '123 Main St', coordinates = ST_GeomFromText('POINT(0 0)');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into locations (location_id, name, address, coordinates) values (1, 'store a', '123 main st', st_geomfromtext('point(0 0)')) on conflict (location_id) do update set name = 'store a', address = '123 main st', coordinates = st_geomfromtext('point(0 0)');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO regions (region_id, region_name, area) VALUES (1, 'North Region', ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))')) ON CONFLICT (region_id) DO UPDATE SET region_name = 'North Region', area = ST_GeomFromText('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into regions (region_id, region_name, area) values (1, 'north region', st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))')) on conflict (region_id) do update set region_name = 'north region', area = st_geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))');</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>UPSERT INTO customers (customer_id, name, email, location_id) VALUES (1, 'John Doe', 'john.doe@example.com', 1) ON CONFLICT (customer_id) DO UPDATE SET name = 'John Doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>upsert into customers (customer_id, name, email, location_id) values (1, 'john doe', 'john.doe@example.com', 1) on conflict (customer_id) do update set name = 'john doe', email = 'john.doe@example.com', location_id = 1;</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO locations (location_id, location_name, coordinates) VALUES (1, 'City Center', ST_GeomFromText('POINT(40.7128 -74.0060)')) ON DUPLICATE KEY UPDATE location_name = 'City Center', coordinates = ST_GeomFromText('POINT(40.7128 -74.0060)')</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into locations (location_id, location_name, coordinates) values (1, 'city center', st_geomfromtext('point(40.7128 -74.0060)')) on duplicate key update location_name = 'city center', coordinates = st_geomfromtext('point(40.7128 -74.0060)')</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO regions (region_id, region_name, boundary) VALUES (1, 'Downtown', ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) ON DUPLICATE KEY UPDATE region_name = 'Downtown', boundary = ST_GeomFromText('POLYGON((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into regions (region_id, region_name, boundary) values (1, 'downtown', st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))')) on duplicate key update region_name = 'downtown', boundary = st_geomfromtext('polygon((40.7128 -74.0060, 40.7128 -74.0055, 40.7133 -74.0055, 40.7133 -74.0060, 40.7128 -74.0060))'</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>UPSERT INTO points_of_interest (poi_id, poi_name, location_id) VALUES (1, 'Museum', 1) ON DUPLICATE KEY UPDATE poi_name = 'Museum', location_id = 1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>upsert into points_of_interest (poi_id, poi_name, location_id) values (1, 'museum', 1) on duplicate key update poi_name = 'museum', location_id = 1</s>
