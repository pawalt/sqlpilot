<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>GRANT SELECT ON geospatial_data TO analysts</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>grant select on geospatial_data to analysts</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>GRANT UPDATE(location), SELECT(id, value) ON geospatial_data TO editors</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>grant update(location), select(id, value) on geospatial_data to editors</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>GRANT ALL ON geospatial_data TO administrators</s>
<t>CREATE TABLE geospatial_data (id INT PRIMARY KEY, location GEOGRAPHY, value FLOAT)</t><s>grant all on geospatial_data to administrators</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>GRANT SELECT, UPDATE ON locations TO user1</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>grant select, update on locations to user1</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>GRANT SELECT, UPDATE ON locations TO user1</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>grant select, update on locations to user1</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>GRANT INSERT, DELETE ON spatial_data TO user2</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>grant insert, delete on spatial_data to user2</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>GRANT INSERT, DELETE ON spatial_data TO user2</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>grant insert, delete on spatial_data to user2</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>GRANT SELECT, UPDATE, INSERT, DELETE ON locations, spatial_data TO admin</s>
<t>CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)

CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)</t><s>grant select, update, insert, delete on locations, spatial_data to admin</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>GRANT SELECT, UPDATE, INSERT, DELETE ON locations, spatial_data TO admin</s>
<t>CREATE TABLE spatial_data (data_id INT, location_id INT, data_value FLOAT)

CREATE TABLE locations (location_id INT, location_name VARCHAR(255), latitude FLOAT, longitude FLOAT)</t><s>grant select, update, insert, delete on locations, spatial_data to admin</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT, INSERT ON locations TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select, insert on locations to analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT ON users TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select on users to analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>GRANT SELECT, INSERT, UPDATE ON geo_analysis TO analyst_role;</s>
<t>CREATE TABLE geo_analysis ( analysis_id UUID PRIMARY KEY, user_id UUID REFERENCES users(user_id), timestamp TIMESTAMP, area_covered GEOGRAPHY, analysis_result STRING )

CREATE TABLE users ( user_id UUID PRIMARY KEY, first_name STRING, last_name STRING, email STRING, location_id UUID REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id UUID PRIMARY KEY, street_address STRING, city STRING, state STRING, zip_code INT, location GEOGRAPHY )</t><s>grant select, insert, update on geo_analysis to analyst_role;</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT ON locations TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select on locations to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE ON regions TO sales_team</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update on regions to sales_team</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO admin</s>
<t>CREATE TABLE sales (sale_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), total_sales DECIMAL(10, 2), sale_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), location_id INT REFERENCES locations(location_id));

CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), area GEOMETRY);

CREATE TABLE locations (location_id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255), coordinates GEOGRAPHY);</t><s>grant select, insert, update, delete on customers to admin</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON locations TO user1</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select, insert, update, delete on locations to user1</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT SELECT ON regions TO user2</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant select on regions to user2</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>GRANT INSERT, UPDATE ON points_of_interest TO user3</s>
<t>CREATE TABLE geospatial_data ( data_id INT PRIMARY KEY, data_name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(region_id) )

CREATE TABLE routes ( route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location_id INT, end_location_id INT, FOREIGN KEY (start_location_id) REFERENCES locations(location_id), FOREIGN KEY (end_location_id) REFERENCES locations(location_id) )

CREATE TABLE points_of_interest ( poi_id INT PRIMARY KEY, poi_name VARCHAR(50), location_id INT, FOREIGN KEY (location_id) REFERENCES locations(location_id) )

CREATE TABLE regions ( region_id INT PRIMARY KEY, region_name VARCHAR(50), boundary GEOMETRY )

CREATE TABLE locations ( location_id INT PRIMARY KEY, location_name VARCHAR(50), coordinates GEOMETRY )</t><s>grant insert, update on points_of_interest to user3</s>
