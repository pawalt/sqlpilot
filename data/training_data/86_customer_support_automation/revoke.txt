<t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>REVOKE SELECT ON customers FROM user1;</stat><divider><t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>revoke select on customers from user1;</stat><divider><t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>REVOKE INSERT, UPDATE ON customers FROM user2;</stat><divider><t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>revoke insert, update on customers from user2;</stat><divider><t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>REVOKE DELETE ON customers FROM user3;</stat><divider><t>CREATE TABLE customers ( customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), issue_description TEXT )</t><stat>revoke delete on customers from user3;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>REVOKE INSERT, UPDATE, DELETE ON Customer FROM user1;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>revoke insert, update, delete on customer from user1;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE INSERT, UPDATE, DELETE ON Customer FROM user1;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>revoke insert, update, delete on customer from user1;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>REVOKE SELECT ON Customer FROM user2;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>revoke select on customer from user2;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE SELECT ON Customer FROM user2;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>revoke select on customer from user2;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>REVOKE SELECT, UPDATE ON Ticket FROM user3;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));</t><stat>revoke select, update on ticket from user3;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE SELECT, UPDATE ON Ticket FROM user3;</stat><divider><t>CREATE TABLE Ticket (ticket_id INT PRIMARY KEY, customer_id INT, issue_description TEXT, status VARCHAR(20));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>revoke select, update on ticket from user3;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE INSERT ON customers FROM user1</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke insert on customers from user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE UPDATE ON tickets FROM user2</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke update on tickets from user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>REVOKE DELETE ON interactions FROM user3</stat><divider><t>CREATE TABLE interactions (interaction_id INT PRIMARY KEY, ticket_id INT, message TEXT, interaction_type VARCHAR(20), interaction_time TIMESTAMP, FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)) ENGINE=InnoDB

CREATE TABLE tickets (ticket_id INT PRIMARY KEY, customer_id INT, category VARCHAR(50), status VARCHAR(20), created_at TIMESTAMP, closed_at TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id)) ENGINE=InnoDB

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(20), created_at TIMESTAMP) ENGINE=InnoDB</t><stat>revoke delete on interactions from user3</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE INSERT, UPDATE ON customers FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke insert, update on customers from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE SELECT, INSERT ON tickets FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke select, insert on tickets from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>REVOKE DELETE, UPDATE ON agents FROM public</stat><divider><t>CREATE TABLE assignments (
    assignment_id INT PRIMARY KEY,
    agent_id INT REFERENCES agents(agent_id),
    ticket_id INT REFERENCES tickets(ticket_id),
    assigned_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE agents (
    agent_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE tickets (
    ticket_id INT PRIMARY KEY,
    customer_id INT REFERENCES customers(customer_id),
    issue_description TEXT,
    status VARCHAR(20) DEFAULT 'Open',
    created_at TIMESTAMP DEFAULT NOW()
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20)
);
</t><stat>revoke delete, update on agents from public</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT ON customers FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert on customers from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE UPDATE, DELETE ON tickets FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke update, delete on tickets from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));</t><stat>revoke select, insert, update, delete on agents from agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON agents FROM agents;</stat><divider><t>CREATE TABLE interactions (interaction_id INT, ticket_id INT, agent_id INT, interaction_timestamp TIMESTAMP, interaction_text TEXT);

CREATE TABLE departments (department_id INT, department_name VARCHAR(50));

CREATE TABLE agents (agent_id INT, agent_name VARCHAR(50), agent_email VARCHAR(100), agent_phone VARCHAR(15));

CREATE TABLE tickets (ticket_id INT, customer_id INT, ticket_subject VARCHAR(100), ticket_description TEXT, ticket_status VARCHAR(20));

CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), customer_email VARCHAR(100), customer_phone VARCHAR(15));</t><stat>revoke select, insert, update, delete on agents from agents;</stat>