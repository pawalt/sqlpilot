[
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('06ec8e0d-2aec-4bb4-80fd-8b3240400c5e', 'Alice Smith', 'alice@example.com', '1234567890', '{\"items\": [\"Product A\", \"Product B\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('2112e1e8-4291-4f40-800d-2827b4223d2e', 'Bob Johnson', 'bob@example.com', '9876543210', '{\"items\": [\"Product C\", \"Product D\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('75e62b19-6d6e-49f2-97ac-a5c17d49e600', 'Charlie Brown', 'charlie@example.com', '5557778888', '{\"items\": [\"Product E\", \"Product F\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('1c8db9d0-8d40-4686-a171-1f3f9564c1d4', 'David Lee', 'david@example.com', '4445556666', '{\"items\": [\"Product G\", \"Product H\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('76b1ee1e-1aaf-4378-b143-8d05b4754736', 'Eve Taylor', 'eve@example.com', '2223334444', '{\"items\": [\"Product I\", \"Product J\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('2f0a7d11-c7eb-4e79-ad0b-1c00cd69be62', 'Frank White', 'frank@example.com', '6669990000', '{\"items\": [\"Product K\", \"Product L\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('d286d816-6cfc-4c67-b167-0f7dc89b8cb2', 'Grace Davis', 'grace@example.com', '1112223333', '{\"items\": [\"Product M\", \"Product N\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('9823f142-5a0e-4b4e-8f3a-24b09b0d92e8', 'Henry Miller', 'henry@example.com', '7778889999', '{\"items\": [\"Product O\", \"Product P\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('4fcabe50-55c0-4300-981f-813ba5e6487f', 'Isabel Brown', 'isabel@example.com', '8887776666', '{\"items\": [\"Product Q\", \"Product R\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('9c62269d-d731-4e7a-9b6b-babf7675327b', 'Jack Wilson', 'jack@example.com', '5554443333', '{\"items\": [\"Product S\", \"Product T\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('15b1310b-2e11-46b9-aba3-59fc3941b6f0', 'Karen Evans', 'karen@example.com', '1231231234', '{\"items\": [\"Product U\", \"Product V\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history) VALUES ('589f0417-9e55-4e60-985f-cdd8e9d5b02f', 'Liam Walker', 'liam@example.com', '9998887777', '{\"items\": [\"Product W\", \"Product X\"]}')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nON CONFLICT (customer_id) DO UPDATE SET name = excluded.name, email = excluded.email, phone_number = excluded.phone_number, purchase_history = excluded.purchase_history",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('123e4567-e89b-12d3-a456-426614174000', 'John Doe', 'john.doe@example.com', '123-456-7890', '{\"total_purchases\": 5, \"last_purchase_date\": \"2022-01-01\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'John Doe',\n    email = 'john.doe@example.com',\n    phone_number = '123-456-7890',\n    purchase_history = '{\"total_purchases\": 5, \"last_purchase_date\": \"2022-01-01\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('223e4567-e89b-12d3-a456-426614174000', 'Jane Smith', 'jane.smith@example.com', '567-890-1234', '{\"total_purchases\": 3, \"last_purchase_date\": \"2022-02-15\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Jane Smith',\n    email = 'jane.smith@example.com',\n    phone_number = '567-890-1234',\n    purchase_history = '{\"total_purchases\": 3, \"last_purchase_date\": \"2022-02-15\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('323e4567-e89b-12d3-a456-426614174000', 'Alice Brown', 'alice.brown@example.com', '890-123-4567', '{\"total_purchases\": 7, \"last_purchase_date\": \"2022-03-20\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Alice Brown',\n    email = 'alice.brown@example.com',\n    phone_number = '890-123-4567',\n    purchase_history = '{\"total_purchases\": 7, \"last_purchase_date\": \"2022-03-20\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('423e4567-e89b-12d3-a456-426614174000', 'Bob Johnson', 'bob.johnson@example.com', '234-567-8901', '{\"total_purchases\": 10, \"last_purchase_date\": \"2022-04-25\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Bob Johnson',\n    email = 'bob.johnson@example.com',\n    phone_number = '234-567-8901',\n    purchase_history = '{\"total_purchases\": 10, \"last_purchase_date\": \"2022-04-25\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('523e4567-e89b-12d3-a456-426614174000', 'Mary Lee', 'mary.lee@example.com', '876-543-2109', '{\"total_purchases\": 8, \"last_purchase_date\": \"2022-05-30\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Mary Lee',\n    email = 'mary.lee@example.com',\n    phone_number = '876-543-2109',\n    purchase_history = '{\"total_purchases\": 8, \"last_purchase_date\": \"2022-05-30\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('623e4567-e89b-12d3-a456-426614174000', 'David Miller', 'david.miller@example.com', '109-876-5432', '{\"total_purchases\": 12, \"last_purchase_date\": \"2022-06-10\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'David Miller',\n    email = 'david.miller@example.com',\n    phone_number = '109-876-5432',\n    purchase_history = '{\"total_purchases\": 12, \"last_purchase_date\": \"2022-06-10\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('723e4567-e89b-12d3-a456-426614174000', 'Sarah Wilson', 'sarah.wilson@example.com', '432-109-8765', '{\"total_purchases\": 15, \"last_purchase_date\": \"2022-07-15\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Sarah Wilson',\n    email = 'sarah.wilson@example.com',\n    phone_number = '432-109-8765',\n    purchase_history = '{\"total_purchases\": 15, \"last_purchase_date\": \"2022-07-15\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('823e4567-e89b-12d3-a456-426614174000', 'Chris Anderson', 'chris.anderson@example.com', '765-432-1098', '{\"total_purchases\": 6, \"last_purchase_date\": \"2022-08-20\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Chris Anderson',\n    email = 'chris.anderson@example.com',\n    phone_number = '765-432-1098',\n    purchase_history = '{\"total_purchases\": 6, \"last_purchase_date\": \"2022-08-20\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('923e4567-e89b-12d3-a456-426614174000', 'Emily Brown', 'emily.brown@example.com', '321-654-9870', '{\"total_purchases\": 9, \"last_purchase_date\": \"2022-09-25\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Emily Brown',\n    email = 'emily.brown@example.com',\n    phone_number = '321-654-9870',\n    purchase_history = '{\"total_purchases\": 9, \"last_purchase_date\": \"2022-09-25\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('a23e4567-e89b-12d3-a456-426614174000', 'Peter Evans', 'peter.evans@example.com', '654-321-0987', '{\"total_purchases\": 11, \"last_purchase_date\": \"2022-10-30\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Peter Evans',\n    email = 'peter.evans@example.com',\n    phone_number = '654-321-0987',\n    purchase_history = '{\"total_purchases\": 11, \"last_purchase_date\": \"2022-10-30\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('b23e4567-e89b-12d3-a456-426614174000', 'Laura Thompson', 'laura.thompson@example.com', '987-654-3210', '{\"total_purchases\": 13, \"last_purchase_date\": \"2022-11-10\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Laura Thompson',\n    email = 'laura.thompson@example.com',\n    phone_number = '987-654-3210',\n    purchase_history = '{\"total_purchases\": 13, \"last_purchase_date\": \"2022-11-10\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('c23e4567-e89b-12d3-a456-426614174000', 'Steven Adams', 'steven.adams@example.com', '210-987-6543', '{\"total_purchases\": 16, \"last_purchase_date\": \"2022-12-15\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Steven Adams',\n    email = 'steven.adams@example.com',\n    phone_number = '210-987-6543',\n    purchase_history = '{\"total_purchases\": 16, \"last_purchase_date\": \"2022-12-15\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('d23e4567-e89b-12d3-a456-426614174000', 'Olivia Parker', 'olivia.parker@example.com', '543-210-9876', '{\"total_purchases\": 14, \"last_purchase_date\": \"2023-01-20\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Olivia Parker',\n    email = 'olivia.parker@example.com',\n    phone_number = '543-210-9876',\n    purchase_history = '{\"total_purchases\": 14, \"last_purchase_date\": \"2023-01-20\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('e23e4567-e89b-12d3-a456-426614174000', 'Michael Hill', 'michael.hill@example.com', '876-543-2109', '{\"total_purchases\": 18, \"last_purchase_date\": \"2023-02-25\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Michael Hill',\n    email = 'michael.hill@example.com',\n    phone_number = '876-543-2109',\n    purchase_history = '{\"total_purchases\": 18, \"last_purchase_date\": \"2023-02-25\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    purchase_history JSONB\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, phone_number, purchase_history)\nVALUES ('f23e4567-e89b-12d3-a456-426614174000', 'Jessica King', 'jessica.king@example.com', '210-987-6543', '{\"total_purchases\": 20, \"last_purchase_date\": \"2023-03-30\"}')\nON CONFLICT (customer_id) DO UPDATE SET\n    name = 'Jessica King',\n    email = 'jessica.king@example.com',\n    phone_number = '210-987-6543',\n    purchase_history = '{\"total_purchases\": 20, \"last_purchase_date\": \"2023-03-30\"}'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (1, 'Alice', 'Smith', 'alice@example.com', '555-1234', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', email = 'alice@example.com', phone_number = '555-1234', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (2, 'Bob', 'Johnson', 'bob@example.com', '555-5678', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', email = 'bob@example.com', phone_number = '555-5678', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (3, 'Charlie', 'Brown', 'charlie@example.com', '555-9012', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Charlie', last_name = 'Brown', email = 'charlie@example.com', phone_number = '555-9012', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (4, 'David', 'Williams', 'david@example.com', '555-3456', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'David', last_name = 'Williams', email = 'david@example.com', phone_number = '555-3456', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (5, 'Eva', 'Davis', 'eva@example.com', '555-7890', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Eva', last_name = 'Davis', email = 'eva@example.com', phone_number = '555-7890', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (6, 'Frank', 'Martinez', 'frank@example.com', '555-1234', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Frank', last_name = 'Martinez', email = 'frank@example.com', phone_number = '555-1234', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (7, 'Grace', 'Clark', 'grace@example.com', '555-5678', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Grace', last_name = 'Clark', email = 'grace@example.com', phone_number = '555-5678', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (8, 'Henry', 'Lee', 'henry@example.com', '555-9012', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Henry', last_name = 'Lee', email = 'henry@example.com', phone_number = '555-9012', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (9, 'Ivy', 'Garcia', 'ivy@example.com', '555-3456', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Ivy', last_name = 'Garcia', email = 'ivy@example.com', phone_number = '555-3456', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (10, 'Jack', 'Scott', 'jack@example.com', '555-7890', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jack', last_name = 'Scott', email = 'jack@example.com', phone_number = '555-7890', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (11, 'Katie', 'Lopez', 'katie@example.com', '555-1234', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Katie', last_name = 'Lopez', email = 'katie@example.com', phone_number = '555-1234', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (12, 'Leo', 'Nguyen', 'leo@example.com', '555-5678', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Leo', last_name = 'Nguyen', email = 'leo@example.com', phone_number = '555-5678', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (13, 'Mia', 'Adams', 'mia@example.com', '555-9012', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Mia', last_name = 'Adams', email = 'mia@example.com', phone_number = '555-9012', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (14, 'Nick', 'Roberts', 'nick@example.com', '555-3456', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Nick', last_name = 'Roberts', email = 'nick@example.com', phone_number = '555-3456', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (15, 'Olivia', 'Baker', 'olivia@example.com', '555-7890', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Olivia', last_name = 'Baker', email = 'olivia@example.com', phone_number = '555-7890', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (16, 'Paul', 'Morris', 'paul@example.com', '555-1234', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Paul', last_name = 'Morris', email = 'paul@example.com', phone_number = '555-1234', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (17, 'Queenie', 'Cooper', 'queenie@example.com', '555-5678', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Queenie', last_name = 'Cooper', email = 'queenie@example.com', phone_number = '555-5678', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (18, 'Ryan', 'Evans', 'ryan@example.com', '555-9012', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Ryan', last_name = 'Evans', email = 'ryan@example.com', phone_number = '555-9012', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (19, 'Sara', 'Gonzalez', 'sara@example.com', '555-3456', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Sara', last_name = 'Gonzalez', email = 'sara@example.com', phone_number = '555-3456', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (20, 'Thomas', 'Perez', 'thomas@example.com', '555-7890', '{}') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Thomas', last_name = 'Perez', email = 'thomas@example.com', phone_number = '555-7890', purchase_history = '{}';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890', '[{\"product\": \"Product A\", \"price\": 50}, {\"product\": \"Product B\", \"price\": 75}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890', purchase_history = '[{\"product\": \"Product A\", \"price\": 50}, {\"product\": \"Product B\", \"price\": 75}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (1, 1, '2023-01-15 08:00:00', 125.00, 'Credit Card') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 1, purchase_date = '2023-01-15 08:00:00', total_amount = 125.00, payment_method = 'Credit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (2, 'Alice', 'Smith', 'alice.smith@example.com', '111-222-3333', '[{\"product\": \"Product C\", \"price\": 100}, {\"product\": \"Product D\", \"price\": 150}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', email = 'alice.smith@example.com', phone_number = '111-222-3333', purchase_history = '[{\"product\": \"Product C\", \"price\": 100}, {\"product\": \"Product D\", \"price\": 150}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (2, 2, '2023-01-16 10:30:00', 250.25, 'PayPal') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 2, purchase_date = '2023-01-16 10:30:00', total_amount = 250.25, payment_method = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (3, 'Michael', 'Johnson', 'michael.johnson@example.com', '555-666-7777', '[{\"product\": \"Product E\", \"price\": 200}, {\"product\": \"Product F\", \"price\": 300}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Michael', last_name = 'Johnson', email = 'michael.johnson@example.com', phone_number = '555-666-7777', purchase_history = '[{\"product\": \"Product E\", \"price\": 200}, {\"product\": \"Product F\", \"price\": 300}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (3, 3, '2023-01-17 12:00:00', 500.50, 'Cash') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 3, purchase_date = '2023-01-17 12:00:00', total_amount = 500.50, payment_method = 'Cash';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (4, 'Sarah', 'Williams', 'sarah.williams@example.com', '999-888-7777', '[{\"product\": \"Product G\", \"price\": 75}, {\"product\": \"Product H\", \"price\": 90}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Williams', email = 'sarah.williams@example.com', phone_number = '999-888-7777', purchase_history = '[{\"product\": \"Product G\", \"price\": 75}, {\"product\": \"Product H\", \"price\": 90}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (4, 4, '2023-01-18 14:30:00', 165.00, 'Debit Card') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 4, purchase_date = '2023-01-18 14:30:00', total_amount = 165.00, payment_method = 'Debit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (5, 'Emily', 'Brown', 'emily.brown@example.com', '777-333-5555', '[{\"product\": \"Product I\", \"price\": 120}, {\"product\": \"Product J\", \"price\": 150}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Emily', last_name = 'Brown', email = 'emily.brown@example.com', phone_number = '777-333-5555', purchase_history = '[{\"product\": \"Product I\", \"price\": 120}, {\"product\": \"Product J\", \"price\": 150}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (5, 5, '2023-01-19 16:00:00', 270.00, 'Venmo') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 5, purchase_date = '2023-01-19 16:00:00', total_amount = 270.00, payment_method = 'Venmo';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (6, 'David', 'Garcia', 'david.garcia@example.com', '444-999-2222', '[{\"product\": \"Product K\", \"price\": 80}, {\"product\": \"Product L\", \"price\": 95}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'David', last_name = 'Garcia', email = 'david.garcia@example.com', phone_number = '444-999-2222', purchase_history = '[{\"product\": \"Product K\", \"price\": 80}, {\"product\": \"Product L\", \"price\": 95}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (6, 6, '2023-01-20 18:30:00', 175.75, 'Apple Pay') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 6, purchase_date = '2023-01-20 18:30:00', total_amount = 175.75, payment_method = 'Apple Pay';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (7, 'Jessica', 'Martinez', 'jessica.martinez@example.com', '666-777-8888', '[{\"product\": \"Product M\", \"price\": 40}, {\"product\": \"Product N\", \"price\": 55}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jessica', last_name = 'Martinez', email = 'jessica.martinez@example.com', phone_number = '666-777-8888', purchase_history = '[{\"product\": \"Product M\", \"price\": 40}, {\"product\": \"Product N\", \"price\": 55}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (7, 7, '2023-01-21 20:00:00', 95.00, 'Bitcoin') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 7, purchase_date = '2023-01-21 20:00:00', total_amount = 95.00, payment_method = 'Bitcoin';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (8, 'Kevin', 'Martinez', 'kevin.martinez@example.com', '444-777-2222', '[{\"product\": \"Product O\", \"price\": 60}, {\"product\": \"Product P\", \"price\": 75}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Martinez', email = 'kevin.martinez@example.com', phone_number = '444-777-2222', purchase_history = '[{\"product\": \"Product O\", \"price\": 60}, {\"product\": \"Product P\", \"price\": 75}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (8, 8, '2023-01-22 22:30:00', 135.00, 'Zelle') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 8, purchase_date = '2023-01-22 22:30:00', total_amount = 135.00, payment_method = 'Zelle';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (9, 'Lisa', 'Rodriguez', 'lisa.rodriguez@example.com', '888-222-5555', '[{\"product\": \"Product Q\", \"price\": 70}, {\"product\": \"Product R\", \"price\": 85}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Lisa', last_name = 'Rodriguez', email = 'lisa.rodriguez@example.com', phone_number = '888-222-5555', purchase_history = '[{\"product\": \"Product Q\", \"price\": 70}, {\"product\": \"Product R\", \"price\": 85}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (9, 9, '2023-01-23 00:00:00', 155.00, 'Bank Transfer') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 9, purchase_date = '2023-01-23 00:00:00', total_amount = 155.00, payment_method = 'Bank Transfer';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (10, 'Mark', 'Hernandez', 'mark.hernandez@example.com', '333-111-4444', '[{\"product\": \"Product S\", \"price\": 90}, {\"product\": \"Product T\", \"price\": 105}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Mark', last_name = 'Hernandez', email = 'mark.hernandez@example.com', phone_number = '333-111-4444', purchase_history = '[{\"product\": \"Product S\", \"price\": 90}, {\"product\": \"Product T\", \"price\": 105}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (10, 10, '2023-01-24 02:30:00', 195.00, 'Gift Card') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 10, purchase_date = '2023-01-24 02:30:00', total_amount = 195.00, payment_method = 'Gift Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (11, 'Nicole', 'Gonzalez', 'nicole.gonzalez@example.com', '111-555-9999', '[{\"product\": \"Product U\", \"price\": 80}, {\"product\": \"Product V\", \"price\": 95}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Nicole', last_name = 'Gonzalez', email = 'nicole.gonzalez@example.com', phone_number = '111-555-9999', purchase_history = '[{\"product\": \"Product U\", \"price\": 80}, {\"product\": \"Product V\", \"price\": 95}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (11, 11, '2023-01-25 04:00:00', 175.00, 'Cryptocurrency') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 11, purchase_date = '2023-01-25 04:00:00', total_amount = 175.00, payment_method = 'Cryptocurrency';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number, purchase_history) VALUES (12, 'Ryan', 'Lopez', 'ryan.lopez@example.com', '222-888-7777', '[{\"product\": \"Product W\", \"price\": 100}, {\"product\": \"Product X\", \"price\": 115}]') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Ryan', last_name = 'Lopez', email = 'ryan.lopez@example.com', phone_number = '222-888-7777', purchase_history = '[{\"product\": \"Product W\", \"price\": 100}, {\"product\": \"Product X\", \"price\": 115}]';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    purchase_history JSONB\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    purchase_date TIMESTAMP,\n    total_amount DECIMAL(10, 2),\n    payment_method VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO purchases (purchase_id, customer_id, purchase_date, total_amount, payment_method) VALUES (12, 12, '2023-01-26 06:30:00', 215.00, 'Google Pay') ON CONFLICT (purchase_id) DO UPDATE SET customer_id = 12, purchase_date = '2023-01-26 06:30:00', total_amount = 215.00, payment_method = 'Google Pay';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Jane Smith', 'jane.smith@example.com', '555-123-4567') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Alice Johnson', 'alice.johnson@example.com', '987-654-3210') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (1, '2022-01-15', 100.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (2, '2022-01-20', 150.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (3, '2022-02-01', 200.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Laptop', 999.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Smartphone', 599.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Headphones', 99.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Michael Brown', 'michael.brown@example.com', '222-333-4444') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Sarah Wilson', 'sarah.wilson@example.com', '777-888-9999') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Robert Garcia', 'robert.garcia@example.com', '444-555-6666') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (4, '2022-02-10', 120.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (5, '2022-02-15', 180.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (6, '2022-03-01', 250.00) ON CONFLICT (customer_id, order_date) DO UPDATE SET order_total = EXCLUDED.order_total;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Tablet', 299.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Camera', 499.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Speaker', 79.99) ON CONFLICT (product_name) DO UPDATE SET product_price = EXCLUDED.product_price;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Emily White', 'emily.white@example.com', '666-777-8888') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('David Clark', 'david.clark@example.com', '111-222-3333') ON CONFLICT (customer_email) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_phone = EXCLUDED.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'John Doe', customer_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (1, '2022-01-15', 100.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2022-01-15', order_total = 100.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Alice Smith', 'alice.smith@example.com', '987-654-3210') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Alice Smith', customer_phone = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (2, '2022-01-20', 75.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2022-01-20', order_total = 75.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product B', 75.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', product_price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Jane Doe', 'jane.doe@example.com', '555-555-5555') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Jane Doe', customer_phone = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (3, '2022-01-25', 200.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2022-01-25', order_total = 200.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product C', 100.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', product_price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Bob Johnson', 'bob.johnson@example.com', '111-222-3333') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Bob Johnson', customer_phone = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (4, '2022-01-30', 150.80) ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2022-01-30', order_total = 150.80;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product D', 120.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', product_price = 120.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Sara Adams', 'sara.adams@example.com', '999-888-7777') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Sara Adams', customer_phone = '999-888-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (5, '2022-02-05', 300.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 5, order_date = '2022-02-05', order_total = 300.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product E', 80.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', product_price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Mike Brown', 'mike.brown@example.com', '666-999-4444') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Mike Brown', customer_phone = '666-999-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (6, '2022-02-10', 220.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 6, order_date = '2022-02-10', order_total = 220.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product F', 150.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', product_price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Emily Green', 'emily.green@example.com', '777-111-2222') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Emily Green', customer_phone = '777-111-2222';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, order_total) VALUES (7, '2022-02-15', 180.90) ON CONFLICT (order_id) DO UPDATE SET customer_id = 7, order_date = '2022-02-15', order_total = 180.90;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    order_date DATE NOT NULL,\n    order_total DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, product_price) VALUES ('Product G', 90.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product G', product_price = 90.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (1, 1, '123 Main St', 'Anytown', 'NY', '12345') ON CONFLICT (address_id) DO UPDATE SET customer_id = 1, street_address = '123 Main St', city = 'Anytown', state = 'NY', zip_code = '12345';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2023-04-15', 100.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2023-04-15', total_amount = 100.25;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, category, price) VALUES (1, 'Product A', 'Category A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', category = 'Category A', price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com', '987-654-3210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (2, 2, '456 Elm St', 'Othertown', 'CA', '54321') ON CONFLICT (address_id) DO UPDATE SET customer_id = 2, street_address = '456 Elm St', city = 'Othertown', state = 'CA', zip_code = '54321';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2023-04-16', 75.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2023-04-16', total_amount = 75.50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, category, price) VALUES (2, 'Product B', 'Category B', 75.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', category = 'Category B', price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com', '555-123-4567') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (3, 3, '789 Oak St', 'Smalltown', 'TX', '67890') ON CONFLICT (address_id) DO UPDATE SET customer_id = 3, street_address = '789 Oak St', city = 'Smalltown', state = 'TX', zip_code = '67890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2023-04-17', 125.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2023-04-17', total_amount = 125.75;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, category, price) VALUES (3, 'Product C', 'Category C', 100.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', category = 'Category C', price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (4, 'Mike', 'Williams', 'mike.williams@example.com', '222-333-4444') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Mike', last_name = 'Williams', email = 'mike.williams@example.com', phone_number = '222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (4, 4, '555 Pine St', 'Bigcity', 'IL', '98765') ON CONFLICT (address_id) DO UPDATE SET customer_id = 4, street_address = '555 Pine St', city = 'Bigcity', state = 'IL', zip_code = '98765';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (4, 4, '2023-04-18', 150.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2023-04-18', total_amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, category, price) VALUES (4, 'Product D', 'Category D', 150.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', category = 'Category D', price = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (5, 'Sarah', 'Brown', 'sarah.brown@example.com', '777-888-9999') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Brown', email = 'sarah.brown@example.com', phone_number = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (5, 5, '777 Maple St', 'Midtown', 'FL', '54321') ON CONFLICT (address_id) DO UPDATE SET customer_id = 5, street_address = '777 Maple St', city = 'Midtown', state = 'FL', zip_code = '54321';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (5, 5, '2023-04-19', 200.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 5, order_date = '2023-04-19', total_amount = 200.50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO Products (product_id, product_name, category, price) VALUES (5, 'Product E', 'Category E', 200.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', category = 'Category E', price = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'johndoe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'johndoe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (1, 1, '123 Main St', 'Anytown', 'NY', '10001') ON CONFLICT (customer_id) DO UPDATE SET street_address = '123 Main St', city = 'Anytown', state = 'NY', zip_code = '10001';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-01', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2022-01-01', total_amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, category, price) VALUES (1, 'Product A', 'Category A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', category = 'Category A', price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (2, 'Jane', 'Smith', 'janesmith@example.com', '987-654-3210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'janesmith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (2, 2, '456 Elm St', 'Sometown', 'CA', '90210') ON CONFLICT (customer_id) DO UPDATE SET street_address = '456 Elm St', city = 'Sometown', state = 'CA', zip_code = '90210';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2022-01-02', 150.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2022-01-02', total_amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, category, price) VALUES (2, 'Product B', 'Category B', 75.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', category = 'Category B', price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (3, 'Alice', 'Johnson', 'alicejohnson@example.com', '555-123-4567') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alicejohnson@example.com', phone_number = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (3, 3, '789 Oak St', 'Othertown', 'TX', '76543') ON CONFLICT (customer_id) DO UPDATE SET street_address = '789 Oak St', city = 'Othertown', state = 'TX', zip_code = '76543';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2022-01-03', 200.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2022-01-03', total_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, category, price) VALUES (3, 'Product C', 'Category C', 100.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', category = 'Category C', price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (4, 'Bob', 'Brown', 'bobbrown@example.com', '222-333-4444') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Brown', email = 'bobbrown@example.com', phone_number = '222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Addresses (address_id, customer_id, street_address, city, state, zip_code) VALUES (4, 4, '555 Pine St', 'Newtown', 'AZ', '54321') ON CONFLICT (customer_id) DO UPDATE SET street_address = '555 Pine St', city = 'Newtown', state = 'AZ', zip_code = '54321';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Orders (order_id, customer_id, order_date, total_amount) VALUES (4, 4, '2022-01-04', 250.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2022-01-04', total_amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    street_address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(2),\n    zip_code VARCHAR(10)\n);\n\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nUPSERT INTO Products (product_id, product_name, category, price) VALUES (4, 'Product D', 'Category D', 125.00) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', category = 'Category D', price = 125.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, customer_email = EXCLUDED.customer_email, customer_phone = EXCLUDED.customer_phone",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, customer_id, street_address, city, state, zipcode) VALUES (1, 1, '123 Main St', 'Springfield', 'IL', '62701') ON CONFLICT (address_id) DO UPDATE SET street_address = EXCLUDED.street_address, city = EXCLUDED.city, state = EXCLUDED.state, zipcode = EXCLUDED.zipcode",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-15', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, order_date = EXCLUDED.order_date, total_amount = EXCLUDED.total_amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 50.00) ON CONFLICT (product_id) DO UPDATE SET product_name = EXCLUDED.product_name, price = EXCLUDED.price",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (1, 1, 2) ON CONFLICT (order_id, product_id) DO UPDATE SET quantity = EXCLUDED.quantity",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = 'John Doe 2', customer_phone = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, customer_id, street_address, city, state, zipcode) VALUES (1, 1, '123 Main St', 'Cityville', 'CA', '12345') ON DUPLICATE KEY UPDATE street_address = '456 Elm St', city = 'Towndale';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 1, '2022-01-01', 100.00) ON DUPLICATE KEY UPDATE total_amount = total_amount + 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 20.00) ON DUPLICATE KEY UPDATE price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (1, 1, 2) ON DUPLICATE KEY UPDATE quantity = quantity + 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '555-555-5555') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith Updated';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, customer_id, street_address, city, state, zipcode) VALUES (2, 2, '456 Elm St', 'Towndale', 'NY', '54321') ON DUPLICATE KEY UPDATE street_address = '789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 2, '2022-01-05', 150.00) ON DUPLICATE KEY UPDATE total_amount = total_amount - 10.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 30.00) ON DUPLICATE KEY UPDATE price = 35.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (2, 2, 3) ON DUPLICATE KEY UPDATE quantity = quantity + 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '111-222-3333') ON DUPLICATE KEY UPDATE customer_phone = '333-222-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, customer_id, street_address, city, state, zipcode) VALUES (3, 3, '789 Oak St', 'Grovemont', 'TX', '67890') ON DUPLICATE KEY UPDATE city = 'Riverside';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 3, '2022-01-10', 200.00) ON DUPLICATE KEY UPDATE total_amount = total_amount * 1.1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (3, 'Product C', 40.00) ON DUPLICATE KEY UPDATE price = 45.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50) NOT NULL,\n\tcustomer_email VARCHAR(50) UNIQUE NOT NULL,\n\tcustomer_phone VARCHAR(15) NOT NULL\n);\n\n\nCREATE TABLE addresses (\n\taddress_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tstreet_address VARCHAR(100) NOT NULL,\n\tcity VARCHAR(50) NOT NULL,\n\tstate VARCHAR(2) NOT NULL,\n\tzipcode VARCHAR(10) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE orders (\n\torder_id INT PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\torder_date DATE NOT NULL,\n\ttotal_amount DECIMAL(10, 2) NOT NULL,\n\tFOREIGN KEY(customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n\tproduct_id INT PRIMARY KEY,\n\tproduct_name VARCHAR(100) NOT NULL,\n\tprice DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE order_items (\n\torder_id INT NOT NULL,\n\tproduct_id INT NOT NULL,\n\tquantity INT NOT NULL,\n\tPRIMARY KEY (order_id, product_id),\n\tFOREIGN KEY(order_id) REFERENCES orders(order_id),\n\tFOREIGN KEY(product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (3, 3, 4) ON DUPLICATE KEY UPDATE quantity = quantity - 1;"
]