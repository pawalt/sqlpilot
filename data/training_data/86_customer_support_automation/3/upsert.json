[
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (1, 'Great service!', 0.9) ON DUPLICATE KEY UPDATE feedback='Great service!', sentiment_score=0.9",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (2, 'Needs improvement', 0.4) ON DUPLICATE KEY UPDATE feedback='Needs improvement', sentiment_score=0.4",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (3, 'Very satisfied', 0.8) ON DUPLICATE KEY UPDATE feedback='Very satisfied', sentiment_score=0.8",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (4, 'Average experience', 0.5) ON DUPLICATE KEY UPDATE feedback='Average experience', sentiment_score=0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (5, 'Exceptional service', 0.95) ON DUPLICATE KEY UPDATE feedback='Exceptional service', sentiment_score=0.95",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (6, 'Poor service', 0.2) ON DUPLICATE KEY UPDATE feedback='Poor service', sentiment_score=0.2",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (7, 'Decent experience', 0.6) ON DUPLICATE KEY UPDATE feedback='Decent experience', sentiment_score=0.6",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (8, 'Amazing feedback', 0.98) ON DUPLICATE KEY UPDATE feedback='Amazing feedback', sentiment_score=0.98",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (9, 'Could be better', 0.3) ON DUPLICATE KEY UPDATE feedback='Could be better', sentiment_score=0.3",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (10, 'Highly recommended', 0.87) ON DUPLICATE KEY UPDATE feedback='Highly recommended', sentiment_score=0.87",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (11, 'Disappointed', 0.1) ON DUPLICATE KEY UPDATE feedback='Disappointed', sentiment_score=0.1",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (12, 'Impressed by the service', 0.82) ON DUPLICATE KEY UPDATE feedback='Impressed by the service', sentiment_score=0.82",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (13, 'Average performance', 0.5) ON DUPLICATE KEY UPDATE feedback='Average performance', sentiment_score=0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (14, 'Great response time', 0.92) ON DUPLICATE KEY UPDATE feedback='Great response time', sentiment_score=0.92",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (15, 'Very dissatisfied', 0.15) ON DUPLICATE KEY UPDATE feedback='Very dissatisfied', sentiment_score=0.15",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (16, 'Outstanding service', 0.99) ON DUPLICATE KEY UPDATE feedback='Outstanding service', sentiment_score=0.99",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (17, 'Poor quality', 0.25) ON DUPLICATE KEY UPDATE feedback='Poor quality', sentiment_score=0.25",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (18, 'Exceptionally good', 0.94) ON DUPLICATE KEY UPDATE feedback='Exceptionally good', sentiment_score=0.94",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (19, 'Average feedback', 0.5) ON DUPLICATE KEY UPDATE feedback='Average feedback', sentiment_score=0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (20, 'Very happy with the service', 0.88) ON DUPLICATE KEY UPDATE feedback='Very happy with the service', sentiment_score=0.88",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (1, 'Great service!', 0.9) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Great service!', sentiment_score = 0.9",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (2, 'Needs improvement', 0.4) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Needs improvement', sentiment_score = 0.4",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (3, 'Excellent experience', 0.95) ON CONFLICT (customer_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (4, 'Poor service', 0.2) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Poor service'",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (5, 'Satisfactory', 0.7) ON CONFLICT (customer_id) DO UPDATE SET sentiment_score = 0.7",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (6, 'Good job!', 0.8) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Good job!', sentiment_score = 0.8",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (7, 'Average service', 0.5) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Average service', sentiment_score = 0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (8, 'Outstanding', 0.98) ON CONFLICT (customer_id) DO UPDATE SET sentiment_score = 0.98",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (9, 'Terrible experience', 0.1) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Terrible experience', sentiment_score = 0.1",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (10, 'Excellent support', 0.92) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Excellent support', sentiment_score = 0.92",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (11, 'Poor communication', 0.35) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Poor communication', sentiment_score = 0.35",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (12, 'Impressive', 0.88) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Impressive', sentiment_score = 0.88",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (13, 'Mixed feelings', 0.6) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Mixed feelings', sentiment_score = 0.6",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (14, 'Above expectations!', 0.85) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Above expectations!', sentiment_score = 0.85",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (15, 'Improvement needed', 0.45) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Improvement needed', sentiment_score = 0.45",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (16, 'Very satisfied', 0.75) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Very satisfied', sentiment_score = 0.75",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (17, 'Not happy', 0.3) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Not happy', sentiment_score = 0.3",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (18, 'Exceptional', 0.96) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Exceptional', sentiment_score = 0.96",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (19, 'Dissatisfied', 0.25) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Dissatisfied', sentiment_score = 0.25",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n  customer_id INT,\n  feedback TEXT,\n  sentiment_score FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customer_feedback (customer_id, feedback, sentiment_score) VALUES (20, 'Great improvement', 0.7) ON CONFLICT (customer_id) DO UPDATE SET feedback = 'Great improvement', sentiment_score = 0.7",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('1', 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('2', 'Alice Smith', 'alice.smith@example.com', '456-789-0123') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Smith', email = 'alice.smith@example.com', phone_number = '456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('3', 'Bob Johnson', 'bob.johnson@example.com', '789-012-3456') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Johnson', email = 'bob.johnson@example.com', phone_number = '789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('1', '1', 'Great service!', 4.5, '2022-01-15 10:00:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '1', feedback_text = 'Great service!', sentiment_score = 4.5, date_posted = '2022-01-15 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('2', '2', 'Needs improvement.', 2.5, '2022-01-20 15:30:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '2', feedback_text = 'Needs improvement.', sentiment_score = 2.5, date_posted = '2022-01-20 15:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('3', '3', 'Excellent experience!', 4.8, '2022-02-05 08:45:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '3', feedback_text = 'Excellent experience!', sentiment_score = 4.8, date_posted = '2022-02-05 08:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('4', 'Mary Brown', 'mary.brown@example.com', '012-345-6789') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Brown', email = 'mary.brown@example.com', phone_number = '012-345-6789';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('5', 'Kevin White', 'kevin.white@example.com', '345-678-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kevin White', email = 'kevin.white@example.com', phone_number = '345-678-9012';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('6', 'Sarah Green', 'sarah.green@example.com', '678-901-2345') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Green', email = 'sarah.green@example.com', phone_number = '678-901-2345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('4', '4', 'Helpful support team.', 4.2, '2022-02-10 11:20:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '4', feedback_text = 'Helpful support team.', sentiment_score = 4.2, date_posted = '2022-02-10 11:20:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('5', '5', 'Fast delivery!', 4.6, '2022-02-15 14:00:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '5', feedback_text = 'Fast delivery!', sentiment_score = 4.6, date_posted = '2022-02-15 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, customer_id, feedback_text, sentiment_score, date_posted) VALUES ('6', '6', 'Polite staff.', 3.8, '2022-02-20 09:30:00') ON CONFLICT (feedback_id) DO UPDATE SET customer_id = '6', feedback_text = 'Polite staff.', sentiment_score = 3.8, date_posted = '2022-02-20 09:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('123e4567-e89b-12d3-a456-426614174000', 'John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('223e4567-e89b-12d3-a456-426614174000', 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('323e4567-e89b-12d3-a456-426614174000', 'Alice Johnson', 'alice.johnson@example.com', '555-555-5555') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', email = 'alice.johnson@example.com', phone_number = '555-555-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('423e4567-e89b-12d3-a456-426614174000', 'Bob Williams', 'bob.williams@example.com', '777-777-7777') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Williams', email = 'bob.williams@example.com', phone_number = '777-777-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('523e4567-e89b-12d3-a456-426614174000', 'Emily Brown', 'emily.brown@example.com', '111-111-1111') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Brown', email = 'emily.brown@example.com', phone_number = '111-111-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('623e4567-e89b-12d3-a456-426614174000', 'Michael Davis', 'michael.davis@example.com', '222-222-2222') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Davis', email = 'michael.davis@example.com', phone_number = '222-222-2222';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('723e4567-e89b-12d3-a456-426614174000', 'Olivia Moore', 'olivia.moore@example.com', '666-666-6666') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia Moore', email = 'olivia.moore@example.com', phone_number = '666-666-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('823e4567-e89b-12d3-a456-426614174000', 'William Garcia', 'william.garcia@example.com', '333-333-3333') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'William Garcia', email = 'william.garcia@example.com', phone_number = '333-333-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('923e4567-e89b-12d3-a456-426614174000', 'Sophia Martinez', 'sophia.martinez@example.com', '999-999-9999') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sophia Martinez', email = 'sophia.martinez@example.com', phone_number = '999-999-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('a23e4567-e89b-12d3-a456-426614174000', 'Matthew Wilson', 'matthew.wilson@example.com', '444-444-4444') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Matthew Wilson', email = 'matthew.wilson@example.com', phone_number = '444-444-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('b23e4567-e89b-12d3-a456-426614174000', 'Ava Anderson', 'ava.anderson@example.com', '888-888-8888') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ava Anderson', email = 'ava.anderson@example.com', phone_number = '888-888-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('c23e4567-e89b-12d3-a456-426614174000', 'James Thompson', 'james.thompson@example.com', '777-111-3333') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'James Thompson', email = 'james.thompson@example.com', phone_number = '777-111-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('d23e4567-e89b-12d3-a456-426614174000', 'Emma White', 'emma.white@example.com', '222-888-4444') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emma White', email = 'emma.white@example.com', phone_number = '222-888-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('e23e4567-e89b-12d3-a456-426614174000', 'David Harris', 'david.harris@example.com', '777-999-3333') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Harris', email = 'david.harris@example.com', phone_number = '777-999-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('f23e4567-e89b-12d3-a456-426614174000', 'Grace Lee', 'grace.lee@example.com', '888-222-1111') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace Lee', email = 'grace.lee@example.com', phone_number = '888-222-1111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('g23e4567-e89b-12d3-a456-426614174000', 'Christopher Clark', 'christopher.clark@example.com', '555-444-8888') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Christopher Clark', email = 'christopher.clark@example.com', phone_number = '555-444-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('h23e4567-e89b-12d3-a456-426614174000', 'Lily Baker', 'lily.baker@example.com', '333-666-9999') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Lily Baker', email = 'lily.baker@example.com', phone_number = '333-666-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('i23e4567-e89b-12d3-a456-426614174000', 'Joseph Green', 'joseph.green@example.com', '666-111-2222') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Joseph Green', email = 'joseph.green@example.com', phone_number = '666-111-2222';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    email STRING,\n    phone_number STRING\n);\n\nCREATE TABLE feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    feedback_text STRING,\n    sentiment_score DOUBLE,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, email, phone_number) VALUES ('j23e4567-e89b-12d3-a456-426614174000', 'Natalie Hall', 'natalie.hall@example.com', '999-444-7777') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Natalie Hall', email = 'natalie.hall@example.com', phone_number = '999-444-7777';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (1, 101, 4, 'Great service') ON DUPLICATE KEY UPDATE rating=4, feedback='Great service';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (2, 102, 3, 'Average experience') ON DUPLICATE KEY UPDATE rating=3, feedback='Average experience';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (3, 103, 5, 'Excellent support team') ON DUPLICATE KEY UPDATE rating=5, feedback='Excellent support team';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (1, 101, 'Good service overall', 0.8) ON DUPLICATE KEY UPDATE review_text='Good service overall', sentiment_score=0.8;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (2, 102, 'Could improve communication', 0.6) ON DUPLICATE KEY UPDATE review_text='Could improve communication', sentiment_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (3, 103, 'Prompt response time', 0.9) ON DUPLICATE KEY UPDATE review_text='Prompt response time', sentiment_score=0.9;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (101, 'Technical Support', 'IT', 1) ON DUPLICATE KEY UPDATE service_name='Technical Support', service_type='IT', feedback_id=1;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (102, 'Customer Care', 'General', 2) ON DUPLICATE KEY UPDATE service_name='Customer Care', service_type='General', feedback_id=2;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (103, 'Online Assistance', 'Technical', 3) ON DUPLICATE KEY UPDATE service_name='Online Assistance', service_type='Technical', feedback_id=3;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (4, 104, 2, 'Poor service') ON DUPLICATE KEY UPDATE rating=2, feedback='Poor service';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (5, 105, 4, 'Satisfactory experience') ON DUPLICATE KEY UPDATE rating=4, feedback='Satisfactory experience';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (6, 106, 3, 'Could be better') ON DUPLICATE KEY UPDATE rating=3, feedback='Could be better';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (4, 104, 'Slow response time', 0.4) ON DUPLICATE KEY UPDATE review_text='Slow response time', sentiment_score=0.4;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (5, 105, 'Helpful customer support', 0.7) ON DUPLICATE KEY UPDATE review_text='Helpful customer support', sentiment_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (6, 106, 'Lacking in communication', 0.5) ON DUPLICATE KEY UPDATE review_text='Lacking in communication', sentiment_score=0.5;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (104, 'Phone Support', 'General', 4) ON DUPLICATE KEY UPDATE service_name='Phone Support', service_type='General', feedback_id=4;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (105, 'Live Chat', 'Technical', 5) ON DUPLICATE KEY UPDATE service_name='Live Chat', service_type='Technical', feedback_id=5;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (106, 'Email Support', 'IT', 6) ON DUPLICATE KEY UPDATE service_name='Email Support', service_type='IT', feedback_id=6;",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (7, 107, 5, 'Best support service') ON DUPLICATE KEY UPDATE rating=5, feedback='Best support service';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (8, 108, 3, 'Unsatisfactory experience') ON DUPLICATE KEY UPDATE rating=3, feedback='Unsatisfactory experience';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (9, 109, 4, 'Good job overall') ON DUPLICATE KEY UPDATE rating=4, feedback='Good job overall';",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (1, 101, 4, 'Great service!') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (1, 101, 'Excellent product!', 0.9) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (1, 'Technical Support', 'Online', 1) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (2, 102, 3, 'Improvements needed.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (2, 102, 'Unsatisfactory service.', 0.4) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (2, 'Billing Support', 'Phone', 2) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (3, 103, 5, 'Exceptional service experience.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (3, 103, 'Highly recommended.', 0.95) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (3, 'Product Support', 'Email', 3) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (4, 104, 2, 'Disappointed with the services.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (4, 104, 'Poor customer support.', 0.2) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (4, 'Customer Service', 'Online', 4) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (5, 105, 4, 'Good service overall.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (5, 105, 'Satisfactory experience.', 0.6) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (5, 'Technical Support', 'Phone', 5) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (6, 106, 3, 'Average service quality.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (6, 106, 'Could be better.', 0.4) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (6, 'Billing Support', 'Online', 6) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO feedback_survey (survey_id, customer_id, rating, feedback) VALUES (7, 107, 5, 'Extremely satisfied with the support.') ON CONFLICT (survey_id) DO UPDATE SET rating = EXCLUDED.rating, feedback = EXCLUDED.feedback",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO review_sentiment (review_id, customer_id, review_text, sentiment_score) VALUES (7, 107, 'Best service received!', 0.99) ON CONFLICT (review_id) DO UPDATE SET review_text = EXCLUDED.review_text, sentiment_score = EXCLUDED.sentiment_score",
  "### TABLEDATA\n\nCREATE TABLE feedback_survey (\n  survey_id INT PRIMARY KEY,\n  customer_id INT,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE review_sentiment (\n  review_id INT PRIMARY KEY,\n  customer_id INT,\n  review_text TEXT,\n  sentiment_score FLOAT\n);\n\n\nCREATE TABLE support_services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_type VARCHAR(50),\n  feedback_id INT\n);\n\n### STATEMENT\n\nINSERT INTO support_services (service_id, service_name, service_type, feedback_id) VALUES (7, 'Product Support', 'Phone', 7) ON CONFLICT (service_id) DO UPDATE SET service_name = EXCLUDED.service_name, service_type = EXCLUDED.service_type, feedback_id = EXCLUDED.feedback_id",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('1', '1', 'Good service', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('1', '2', '2022-01-01', 8);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('1', 'Great product', 0.9, 15);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('1', 'Live Chat Support', 'Tech support', 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('2', '2', 'Could be improved', 0.5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('2', '3', '2022-01-03', 6);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('2', 'Not satisfied', 0.3, 2);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('2', 'Email Support', 'General inquiries', 4);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('3', '3', 'Excellent service', 0.9);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('3', '1', '2022-01-05', 9);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('3', 'Highly recommended', 0.95, 20);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('3', 'Phone Support', 'Billing assistance', 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('4', '4', 'Average experience', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('4', '4', '2022-01-07', 7);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('4', 'Needs improvement', 0.4, 6);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('4', '24/7 Chat Support', 'Technical issues', 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('5', '5', 'Great service', 0.85);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('5', '5', '2022-01-10', 8);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('5', 'Very helpful support team', 0.88, 12);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nUPSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('5', 'Email Support', 'Tech support', 4);",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('e1c01b3d-22c2-4edf-b195-6aef72b70956', 'c9920d18-2d81-4e72-af0c-420421f7bcee', 'Great service, very satisfied!', 0.9) ON CONFLICT (feedback_id) DO UPDATE SET feedback_text = 'Great service, very satisfied!', sentiment_score = 0.9;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('3a74edb8-78c2-4b16-8f3e-7169ebfaa891', 'c179325f-6f08-42f6-b5e6-6b9acc4d2340', '2022-01-15', 5) ON CONFLICT (survey_id) DO UPDATE SET survey_date = '2022-01-15', satisfaction_score = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('c875155c-d3f5-4a62-9475-077d1dd6d3da', 'I had a terrible experience with this product.', 0.2, 2) ON CONFLICT (review_id) DO UPDATE SET review_text = 'I had a terrible experience with this product.', sentiment_score = 0.2, helpful_votes = 2;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('b0c5e3bf-1d74-4430-bec5-83b73e08320d', 'Technical Support', 'Hardware', 4) ON CONFLICT (service_id) DO UPDATE SET service_name = 'Technical Support', support_category = 'Hardware', support_rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('0f42d693-e0de-4d93-a117-0c5ec426888e', 'a5d9ad83-c5e5-4d7e-9084-0378ea445a97', 'Service was average, could be better.', 0.5) ON CONFLICT (feedback_id) DO UPDATE SET feedback_text = 'Service was average, could be better.', sentiment_score = 0.5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('e0f5de42-0d91-4965-b789-b8c1293d41ca', 'f91e6ab8-d4b5-48fb-984f-3dc9f8cf1f34', '2022-01-20', 4) ON CONFLICT (survey_id) DO UPDATE SET survey_date = '2022-01-20', satisfaction_score = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('321a50d0-d011-4f79-93b9-2f09a1e2735a', 'Highly recommended, excellent product!', 0.9, 5) ON CONFLICT (review_id) DO UPDATE SET review_text = 'Highly recommended, excellent product!', sentiment_score = 0.9, helpful_votes = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('5b56169e-6840-4fab-8897-58e31a49df1d', 'Customer Support', 'Software', 5) ON CONFLICT (service_id) DO UPDATE SET service_name = 'Customer Support', support_category = 'Software', support_rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('a91c5f1e-7796-4d06-bb43-e624aa7634b0', 'f499ea19-8ca2-42e2-a176-87fb02ca69ff', 'Terrible service, highly disappointed.', 0.1) ON CONFLICT (feedback_id) DO UPDATE SET feedback_text = 'Terrible service, highly disappointed.', sentiment_score = 0.1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('f536bd1d-6086-465e-8e3c-8ef1bf565b58', 'fd70af0e-862d-4cdd-8f41-41e7afd463a6', '2022-01-25', 2) ON CONFLICT (survey_id) DO UPDATE SET survey_date = '2022-01-25', satisfaction_score = 2;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('b2c0ebce-3e9b-4b89-98c6-6dd7ba3157d4', 'The product was okay, nothing special.', 0.5, 3) ON CONFLICT (review_id) DO UPDATE SET review_text = 'The product was okay, nothing special.', sentiment_score = 0.5, helpful_votes = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('6f96e0fd-5a5b-48e0-bfae-f951aa8d8ba1', 'Online Support', 'Technical', 3) ON CONFLICT (service_id) DO UPDATE SET service_name = 'Online Support', support_category = 'Technical', support_rating = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('e1949c49-7c7a-4bb6-9b19-9d4d3ceb672b', 'f152a255-7d3b-4bf2-b820-7d9527fa2c54', 'Great support, highly satisfied with the service.', 0.9) ON CONFLICT (feedback_id) DO UPDATE SET feedback_text = 'Great support, highly satisfied with the service.', sentiment_score = 0.9;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('50bb8513-21be-4cf9-bb5b-bd43755f55da', 'e4594cc2-5b6f-4f83-b9d8-b7f219d1dae7', '2022-02-01', 4) ON CONFLICT (survey_id) DO UPDATE SET survey_date = '2022-02-01', satisfaction_score = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('c07b0ab8-bf18-4bd7-8d88-7479e4892b5a', 'Not satisfied with the product, needs improvement.', 0.3, 1) ON CONFLICT (review_id) DO UPDATE SET review_text = 'Not satisfied with the product, needs improvement.', sentiment_score = 0.3, helpful_votes = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('96121db2-758d-428f-88a3-9b13805e905d', 'Phone Support', 'Hardware', 4) ON CONFLICT (service_id) DO UPDATE SET service_name = 'Phone Support', support_category = 'Hardware', support_rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, sentiment_score) VALUES ('f9a8b74c-de95-42bd-9d24-26bbd4d2e1ca', 'b244b09b-8ed1-4695-94cc-7b1a1ce03367', 'Average service, could be better.', 0.5) ON CONFLICT (feedback_id) DO UPDATE SET feedback_text = 'Average service, could be better.', sentiment_score = 0.5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SurveyResponses (survey_id, customer_id, survey_date, satisfaction_score) VALUES ('55d6a49a-67ae-4a60-80cc-2c95e46aa1e9', 'e80e5360-8dd2-4456-bf7d-66be0d24a63d', '2022-02-05', 3) ON CONFLICT (survey_id) DO UPDATE SET survey_date = '2022-02-05', satisfaction_score = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO ReviewAnalysis (review_id, review_text, sentiment_score, helpful_votes) VALUES ('e7e8c7d2-998a-4f72-a3b7-56a8c12a3843', 'Product exceeded expectations, very happy with the purchase!', 0.9, 5) ON CONFLICT (review_id) DO UPDATE SET review_text = 'Product exceeded expectations, very happy with the purchase!', sentiment_score = 0.9, helpful_votes = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback ( \n    feedback_id UUID PRIMARY KEY, \n    customer_id UUID, \n    feedback_text TEXT, \n    sentiment_score FLOAT \n);\n\nCREATE TABLE SurveyResponses ( \n    survey_id UUID PRIMARY KEY, \n    customer_id UUID, \n    survey_date DATE, \n    satisfaction_score INT \n);\n\nCREATE TABLE ReviewAnalysis ( \n    review_id UUID PRIMARY KEY, \n    review_text TEXT, \n    sentiment_score FLOAT, \n    helpful_votes INT \n);\n\nCREATE TABLE SupportServices ( \n    service_id UUID PRIMARY KEY, \n    service_name TEXT, \n    support_category TEXT, \n    support_rating INT \n);\n\n### STATEMENT\n\nINSERT INTO SupportServices (service_id, service_name, support_category, support_rating) VALUES ('88f22093-dc05-4be4-a15c-28c82864b88f', 'Email Support', 'Software', 5) ON CONFLICT (service_id) DO UPDATE SET service_name = 'Email Support', support_category = 'Software', support_rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO surveys (survey_id, customer_id, survey_date, rating, feedback) VALUES (1, 101, '2022-01-05', 4, 'Great service') ON DUPLICATE KEY UPDATE rating = 4, feedback = 'Great service';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO surveys (survey_id, customer_id, survey_date, rating, feedback) VALUES (2, 102, '2022-01-10', 5, 'Excellent experience') ON DUPLICATE KEY UPDATE rating = 5, feedback = 'Excellent experience';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, review_date, rating, review_text) VALUES (1, 201, '2022-01-02', 4, 'Good product quality') ON DUPLICATE KEY UPDATE rating = 4, review_text = 'Good product quality';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, review_date, rating, review_text) VALUES (2, 202, '2022-01-08', 3, 'Average service') ON DUPLICATE KEY UPDATE rating = 3, review_text = 'Average service';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (101, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO support_tickets (ticket_id, customer_id, ticket_date, issue_description, status) VALUES (1, 101, '2022-01-03', 'Payment issue', 'Open') ON DUPLICATE KEY UPDATE issue_description = 'Payment issue', status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO support_tickets (ticket_id, customer_id, ticket_date, issue_description, status) VALUES (2, 102, '2022-01-12', 'Technical problem', 'Resolved') ON DUPLICATE KEY UPDATE issue_description = 'Technical problem', status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sentiment_analysis (analysis_id, review_id, sentiment_score, sentiment_label, analysis_date) VALUES (1, 1, 0.75, 'Positive', '2022-01-05') ON DUPLICATE KEY UPDATE sentiment_score = 0.75, sentiment_label = 'Positive', analysis_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sentiment_analysis (analysis_id, review_id, sentiment_score, sentiment_label, analysis_date) VALUES (2, 2, -0.25, 'Negative', '2022-01-10') ON DUPLICATE KEY UPDATE sentiment_score = -0.25, sentiment_label = 'Negative', analysis_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO surveys (survey_id, customer_id, survey_date, rating, feedback) VALUES (1, 101, '2022-01-10', 4, 'Good survey feedback') ON CONFLICT (survey_id) DO UPDATE SET rating = 5, feedback = 'Excellent survey feedback';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, review_date, rating, review_text) VALUES (1, 201, '2022-01-15', 4, 'Positive review text') ON CONFLICT (review_id) DO UPDATE SET rating = 5, review_text = 'Very positive review text';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (101, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO support_tickets (ticket_id, customer_id, ticket_date, issue_description, status) VALUES (1, 301, '2022-01-20', 'Issue with software installation', 'Open') ON CONFLICT (ticket_id) DO UPDATE SET issue_description = 'Issue with software configuration', status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sentiment_analysis (analysis_id, review_id, sentiment_score, sentiment_label, analysis_date) VALUES (1, 1, 4.5, 'Positive', '2022-01-25') ON CONFLICT (analysis_id) DO UPDATE SET sentiment_score = 4.8, sentiment_label = 'Very Positive';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO surveys (survey_id, customer_id, survey_date, rating, feedback) VALUES (2, 102, '2022-01-11', 3, 'Average survey feedback') ON CONFLICT (survey_id) DO UPDATE SET rating = 4, feedback = 'Above average survey feedback';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, customer_id, review_date, rating, review_text) VALUES (2, 202, '2022-01-16', 2, 'Negative review text') ON CONFLICT (review_id) DO UPDATE SET rating = 1, review_text = 'Very negative review text';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com', '456-789-0123') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO support_tickets (ticket_id, customer_id, ticket_date, issue_description, status) VALUES (2, 302, '2022-01-21', 'Network connectivity issue', 'Open') ON CONFLICT (ticket_id) DO UPDATE SET issue_description = 'Network performance issue', status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n  survey_id INT,\n  customer_id INT,\n  survey_date DATE,\n  rating INT,\n  feedback TEXT\n);\n\n\nCREATE TABLE reviews (\n  review_id INT,\n  customer_id INT,\n  review_date DATE,\n  rating INT,\n  review_text TEXT\n);\n\n\nCREATE TABLE customers (\n  customer_id INT,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE support_tickets (\n  ticket_id INT,\n  customer_id INT,\n  ticket_date DATE,\n  issue_description TEXT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE sentiment_analysis (\n  analysis_id INT,\n  review_id INT,\n  sentiment_score DECIMAL(5,2),\n  sentiment_label VARCHAR(10),\n  analysis_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO sentiment_analysis (analysis_id, review_id, sentiment_score, sentiment_label, analysis_date) VALUES (2, 2, 2.5, 'Negative', '2022-01-26') ON CONFLICT (analysis_id) DO UPDATE SET sentiment_score = 1.8, sentiment_label = 'Very Negative';"
]