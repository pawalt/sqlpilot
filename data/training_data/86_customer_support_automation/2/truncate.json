[
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  agent_id INT,\n  status VARCHAR(20)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE some_other_table;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    title TEXT NOT NULL,\n    description TEXT,\n    status TEXT DEFAULT 'Open',\n    assigned_agent_id UUID\n);\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name TEXT NOT NULL,\n    email TEXT NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_status;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  ticket_description TEXT,\n  assigned_agent_id INT,\n  status VARCHAR(20)\n);\n\n\nCREATE TABLE agents (\n  agent_id INT PRIMARY KEY,\n  agent_name VARCHAR(50),\n  department VARCHAR(50)\n);\n\n\nCREATE TABLE ticket_status (\n  status_id INT PRIMARY KEY,\n  status_name VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_status;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assignments;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id UUID PRIMARY KEY,\n    subject VARCHAR(255),\n    description TEXT,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id UUID PRIMARY KEY,\n    name VARCHAR(100),\n    email VARCHAR(100)\n);\n\n\nCREATE TABLE assignments (\n    assignment_id UUID PRIMARY KEY,\n    ticket_id UUID,\n    agent_id UUID,\n    assigned_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ticket_status (\n    status_id UUID PRIMARY KEY,\n    status_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE assignments;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_assignments;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE support_tickets;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE agents;",
  "### TABLEDATA\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_subject VARCHAR(255),\n    ticket_description TEXT,\n    created_date TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(100),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE ticket_assignments (\n    assignment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    assignment_date TIMESTAMP,\n    status VARCHAR(50),\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_comments (\n    comment_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    comment_text TEXT,\n    comment_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n\nCREATE TABLE ticket_history (\n    history_id INT PRIMARY KEY,\n    ticket_id INT,\n    agent_id INT,\n    action VARCHAR(255),\n    action_date TIMESTAMP,\n    FOREIGN KEY (ticket_id) REFERENCES support_tickets(ticket_id),\n    FOREIGN KEY (agent_id) REFERENCES agents(agent_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ticket_assignments;"
]