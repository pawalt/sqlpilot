[
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_time FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, conversation_text FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE customer_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_type = 'Complaint';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE conversation_text LIKE '%help%';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('hour', interaction_time)) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(interaction_time) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(interaction_time) FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) FROM customer_interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) FROM customer_interactions WHERE customer_id = '123456' GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATE_PART('hour', interaction_time)) FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, AVG(DATE_PART('hour', interaction_time)) FROM customer_interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions ORDER BY interaction_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions WHERE interaction_id = '12345';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_interactions WHERE interaction_time < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type FROM customer_interactions WHERE conversation_text LIKE '%complaint%';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(interaction_time) AS avg_time FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(interaction_id) AS num_interactions FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(LENGTH(conversation_text)) AS total_text_length FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS num_interactions FROM customer_interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions ORDER BY interaction_time DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(LENGTH(conversation_text)) AS avg_text_length FROM customer_interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS num_interactions, AVG(LENGTH(conversation_text)) AS avg_text_length FROM customer_interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions WHERE interaction_type IN ('purchase','support');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions WHERE interaction_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, COUNT(*) AS num_interactions FROM customer_interactions WHERE interaction_type = 'complaint' GROUP BY customer_id, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time, conversation_text FROM customer_interactions WHERE conversation_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time, LENGTH(conversation_text) AS text_length FROM customer_interactions WHERE conversation_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions WHERE interaction_time = (SELECT MAX(interaction_time) FROM customer_interactions);",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time, conversation_text FROM customer_interactions WHERE interaction_id IN (SELECT interaction_id FROM customer_interactions WHERE interaction_type = 'complaint');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_time FROM customer_interactions WHERE interaction_id = (SELECT interaction_id FROM customer_interactions WHERE interaction_type = 'support' LIMIT 1);",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    interaction_time TIMESTAMP,\n    interaction_type VARCHAR(50),\n    conversation_text TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, conversation_text FROM customer_interactions UNION SELECT customer_id, interaction_type, conversation_text FROM customer_interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, message FROM interactions WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number FROM customers WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers RIGHT JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(date) FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(message)) FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.name, interactions.date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE DATE(date) = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(message)) AS avg_message_length FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(date) AS last_interaction_date FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, message FROM customers, interactions WHERE customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, DATE(date) AS interaction_date FROM interactions ORDER BY date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS total_customers FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM interactions);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, message FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(LENGTH(message)) AS longest_message_length FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT interaction_type) AS unique_interaction_types FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT name, AVG(LENGTH(message)) AS avg_message_length FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customers.name, interactions.interaction_type FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(date) AS first_interaction_date FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20) NOT NULL\n);\nCREATE TABLE interactions (\n    interaction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    date TIMESTAMP NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Call' ORDER BY date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteractions;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_date FROM CustomerInteractions WHERE customer_id = 'some_customer_id';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteractions WHERE interaction_type = 'some_interaction_type';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Conversations;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, interaction_id, customer_id FROM Conversations WHERE customer_id = 'some_customer_id';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Conversations WHERE conversation_date >= '2022-01-01' AND conversation_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Responses;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, conversation_id, response_date FROM Responses WHERE conversation_id = 'some_conversation_id';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Responses WHERE response_date >= '2022-01-01' AND response_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.interaction_date, r.response_message FROM CustomerInteractions c JOIN Conversations cv ON c.interaction_id = cv.interaction_id JOIN Responses r ON cv.conversation_id = r.conversation_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT ci.customer_id, COUNT(ci.interaction_id) AS total_interactions FROM CustomerInteractions ci GROUP BY ci.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT ci.customer_id, AVG(DATE_PART('day', ci.interaction_date - ci.interaction_date)) AS avg_days_between_interactions FROM CustomerInteractions ci GROUP BY ci.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT ci.customer_id, MAX(ci.interaction_date) AS last_interaction_date FROM CustomerInteractions ci GROUP BY ci.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, COUNT(r.response_id) AS total_responses FROM Conversations c JOIN Responses r ON c.conversation_id = r.conversation_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, MAX(r.response_date) AS latest_response_date FROM Conversations c JOIN Responses r ON c.conversation_id = r.conversation_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, AVG(DATE_PART('day', r.response_date - c.conversation_date)) AS avg_response_time FROM Conversations c JOIN Responses r ON c.conversation_id = r.conversation_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, SUM(DATE_PART('day', r.response_date - c.conversation_date)) AS total_response_time FROM Conversations c JOIN Responses r ON c.conversation_id = r.conversation_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, MIN(ci.interaction_date) AS first_interaction_date FROM CustomerInteractions ci GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, MIN(r.response_date) AS first_response_date FROM Conversations c JOIN Responses r ON c.conversation_id = r.conversation_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT ci.customer_id, interaction_date, interaction_type, conversation_date, response_date FROM CustomerInteractions ci JOIN Conversations cv ON ci.interaction_id = cv.interaction_id JOIN Responses r ON cv.conversation_id = r.conversation_id WHERE ci.customer_id = 'some_customer_id';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteractions WHERE customer_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_date, interaction_notes FROM CustomerInteractions WHERE interaction_type = 'Phone Call';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.interaction_id, c.customer_id, c.interaction_date, co.conversation_id, co.conversation_date, co.conversation_notes FROM CustomerInteractions c JOIN Conversations co ON c.interaction_id = co.interaction_id WHERE c.customer_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n\tinteraction_id UUID PRIMARY KEY,\n\tcustomer_id UUID,\n\tinteraction_date TIMESTAMP,\n\tinteraction_type VARCHAR,\n\tinteraction_notes TEXT\n);\n\nCREATE TABLE Conversations (\n\tconversation_id UUID PRIMARY KEY,\n\tinteraction_id UUID,\n\tcustomer_id UUID,\n\tconversation_date TIMESTAMP,\n\tconversation_notes TEXT\n);\n\nCREATE TABLE Responses (\n\tresponse_id UUID PRIMARY KEY,\n\tconversation_id UUID,\n\tresponse_date TIMESTAMP,\n\tresponse_message TEXT\n);\n\n### STATEMENT\n\nSELECT c.interaction_id, c.interaction_date, co.conversation_id, co.conversation_date, res.response_id, res.response_date, res.response_message FROM CustomerInteractions c JOIN Conversations co ON c.interaction_id = co.interaction_id JOIN Responses res ON co.conversation_id = res.conversation_id WHERE c.customer_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_date, interaction_type, interaction_description FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email, customer_phone FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, interaction_id, customer_id, conversation_date, conversation_content FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, conversation_id, response_date, response_content FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM interactions WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_date, interaction_description FROM interactions WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_date, conversation_content FROM conversations WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_date, conversation_content FROM conversations WHERE interaction_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, response_date, response_content FROM responses WHERE conversation_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, response_date, response_content FROM responses WHERE response_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_date, conversation_content FROM conversations WHERE conversation_content LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM interactions ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_type FROM interactions WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_id IN (SELECT customer_id FROM interactions WHERE interaction_type = 'Email');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_date, conversation_content FROM conversations WHERE customer_id = 456 ORDER BY conversation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, response_date, response_content FROM responses WHERE conversation_id = 789 AND response_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM interactions WHERE interaction_type = 'Meeting' AND DATE(interaction_date) = '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type, interaction_description FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_date, conversation_content FROM conversations INNER JOIN responses ON conversations.conversation_id = responses.conversation_id WHERE response_date > '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_interactions FROM interactions WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, COUNT(*) AS total_conversations FROM customers LEFT JOIN conversations ON customers.customer_id = conversations.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS total_interactions FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type, MAX(interaction_date) AS last_interaction_date FROM customers INNER JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_responses FROM customers LEFT JOIN conversations ON customers.customer_id = conversations.customer_id INNER JOIN responses ON conversations.conversation_id = responses.conversation_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(response_date, conversation_date)) AS avg_response_time FROM conversations INNER JOIN responses ON conversations.conversation_id = responses.conversation_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(DATEDIFF(response_date, conversation_date)) AS total_response_time FROM customers INNER JOIN conversations ON customers.customer_id = conversations.customer_id INNER JOIN responses ON conversations.conversation_id = responses.conversation_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_interactions FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id UNION SELECT customer_name, COUNT(*) AS total_interactions FROM customers LEFT JOIN conversations ON customers.customer_id = conversations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, MIN(interaction_date) AS first_interaction_date FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, SUM(response_date > conversation_date) AS total_timely_responses FROM conversations INNER JOIN responses ON conversations.conversation_id = responses.conversation_id GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_interactions FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id HAVING total_interactions > 10;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(20)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    interaction_id INT,\n    customer_id INT,\n    conversation_date TIMESTAMP,\n    conversation_content TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date TIMESTAMP,\n    response_content TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, AVG(DATEDIFF(interaction_date, LAG(interaction_date) OVER (PARTITION BY customer_id ORDER BY interaction_date))) AS avg_time_between_interactions FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_type FROM interactions WHERE interaction_type = 'email';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM conversations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_topic FROM conversations WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT response_id, response_date, response_text FROM responses WHERE response_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products WHERE product_name LIKE '%phone%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM interactions WHERE interaction_type = 'chat');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT name, conversation_date FROM customers JOIN conversations ON customers.customer_id = conversations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products WHERE product_id = (SELECT product_id FROM responses WHERE response_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT name, interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_type = 'call';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT response_text, conversation_text FROM responses JOIN conversations ON responses.conversation_id = conversations.conversation_id WHERE response_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(interaction_date) AS last_interaction_date FROM interactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS interaction_count FROM interactions JOIN products ON interactions.customer_id = products.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT name, conversation_topic, response_text FROM customers JOIN conversations ON customers.customer_id = conversations.customer_id JOIN responses ON conversations.conversation_id = responses.conversation_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM conversations WHERE conversation_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS interaction_count FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATEDIFF(response_date, interaction_date)) AS avg_response_time FROM interactions JOIN responses ON interactions.interaction_id = responses.response_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM interactions WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM conversations WHERE conversation_date > '2022-06-01' AND conversation_date < '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT conversation_id, conversation_topic FROM conversations WHERE customer_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses WHERE response_date >= '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT response_text FROM responses WHERE conversation_id = 234;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM products WHERE product_id = 345;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN conversations ON customers.customer_id = conversations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM products JOIN responses ON products.product_id = responses.response_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions JOIN responses ON interactions.interaction_id = responses.response_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions JOIN conversations ON interactions.customer_id = conversations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM responses JOIN conversations ON responses.conversation_id = conversations.conversation_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customers JOIN responses ON customers.customer_id = responses.conversation_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM products JOIN interactions ON products.product_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description VARCHAR(255)\n);\n\nCREATE TABLE conversations (\n    conversation_id INT PRIMARY KEY,\n    customer_id INT,\n    conversation_date DATE,\n    conversation_topic VARCHAR(100),\n    conversation_text TEXT\n);\n\nCREATE TABLE responses (\n    response_id INT PRIMARY KEY,\n    conversation_id INT,\n    response_date DATE,\n    response_text TEXT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50) NOT NULL,\n    product_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM conversations JOIN responses ON conversations.conversation_id = responses.conversation_id;"
]