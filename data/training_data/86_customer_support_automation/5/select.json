[
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_calls FROM customer_support_data WHERE support_tickets > 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_notes FROM customer_support_data WHERE customer_calls < 3",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(support_tickets) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT support_notes FROM customer_support_data WHERE customer_id = 10",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(support_tickets) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(customer_calls) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, SUM(support_tickets) FROM customer_support_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE support_tickets < 10",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, customer_calls FROM customer_support_data WHERE support_tickets >= 5 AND customer_calls < 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT support_notes FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE support_tickets = 0",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT support_notes FROM customer_support_data WHERE customer_id = 15",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(customer_calls) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT support_notes AS notes FROM customer_support_data WHERE customer_id = 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM customer_support_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(customer_calls) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets FROM customer_support_data WHERE support_notes IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE customer_id = 1234",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets FROM customer_support_data WHERE support_tickets > 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_calls FROM customer_support_data WHERE support_calls IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE support_notes LIKE '%urgent%'",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, SUM(support_tickets) FROM customer_support_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(support_calls) FROM customer_support_data GROUP BY customer_id HAVING AVG(support_calls) > 3",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > 10 AND support_calls > 15",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, MAX(support_tickets) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(support_calls) AS total_calls FROM customer_support_data GROUP BY customer_id ORDER BY total_calls DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE customer_id IN (1001, 1002, 1003)",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT(customer_id) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > support_calls",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls, COUNT(support_notes) FROM customer_support_data GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets <> support_calls",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM customer_support_data",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_tickets > support_calls * 2",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data WHERE support_notes IS NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, support_tickets, support_calls FROM customer_support_data ORDER BY support_tickets DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n  customer_id INT PRIMARY KEY,\n  support_tickets INT,\n  customer_calls INT,\n  support_notes TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(support_tickets + support_calls) AS avg_support FROM customer_support_data GROUP BY customer_id HAVING avg_support > 5",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, issue_description FROM customer_support_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, ticket_id, timestamp FROM customer_support_data WHERE issue_description = 'Billing';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM crm_system_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, account_balance FROM crm_system_data WHERE subscription_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, last_interaction_timestamp, notes FROM crm_system_data WHERE account_balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, resolution FROM customer_support_data WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM crm_system_data WHERE subscription_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, account_balance FROM crm_system_data WHERE account_balance < 500;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, issue_description FROM customer_support_data WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE issue_description LIKE '%technical%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, account_balance, subscription_status FROM crm_system_data WHERE last_interaction_timestamp < '2021-12-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id FROM customer_support_data WHERE timestamp = (SELECT MAX(timestamp) FROM customer_support_data);",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM crm_system_data WHERE account_balance > 500 AND subscription_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, last_interaction_timestamp, notes FROM crm_system_data WHERE notes IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, resolution FROM customer_support_data WHERE resolution IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, account_balance FROM crm_system_data ORDER BY account_balance ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM crm_system_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE customer_id = 'abc123' AND resolution IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, customer_id, timestamp FROM customer_support_data WHERE issue_description LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT id, customer_id, account_balance FROM crm_system_data WHERE account_balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(account_balance) AS avg_balance FROM crm_system_data GROUP BY customer_id HAVING AVG(account_balance) > 500;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data JOIN crm_system_data ON customer_support_data.customer_id = crm_system_data.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(account_balance) AS min_balance FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(account_balance) AS max_balance FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(account_balance) AS avg_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id HAVING AVG(account_balance) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(account_balance) AS total_balance FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM crm_system_data WHERE notes IS NOT NULL GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(last_interaction_timestamp) AS last_interaction FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(last_interaction_timestamp) AS first_interaction FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(account_balance) AS total_balance, MAX(account_balance) AS max_balance, MIN(account_balance) AS min_balance FROM crm_system_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE issue_description = 'complaint' OR issue_description = 'refund' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(account_balance) AS min_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(account_balance) AS max_balance FROM crm_system_data WHERE subscription_status = true GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(account_balance) AS avg_balance, SUM(account_balance) AS total_balance FROM crm_system_data GROUP BY customer_id HAVING total_balance > 2000;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    ticket_id UUID,\n    timestamp TIMESTAMP,\n    issue_description TEXT,\n    resolution TEXT\n);\nCREATE TABLE crm_system_data (\n    id UUID PRIMARY KEY,\n    customer_id UUID,\n    account_balance DECIMAL,\n    subscription_status BOOLEAN,\n    last_interaction_timestamp TIMESTAMP,\n    notes TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_tickets FROM customer_support_data WHERE resolution IS NULL GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, issue_description FROM customer_support_data WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ticket_id, issue_description FROM customer_support_data WHERE ticket_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM crm_system_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email_address FROM crm_system_data WHERE customer_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, contact_number FROM crm_system_data WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_journey;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, touchpoint_description, timestamp FROM customer_journey WHERE customer_id = 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT touchpoint_id, timestamp FROM customer_journey WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, touchpoint_description FROM customer_journey WHERE customer_id = 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, timestamp FROM customer_journey WHERE customer_id = 50 AND touchpoint_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data ORDER BY ticket_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, issue_description FROM customer_support_data WHERE issue_description LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, issue_description FROM customer_support_data WHERE ticket_id = 200 AND issue_description = 'Server Down';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM crm_system_data ORDER BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, contact_number FROM crm_system_data WHERE email_address LIKE '%@gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM crm_system_data WHERE customer_id = 60;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_journey ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, touchpoint_description FROM customer_journey WHERE touchpoint_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, touchpoint_id FROM customer_journey WHERE timestamp >= '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, timestamp FROM customer_journey WHERE customer_id = 70 AND touchpoint_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_support_data WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT ticket_id, issue_description FROM customer_support_data WHERE issue_description LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, contact_number FROM crm_system_data WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, ticket_id, issue_description, timestamp FROM customer_support_data JOIN customer_journey ON customer_support_data.customer_id = customer_journey.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT(customer_id) FROM customer_journey WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(ticket_id) AS total_tickets FROM customer_support_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(touchpoint_id) FROM customer_journey GROUP BY customer_id HAVING AVG(touchpoint_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, contact_number, email_address FROM crm_system_data WHERE contact_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, issue_description, timestamp FROM customer_support_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(touchpoint_id) AS total_touchpoints FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(touchpoint_id) AS max_touchpoint FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(touchpoint_id) AS min_touchpoint FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_interactions FROM customer_journey WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(touchpoint_id) AS avg_touchpoint FROM customer_journey WHERE timestamp >= '2022-01-01' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, email_address FROM crm_system_data WHERE email_address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(ticket_id) AS total_tickets FROM customer_support_data WHERE issue_description IS NULL GROUP BY customer_id HAVING COUNT(ticket_id) > 0;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(timestamp) AS latest_interaction FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(timestamp) AS oldest_interaction FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(timestamp) AS avg_interaction_time FROM customer_journey GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_support_data (\n    customer_id INT,\n    ticket_id INT,\n    issue_description TEXT\n);\n\nCREATE TABLE crm_system_data (\n    customer_id INT,\n    customer_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    email_address VARCHAR(50)\n);\n\nCREATE TABLE customer_journey (\n    customer_id INT,\n    touchpoint_id INT,\n    touchpoint_description TEXT,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(ticket_id) AS total_resolved_tickets FROM customer_support_data WHERE issue_description LIKE '%resolved%' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE customer_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CustomerSupportTickets;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT ticket_description, ticket_status FROM CustomerSupportTickets;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CustomerSupportTickets WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CustomerSupportTickets WHERE ticket_status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CRMContacts;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT contact_name, contact_email FROM CRMContacts;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CRMContacts WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CRMInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM CRMInteractions;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CRMInteractions WHERE contact_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM CRMInteractions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT Customer.customer_name, CRMContacts.contact_name FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT Customer.customer_name, Customer.customer_address, CustomerSupportTickets.ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT Customer.customer_name, CRMContacts.contact_name, CRMInteractions.interaction_type FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT Customer.customer_name, CustomerSupportTickets.ticket_status, CRMInteractions.interaction_type FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id JOIN CRMInteractions ON Customer.customer_id = CRMInteractions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customer WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, COUNT(customer_id) FROM Customer GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE customer_id IN (SELECT customer_id FROM CRMContacts);",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, contact_name FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT contact_name, interaction_type FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name FROM Customer WHERE customer_id IN (SELECT customer_id FROM CustomerSupportTickets WHERE ticket_status = 'Open');",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, AVG(customer_id) FROM Customer GROUP BY customer_name HAVING AVG(customer_id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name FROM Customer ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT contact_email, COUNT(interaction_id) FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY contact_email HAVING COUNT(interaction_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, interaction_description FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, MAX(customer_id) FROM Customer GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, interaction_created_at FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, ticket_status, DATE(ticket_created_at) FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT contact_name, COUNT(interaction_id) FROM CRMContacts JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY contact_name ORDER BY COUNT(interaction_id) DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, AVG(DATE_PART('day', NOW() - interaction_created_at)) AS days_since_last_interaction FROM Customer JOIN CRMContacts ON Customer.customer_id = CRMContacts.customer_id JOIN CRMInteractions ON CRMContacts.contact_id = CRMInteractions.contact_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Customer {\\n  customer_id INT,\\n  customer_name VARCHAR(255),\\n  customer_email VARCHAR(255),\\n  customer_phone VARCHAR(20),\\n  customer_address VARCHAR(255),\\n}\\n\n\nCREATE TABLE CustomerSupportTickets {\\n  ticket_id INT,\\n  customer_id INT,\\n  ticket_description TEXT,\\n  ticket_status VARCHAR(50),\\n  ticket_created_at TIMESTAMP,\\n}\\n\n\nCREATE TABLE CRMContacts {\\n  contact_id INT,\\n  customer_id INT,\\n  contact_name VARCHAR(255),\\n  contact_email VARCHAR(255),\\n  contact_phone VARCHAR(20),\\n}\\n\n\nCREATE TABLE CRMInteractions {\\n  interaction_id INT,\\n  contact_id INT,\\n  interaction_type VARCHAR(50),\\n  interaction_description TEXT,\\n  interaction_created_at TIMESTAMP,\\n}\\n\n\n### STATEMENT\n\nSELECT customer_name, ticket_description FROM Customer JOIN CustomerSupportTickets ON Customer.customer_id = CustomerSupportTickets.customer_id WHERE DATE(ticket_created_at) = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SupportTicket;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT issue_description, status FROM SupportTicket;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CRMSystem;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT system_name, status FROM CRMSystem;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM CustomerInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerJourney;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT start_date, end_date FROM CustomerJourney;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT name, email, phone FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT issue_description, status, created_at FROM SupportTicket;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT system_name, integration_key, status FROM CRMSystem;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date, description FROM CustomerInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT start_date, end_date, journey_details FROM CustomerJourney;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SupportTicket WHERE status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CRMSystem WHERE status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteraction WHERE interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerJourney WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT name, email, address FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customer WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SupportTicket WHERE status = 'Open' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT system_name FROM CRMSystem WHERE status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM CustomerInteraction WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SupportTicket WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT status FROM CRMSystem;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) FROM SupportTicket WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerJourney WHERE customer_id = 7 AND start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_date, description FROM CustomerInteraction WHERE interaction_type = 'Call' ORDER BY interaction_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SupportTicket JOIN Customer ON SupportTicket.customer_id = Customer.id;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT name, email, system_name FROM Customer JOIN CRMSystem ON Customer.id = CRMSystem.system_id;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerInteraction WHERE customer_id = 8 AND DATE(interaction_date) = '2023-05-15';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(created_at) FROM SupportTicket WHERE status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(journey_id) FROM CustomerJourney;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE name LIKE '%John%' OR email LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT system_name, integration_key FROM CRMSystem WHERE status = 'Inactive';",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM Customer WHERE phone IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customer (id INT PRIMARY KEY,\n  name VARCHAR,\n  email VARCHAR,\n  phone VARCHAR,\n  address VARCHAR\n);\n\nCREATE TABLE SupportTicket (ticket_id INT PRIMARY KEY,\n  customer_id INT,\n  issue_description TEXT,\n  status VARCHAR,\n  created_at TIMESTAMP\n);\n\nCREATE TABLE CRMSystem (system_id INT PRIMARY KEY,\n  system_name VARCHAR,\n  integration_key VARCHAR,\n  status VARCHAR\n);\n\nCREATE TABLE CustomerInteraction (interaction_id INT PRIMARY KEY,\n  customer_id INT,\n  interaction_type VARCHAR,\n  interaction_date TIMESTAMP,\n  description TEXT\n);\n\nCREATE TABLE CustomerJourney (journey_id INT PRIMARY KEY,\n  customer_id INT,\n  start_date TIMESTAMP,\n  end_date TIMESTAMP,\n  journey_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInteraction WHERE description IS NOT NULL AND interaction_date >= '2024-01-01';"
]