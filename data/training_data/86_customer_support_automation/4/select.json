[
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT response_text FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM auto_responses WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT query_text, response_text FROM auto_responses WHERE query_text = 'Hello';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE response_text LIKE '%bye%';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses WHERE id > 10;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE response_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, UPPER(query_text) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, CONCAT(query_text, ' ', response_text) AS conversation FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses WHERE query_text IN ('Hello', 'Hi');",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, response_text FROM auto_responses WHERE response_text != 'Sorry';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT query_text FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses WHERE query_text LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text FROM auto_responses WHERE query_text = 'Help' OR response_text = 'Assistance';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT query_text, response_text FROM auto_responses WHERE id > 10;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT query_text FROM auto_responses WHERE response_text LIKE '%hello%';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT id FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM auto_responses WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE query_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE query_text = response_text;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT MAX(id) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(id) FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT response_text FROM auto_responses WHERE query_text LIKE '%bye%';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE LENGTH(query_text) > 10;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE query_text <> response_text;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, CONCAT(query_text, ' - ', response_text) AS concatenated_text FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE id BETWEEN 1 AND 5 OR id BETWEEN 15 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE query_text REGEXP '^[A-Za-z]+$';",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM auto_responses WHERE query_text IS NULL OR response_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, UPPER(query_text) AS uppercase_query FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE auto_responses (\n  id INT PRIMARY KEY,\n  query_text VARCHAR(255),\n  response_text VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT id, LOWER(response_text) AS lowercase_response FROM auto_responses;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT query_text FROM customer_queries WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT * FROM response_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT trigger_id, query_id, response_text FROM response_triggers WHERE trigger_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT query_id, response_text FROM response_triggers WHERE trigger_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries RIGHT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries INNER JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries CROSS JOIN response_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries ORDER BY customer_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries OFFSET 3;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_queries FROM customer_queries GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(customer_id) AS max_id FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries WHERE query_text LIKE 'Search%';",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries WHERE query_text IN ('Query 1', 'Query 2');",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT * FROM response_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT trigger_id, query_id, response_text FROM response_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT trigger_id, query_id, response_text FROM response_triggers WHERE trigger_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries RIGHT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries INNER JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, response_text FROM customer_queries CROSS JOIN response_triggers;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_queries FROM customer_queries GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_triggers FROM response_triggers GROUP BY query_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, COUNT(query_id) AS total_triggers FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, COUNT(query_id) AS total_triggers FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id GROUP BY customer_id HAVING COUNT(query_id) > 0;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, MAX(trigger_id) AS highest_trigger_id FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, MIN(trigger_id) AS lowest_trigger_id FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text, AVG(query_id) AS avg_query_id FROM customer_queries LEFT JOIN response_triggers ON customer_queries.customer_id = response_triggers.query_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM customer_queries;",
  "### TABLEDATA\n\nCREATE TABLE customer_queries (\n  customer_id INT PRIMARY KEY,\n  query_text TEXT\n);\n\nCREATE TABLE response_triggers (\n  trigger_id INT PRIMARY KEY,\n  query_id INT,\n  response_text TEXT,\n  FOREIGN KEY (query_id) REFERENCES customer_queries(customer_id) ON DELETE CASCADE\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM customer_queries WHERE query_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT response_text FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT trigger_id FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Triggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT trigger_id, trigger_text FROM Triggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text, response_text FROM CustomerQueries JOIN SQLQueries ON CustomerQueries.query_id = SQLQueries.query_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text, trigger_text FROM SQLQueries JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE query_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text FROM SQLQueries WHERE trigger_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries ORDER BY query_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Triggers ORDER BY trigger_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE query_text LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text FROM SQLQueries WHERE query_text LIKE '%SELECT%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, query_text FROM SQLQueries LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Triggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(query_id) FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_id, response_text FROM CustomerQueries WHERE query_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE query_id > 10 AND query_id < 20;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text FROM CustomerQueries WHERE response_text LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries ORDER BY query_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text FROM CustomerQueries WHERE LENGTH(query_text) > 50;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SQLQueries JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text FROM SQLQueries WHERE trigger_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT trigger_id) FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text FROM SQLQueries WHERE query_text LIKE '%SELECT%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM SQLQueries WHERE query_id = (SELECT MAX(query_id) FROM SQLQueries);",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(query_id), MIN(query_id) FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text, trigger_text FROM SQLQueries INNER JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text, trigger_text FROM SQLQueries LEFT JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT trigger_id, trigger_text FROM Triggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text FROM SQLQueries WHERE trigger_id IN (SELECT trigger_id FROM Triggers WHERE trigger_text = 'important');",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_queries FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(query_id) AS avg_query_id FROM SQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT query_text, trigger_text FROM SQLQueries RIGHT JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    response_text TEXT\n);\n\nCREATE TABLE SQLQueries (\n    query_id INT PRIMARY KEY,\n    query_text TEXT,\n    trigger_id INT\n);\n\nCREATE TABLE Triggers (\n    trigger_id INT PRIMARY KEY,\n    trigger_text TEXT\n);\n\n### STATEMENT\n\nSELECT trigger_text, COUNT(*) AS total_queries FROM SQLQueries JOIN Triggers ON SQLQueries.trigger_id = Triggers.trigger_id GROUP BY trigger_text;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM QueryTriggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM ResponseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT trigger_name, trigger_sql FROM QueryTriggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT log_message, log_timestamp FROM TriggerLogs;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT query_id, response_id FROM ResponseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE is_resolved = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM QueryTriggers WHERE trigger_name LIKE 'Trigger%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs ORDER BY log_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM ResponseHistory WHERE response_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT log_message, log_timestamp FROM TriggerLogs WHERE trigger_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT response_id, response_timestamp FROM ResponseHistory WHERE query_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT MIN(id) AS min_id FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE query_text ILIKE '%customer%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT id, query_text FROM CustomerQueries WHERE is_resolved = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries WHERE response_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM QueryTriggers WHERE trigger_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT trigger_name, trigger_sql FROM QueryTriggers ORDER BY trigger_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs WHERE log_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT trigger_id, log_message FROM TriggerLogs WHERE trigger_id IN (SELECT id FROM QueryTriggers WHERE trigger_name = 'Trigger1');",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT response_timestamp, COUNT(*) FROM ResponseHistory GROUP BY response_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT DISTINCT response_id FROM ResponseHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT response_id, COUNT(*) FROM ResponseHistory GROUP BY response_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries JOIN ResponseHistory ON CustomerQueries.id = ResponseHistory.query_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT CustomerQueries.id, query_text, response_text FROM CustomerQueries LEFT JOIN ResponseHistory ON CustomerQueries.id = ResponseHistory.query_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT CustomerQueries.id, query_text FROM CustomerQueries INNER JOIN ResponseHistory ON CustomerQueries.id = ResponseHistory.query_id WHERE response_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM QueryTriggers CROSS JOIN CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT response_text FROM CustomerQueries UNION SELECT log_message FROM TriggerLogs;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries UNION ALL SELECT * FROM QueryTriggers;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM QueryTriggers NATURAL JOIN TriggerLogs;",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT query_text FROM CustomerQueries WHERE query_text ILIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerQueries(id SERIAL PRIMARY KEY,\n  query_text TEXT,\n  response_text TEXT,\n  is_resolved BOOLEAN DEFAULT FALSE)\n\nCREATE TABLE QueryTriggers(id SERIAL PRIMARY KEY,\n  trigger_name VARCHAR(255),\n  trigger_sql TEXT)\n\nCREATE TABLE TriggerLogs(id SERIAL PRIMARY KEY,\n  trigger_id INT,\n  log_message TEXT,\n  log_timestamp TIMESTAMP)\n\nCREATE TABLE ResponseHistory(id SERIAL PRIMARY KEY,\n  query_id INT,\n  response_id INT,\n  response_timestamp TIMESTAMP)\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs WHERE log_message ILIKE '%success%';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM PredefinedSQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, query_id, query_date FROM CustomerQueryHistory;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, query_text FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM ResponsesToQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT query_text, response_text, query_date FROM PredefinedSQLQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs WHERE response_generated = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, trigger_event, trigger_time FROM TriggerLogs WHERE trigger_event = 'update';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, query_date FROM CustomerQueries WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT query_text, response_text FROM CustomerQueries WHERE query_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM PredefinedSQLQueries ORDER BY query_text ASC;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs WHERE trigger_time BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, trigger_event, trigger_time FROM TriggerLogs WHERE trigger_time < '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, query_text FROM CustomerQueries WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries WHERE response_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM PredefinedSQLQueries WHERE query_text LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueryHistory WHERE query_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries WHERE query_date >= '2022-01-01' ORDER BY query_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT response_text FROM PredefinedSQLQueries WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM TriggerLogs WHERE trigger_event LIKE '%error%' ORDER BY trigger_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerQueryHistory WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM CustomerQueries GROUP BY customer_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries r JOIN CustomerQueries c ON r.id = c.id;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(query_id) AS max_query_id FROM CustomerQueryHistory;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT query_text, query_date FROM CustomerQueries WHERE customer_id = 5 AND query_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(query_date) AS latest_query_date FROM CustomerQueries GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM CustomerQueryHistory;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS unique_customers FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResponsesToQueries WHERE query_text LIKE '%important%' AND response_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(CASE WHEN query_date >= '2022-01-01' THEN 1 ELSE 0 END) AS queries_this_year FROM CustomerQueries GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_query_id FROM ResponsesToQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT query_text, response_text FROM PredefinedSQLQueries WHERE response_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerQueries c LEFT JOIN CustomerQueryHistory h ON c.id = h.query_id;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_queries FROM CustomerQueries GROUP BY customer_id ORDER BY total_queries DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(query_date) AS first_query_date, MAX(query_date) AS latest_query_date FROM CustomerQueries;",
  "### TABLEDATA\n\nCREATE TABLE ResponsesToQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE CustomerQueries (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_text VARCHAR(255),\n    query_date TIMESTAMP\n);\n\nCREATE TABLE PredefinedSQLQueries (\n    id INT PRIMARY KEY,\n    query_text VARCHAR(255),\n    response_text VARCHAR(255)\n);\n\nCREATE TABLE TriggerLogs (\n    id INT PRIMARY KEY,\n    trigger_event VARCHAR(255),\n    trigger_time TIMESTAMP,\n    response_generated BOOLEAN\n);\n\nCREATE TABLE CustomerQueryHistory (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    query_id INT,\n    query_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, query_text, response_text FROM ResponsesToQueries WHERE response_text IN ('Yes', 'No');"
]