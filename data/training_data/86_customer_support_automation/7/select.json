[
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, customer_satisfaction FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT response_time, customer_satisfaction FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE response_time > 100;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE customer_satisfaction < 50;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM performance_metrics WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, customer_satisfaction FROM performance_metrics WHERE customer_satisfaction > 80;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT response_time, customer_satisfaction FROM performance_metrics WHERE response_time < 200;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics ORDER BY id;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics ORDER BY response_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics ORDER BY customer_satisfaction ASC;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT AVG(response_time) AS avg_response_time FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT MAX(customer_satisfaction) AS max_customer_satisfaction FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT MIN(response_time) AS min_response_time FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT SUM(response_time) AS total_response_time FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE response_time > 100 AND customer_satisfaction < 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT AVG(response_time) AS average_response_time FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT MIN(customer_satisfaction) AS min_customer_satisfaction FROM performance_metrics WHERE response_time < 50;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT MAX(response_time) AS max_response_time FROM performance_metrics WHERE customer_satisfaction > 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics WHERE response_time < 50 OR customer_satisfaction > 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT SUM(response_time) AS total_response_time FROM performance_metrics WHERE customer_satisfaction > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM performance_metrics WHERE response_time > 150;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE response_time BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT AVG(customer_satisfaction) AS average_customer_satisfaction FROM performance_metrics WHERE response_time > 100;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM performance_metrics WHERE customer_satisfaction <= 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT response_time FROM performance_metrics WHERE customer_satisfaction > 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, customer_satisfaction FROM performance_metrics WHERE response_time < 50;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT SUM(customer_satisfaction) AS total_customer_satisfaction FROM performance_metrics WHERE response_time < 60 AND customer_satisfaction > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics ORDER BY response_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics ORDER BY customer_satisfaction DESC, response_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, customer_satisfaction FROM performance_metrics WHERE response_time > 80 UNION SELECT id, customer_satisfaction FROM performance_metrics WHERE response_time < 20;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT response_time, customer_satisfaction FROM performance_metrics WHERE response_time IN (50, 100, 150);",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT response_time FROM performance_metrics WHERE customer_satisfaction BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT id, response_time, customer_satisfaction FROM performance_metrics WHERE response_time < 40 AND customer_satisfaction > 3;",
  "### TABLEDATA\n\nCREATE TABLE performance_metrics (\n   id SERIAL PRIMARY KEY,\n   response_time INT,\n   customer_satisfaction INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE response_time > 120 ORDER BY customer_satisfaction DESC, response_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, customer_id FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, customer_id, satisfaction_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time FROM response_times WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM response_times WHERE response_time > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction WHERE satisfaction_rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times INNER JOIN customer_satisfaction ON response_times.id = customer_satisfaction.id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times LEFT JOIN customer_satisfaction ON response_times.id = customer_satisfaction.id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times RIGHT JOIN customer_satisfaction ON response_times.id = customer_satisfaction.id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE time_stamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp FROM response_times ORDER BY time_stamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, response_time FROM response_times ORDER BY response_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction ORDER BY satisfaction_rating DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(response_time) AS average_response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT MAX(satisfaction_rating) AS max_satisfaction_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE response_time > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction WHERE satisfaction_rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp FROM response_times WHERE time_stamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(response_time) AS avg_response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(satisfaction_rating) AS avg_satisfaction FROM customer_satisfaction GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time FROM response_times ORDER BY time_stamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_responses FROM customer_satisfaction GROUP BY customer_id HAVING total_responses > 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction INNER JOIN response_times ON customer_satisfaction.customer_id = response_times.id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time FROM response_times WHERE response_time > (SELECT AVG(response_time) FROM response_times);",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction WHERE customer_id IN (SELECT id FROM response_times WHERE response_time < 1.0);",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction WHERE customer_id NOT IN (SELECT id FROM response_times);",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction UNION SELECT id, AVG(response_time) AS avg_response_time FROM response_times GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction UNION ALL SELECT id, AVG(response_time) AS avg_response_time FROM response_times GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(satisfaction_rating) AS max_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(satisfaction_rating) AS min_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(satisfaction_rating) - MIN(satisfaction_rating) AS rating_difference FROM customer_satisfaction GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating, RANK() OVER (PARTITION BY customer_id ORDER BY satisfaction_rating DESC) AS rank FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time, LAG(response_time) OVER (ORDER BY time_stamp) AS prev_response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time, LEAD(response_time) OVER (ORDER BY time_stamp) AS next_response_time FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  time_stamp TIMESTAMP,\n  response_time FLOAT\n);\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n### STATEMENT\n\nSELECT id, time_stamp, response_time, NTILE(4) OVER (ORDER BY response_time) AS response_time_quartile FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, date FROM response_times WHERE response_time_ms > 100;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, survey_date, satisfaction_score FROM customer_satisfaction WHERE satisfaction_score > 8.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM performance_metrics WHERE metric_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_score FROM customer_satisfaction WHERE survey_date >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, metric_name FROM performance_metrics WHERE metric_value >= 1000.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_value FROM performance_metrics WHERE metric_value BETWEEN 500.0 AND 1000.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, date, response_time_ms FROM response_times WHERE date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE satisfaction_score < 6.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_score FROM customer_satisfaction WHERE survey_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, metric_name, metric_date FROM performance_metrics WHERE metric_value < 500.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_name LIKE 'CPU%';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE time BETWEEN '09:00:00' AND '17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, date, response_time_ms FROM response_times WHERE response_time_ms > 500;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, metric_name FROM performance_metrics WHERE metric_value < 100.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_score FROM customer_satisfaction WHERE satisfaction_score BETWEEN 6.0 AND 8.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_date = '2022-04-10';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT id, date, response_time_ms FROM response_times WHERE date = '2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, survey_date, satisfaction_score FROM customer_satisfaction WHERE satisfaction_score < 5.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE response_time_ms > 100",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(response_time_ms) AS avg_response_time FROM response_times",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE date >= '2022-01-01' AND date <= '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(satisfaction_score) AS avg_satisfaction_score FROM customer_satisfaction GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_name, MAX(metric_value) AS max_value FROM performance_metrics GROUP BY metric_name",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times rt JOIN customer_satisfaction cs ON rt.id = cs.customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_name, AVG(metric_value) AS avg_value FROM performance_metrics WHERE metric_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE date = '2022-02-15' AND time >= '12:00:00'",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_responses FROM customer_satisfaction GROUP BY customer_id HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times rt LEFT JOIN customer_satisfaction cs ON rt.id = cs.customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(satisfaction_score) AS total_satisfaction FROM customer_satisfaction GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value, metric_date FROM performance_metrics WHERE metric_value >= 0.8",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times rt RIGHT JOIN customer_satisfaction cs ON rt.id = cs.customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(satisfaction_score) AS avg_score FROM customer_satisfaction WHERE survey_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times rt JOIN customer_satisfaction cs ON rt.id = cs.customer_id WHERE rt.response_time_ms < 50",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_name, MIN(metric_value) AS min_value FROM performance_metrics GROUP BY metric_name",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE response_time_ms BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(satisfaction_score) AS max_score FROM customer_satisfaction GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT metric_date, SUM(metric_value) AS total_value FROM performance_metrics GROUP BY metric_date",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n    id SERIAL PRIMARY KEY,\n    date DATE,\n    time TIME,\n    response_time_ms INT\n);\n\nCREATE TABLE customer_satisfaction (\n    id SERIAL PRIMARY KEY,\n    customer_id INT,\n    survey_date DATE,\n    satisfaction_score DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    id SERIAL PRIMARY KEY,\n    metric_name VARCHAR(50),\n    metric_value DECIMAL,\n    metric_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM response_times rt LEFT JOIN customer_satisfaction cs ON rt.id = cs.customer_id WHERE cs.customer_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT time_ms FROM response_times WHERE request_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT satisfaction_rating FROM customer_satisfaction WHERE customer_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_time_reports WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT response_time_ms FROM response_time_reports WHERE report_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM satisfaction_reports WHERE id = 7;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT satisfaction_score FROM satisfaction_reports WHERE report_id = 25;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT id, time_ms FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, response_time_ms FROM response_time_reports;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, satisfaction_score FROM satisfaction_reports;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_time_reports LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM satisfaction_reports LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times ORDER BY time_ms DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction ORDER BY satisfaction_rating DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_time_reports ORDER BY response_time_ms DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM satisfaction_reports ORDER BY satisfaction_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE time_ms > 100",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE satisfaction_rating BETWEEN 3 AND 5",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_rating FROM customer_satisfaction ORDER BY satisfaction_rating DESC",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT response_time_ms, satisfaction_score FROM response_time_reports AS rtr JOIN satisfaction_reports AS sr ON rtr.report_id = sr.report_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_responses FROM response_times",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT AVG(time_ms) AS avg_response_time FROM response_times",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(satisfaction_rating) AS avg_satisfaction FROM customer_satisfaction GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, MAX(response_time_ms) AS max_response_time FROM response_time_reports GROUP BY report_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, MAX(satisfaction_score) AS max_satisfaction_score FROM satisfaction_reports GROUP BY report_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_responses FROM response_times AS rt JOIN customer_satisfaction AS cs ON rt.request_id = cs.customer_id GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(response_time_ms) AS avg_response_time FROM response_time_reports GROUP BY report_id HAVING AVG(response_time_ms) > 500",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(satisfaction_score) AS avg_satisfaction_score FROM satisfaction_reports GROUP BY report_id HAVING AVG(satisfaction_score) < 4",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(satisfaction_rating) AS total_satisfaction FROM customer_satisfaction GROUP BY customer_id HAVING SUM(satisfaction_rating) > 10",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, MIN(response_time_ms) AS min_response_time FROM response_time_reports GROUP BY report_id HAVING MIN(response_time_ms) < 50",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, MIN(satisfaction_score) AS min_satisfaction_score FROM satisfaction_reports GROUP BY report_id HAVING MIN(satisfaction_score) > 2",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE time_ms <= 200 ORDER BY id DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE satisfaction_rating = 5 ORDER BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_responses FROM response_times AS rt JOIN customer_satisfaction AS cs ON rt.request_id = cs.customer_id GROUP BY customer_id HAVING total_responses < 3",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(response_time_ms) AS avg_response_time FROM response_time_reports GROUP BY report_id ORDER BY avg_response_time DESC",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  request_id INT,\n  time_ms INT\n);\n\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_rating INT\n);\n\n\nCREATE TABLE response_time_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  response_time_ms INT\n);\n\n\nCREATE TABLE satisfaction_reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  satisfaction_score INT\n);\n\n### STATEMENT\n\nSELECT report_id, AVG(satisfaction_score) AS avg_satisfaction_score FROM satisfaction_reports GROUP BY report_id ORDER BY avg_satisfaction_score ASC",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT id, timestamp, response_time FROM response_times WHERE status_code = 200;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT endpoint, response_time FROM response_times WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT id, satisfaction_score FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT feedback FROM customer_satisfaction WHERE satisfaction_score < 4;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT report_name, metric_type FROM reports;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM reports WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT dashboard_id, metric_name, metric_value FROM dashboard_metrics;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_metrics WHERE metric_value > 100.0;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, activity_type, activity_timestamp FROM user_activity;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM user_activity WHERE session_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT id, timestamp, endpoint FROM response_times WHERE response_time > 100;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_score, feedback FROM customer_satisfaction WHERE satisfaction_score >= 4;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT report_id, report_name FROM reports WHERE metric_type = 'performance';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT dashboard_id, metric_name, metric_value FROM dashboard_metrics WHERE dashboard_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, activity_type FROM user_activity WHERE activity_timestamp >= '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT id, timestamp, response_time FROM response_times WHERE status_code < 400;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT customer_id, satisfaction_score, feedback FROM customer_satisfaction WHERE satisfaction_score <= 3;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, metric_type FROM reports WHERE metric_type <> 'performance';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM response_times WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT endpoint, response_time FROM response_times WHERE status_code = 200;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT AVG(response_time) FROM response_times;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM customer_satisfaction WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT satisfaction_score FROM customer_satisfaction WHERE feedback LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM reports WHERE metric_type = 'performance';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT report_id, report_name FROM reports WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM dashboard_metrics WHERE dashboard_id = 101 AND metric_value > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT MAX(metric_value) FROM dashboard_metrics;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM user_activity WHERE activity_type = 'login' AND session_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS activity_count FROM user_activity GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT activity_type, COUNT(*) AS activity_count FROM user_activity GROUP BY activity_type;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT timestamp, AVG(metric_value) AS avg_value FROM dashboard_metrics GROUP BY timestamp;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT * FROM reports r JOIN dashboard_metrics d ON r.report_id = d.dashboard_id;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT r.id AS response_id, c.id AS customer_id FROM response_times r, customer_satisfaction c WHERE r.response_time < 100 AND c.satisfaction_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT a.user_id, b.metric_name FROM user_activity a JOIN dashboard_metrics b ON a.activity_timestamp = b.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT endpoint, COUNT(*) AS request_count FROM response_times GROUP BY endpoint;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT SUM(satisfaction_score) AS total_score FROM customer_satisfaction;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT CONCAT(report_name, ' - ', metric_type) AS report_details FROM reports;",
  "### TABLEDATA\n\nCREATE TABLE response_times (\n  id INT PRIMARY KEY,\n  timestamp TIMESTAMP,\n  response_time INT,\n  endpoint VARCHAR,\n  status_code INT\n)\n\nCREATE TABLE customer_satisfaction (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  satisfaction_score INT,\n  feedback TEXT\n)\n\nCREATE TABLE reports (\n  id INT PRIMARY KEY,\n  report_id INT,\n  report_name VARCHAR,\n  metric_type VARCHAR,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE dashboard_metrics (\n  id INT PRIMARY KEY,\n  dashboard_id INT,\n  metric_name VARCHAR,\n  metric_value FLOAT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_activity (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR,\n  activity_timestamp TIMESTAMP,\n  session_id INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM user_activity ORDER BY user_id ASC LIMIT 10;"
]