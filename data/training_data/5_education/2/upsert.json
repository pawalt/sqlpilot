[
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (1, 95, 85, 90);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (2, 90, 80, 85);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (3, 92, 88, 89);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (4, 88, 82, 85);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (5, 94, 86, 91);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (6, 91, 83, 87);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (7, 93, 87, 90);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (8, 89, 81, 86);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (9, 85, 79, 83);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (10, 87, 80, 85);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (11, 94, 88, 91);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (12, 90, 84, 88);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (13, 92, 86, 89);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (14, 86, 78, 82);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (15, 93, 85, 89);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (16, 88, 82, 86);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (17, 91, 86, 88);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (18, 85, 80, 83);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (19, 89, 84, 87);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_reports(student_id, attendance, performance, overall_progress) VALUES (20, 90, 87, 89);",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (1, 90, 85, 88) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (2, 95, 80, 90) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (3, 88, 92, 85) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (4, 92, 87, 89) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (5, 85, 90, 92) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (6, 91, 86, 87) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (7, 93, 89, 91) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (8, 87, 85, 88) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (9, 89, 92, 86) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (10, 94, 88, 90) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (11, 84, 90, 85) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (12, 90, 91, 89) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (13, 87, 87, 87) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (14, 91, 85, 89) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (15, 93, 92, 91) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (16, 88, 86, 87) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (17, 95, 89, 91) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (18, 86, 92, 88) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (19, 92, 88, 90) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_reports (\n  student_id INT PRIMARY KEY,\n  attendance INT,\n  performance INT,\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_reports (student_id, attendance, performance, overall_progress) VALUES (20, 88, 90, 87) ON CONFLICT (student_id) DO UPDATE SET attendance = EXCLUDED.attendance, performance = EXCLUDED.performance, overall_progress = EXCLUDED.overall_progress",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-10-01', 'Present') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-10-02', 'Absent') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (3, '2022-10-03', 'Present') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (4, '2022-10-04', 'Absent') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (5, '2022-10-05', 'Present') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (6, '2022-10-06', 'Absent') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (7, '2022-10-07', 'Present') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (8, '2022-10-08', 'Absent') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (9, '2022-10-09', 'Present') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (10, '2022-10-10', 'Absent') ON CONFLICT (student_id, date) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-10-15', 'Math', 85) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 85;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-10-16', 'Science', 75) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 75;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (3, '2022-10-17', 'History', 90) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (4, '2022-10-18', 'English', 80) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 80;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (5, '2022-10-19', 'Math', 88) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 88;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (6, '2022-10-20', 'Science', 78) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 78;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (7, '2022-10-21', 'History', 92) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 92;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (8, '2022-10-22', 'English', 82) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 82;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (9, '2022-10-23', 'Math', 87) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 87;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (10, '2022-10-24', 'Science', 77) ON CONFLICT (student_id, exam_date, subject) DO UPDATE SET score = 77;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-01-01', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-01-02', 'Absent') ON DUPLICATE KEY UPDATE status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-01-15', 'Mathematics', 85) ON DUPLICATE KEY UPDATE score = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-01-15', 'Mathematics', 70) ON DUPLICATE KEY UPDATE score = 75;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-01-03', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-01-04', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-01-20', 'Science', 78) ON DUPLICATE KEY UPDATE score = 80;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-01-20', 'Science', 65) ON DUPLICATE KEY UPDATE score = 70;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-01-05', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-01-06', 'Absent') ON DUPLICATE KEY UPDATE status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-02-15', 'History', 92) ON DUPLICATE KEY UPDATE score = 95;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-02-15', 'History', 80) ON DUPLICATE KEY UPDATE score = 85;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-01-07', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-01-08', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-02-20', 'Geography', 85) ON DUPLICATE KEY UPDATE score = 88;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-02-20', 'Geography', 70) ON DUPLICATE KEY UPDATE score = 75;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (1, '2022-01-09', 'Present') ON DUPLICATE KEY UPDATE status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (student_id, date, status) VALUES (2, '2022-01-10', 'Absent') ON DUPLICATE KEY UPDATE status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (1, '2022-03-15', 'English', 88) ON DUPLICATE KEY UPDATE score = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    student_id INT,\n    date DATE,\n    status VARCHAR(10)\n);\n\n\nCREATE TABLE student_performance (\n    student_id INT,\n    exam_date DATE,\n    subject VARCHAR(50),\n    score INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (student_id, exam_date, subject, score) VALUES (2, '2022-03-15', 'English', 75) ON DUPLICATE KEY UPDATE score = 80;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (id, student_id, date, status) VALUES ('1df5348c-ec40-4a5d-9b32-4c75c39bad64', '562ab5e5-7fdd-4e76-b023-d7461d3ef1d1', '2023-09-15', 'Present') ON CONFLICT (id) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (id, student_id, date, status) VALUES ('3baf52fe-d6fa-4b01-9b7a-f45e2be9c413', '51c4d6e3-c511-46d8-a878-2ed52c6d08f6', '2023-09-15', 'Absent') ON CONFLICT (id) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (id, student_id, date, status) VALUES ('24d955cb-5e73-4f25-9099-ec660f41eecb', 'a4cd4272-5c12-4884-891c-27b0773278d3', '2023-09-15', 'Late') ON CONFLICT (id) DO UPDATE SET status = 'Late';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (id, student_id, date, status) VALUES ('c02f7be9-6e91-44c4-84d0-d4a1c132d481', '79d2e051-bc6b-41f0-a95f-e9872376bff1', '2023-09-15', 'Present') ON CONFLICT (id) DO UPDATE SET status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_attendance (id, student_id, date, status) VALUES ('1548358f-bef1-41f3-8c15-50c2a12129a5', 'f9d28230-6de7-4155-b9b5-65762e1cccd9', '2023-09-15', 'Absent') ON CONFLICT (id) DO UPDATE SET status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('718d5ae2-84ac-4231-8a5e-5bdaf3c538e7', 'b7a851ad-c5a8-48f9-9c8e-0baf3bbaac38', '2023-09-15', 85.5, 'Math') ON CONFLICT (id) DO UPDATE SET grade = 85.5;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('274702c6-8d56-4c8a-8b3b-043f6ba7611b', '4bd38bb7-1867-47a2-9a84-aed3ace692ea', '2023-09-15', 78.3, 'Science') ON CONFLICT (id) DO UPDATE SET grade = 78.3;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('bcb05baf-5414-4b1f-a4df-522f02d8d8f0', '6b0d7390-3e6a-48b7-83cc-59dc0c931f0c', '2023-09-15', 92.1, 'History') ON CONFLICT (id) DO UPDATE SET grade = 92.1;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('26c750a5-d6d4-4205-8937-7b7466262dc8', 'f607bdc9-6b4a-4728-bd75-ff645dd88428', '2023-09-15', 87.6, 'English') ON CONFLICT (id) DO UPDATE SET grade = 87.6;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('4c2b2e92-fd68-4b23-b66d-97d0d5718e11', '06638b89-6a4a-41c4-8ccd-efd9ee753411', '2023-09-15', 94.0, 'Geography') ON CONFLICT (id) DO UPDATE SET grade = 94.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('e535108d-5d2f-471e-81c3-2e5db1d20a4b', 'ecad8d8c-1445-4cf1-8895-feb9a0e1aac4', 75.5, 'Making good progress') ON CONFLICT (id) DO UPDATE SET progress_percentage = 75.5;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('f7b97c81-9c1f-442b-85a2-9492e612c430', '3254da22-5a2c-4d11-8b1f-b819272d6be3', 80.2, 'Needs improvement in some areas') ON CONFLICT (id) DO UPDATE SET progress_percentage = 80.2;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('967e83f8-6360-438a-9f24-752e41438ef8', 'ce86accb-4e54-4eaa-b461-2b7b4c0ae069', 90.8, 'Excellent progress so far') ON CONFLICT (id) DO UPDATE SET progress_percentage = 90.8;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('2a13e35b-2894-4d1c-a3ef-a79f1f3647ac', '94d5a82c-4c03-4459-b95e-33bbd08bab85', 85.3, 'Showing steady improvement') ON CONFLICT (id) DO UPDATE SET progress_percentage = 85.3;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('f04a1b9c-40c2-471e-bb0a-4c11e262d613', '4c4aeaad-cb20-4fd2-bce7-911932adb6f5', 78.6, 'Needs more effort to progress') ON CONFLICT (id) DO UPDATE SET progress_percentage = 78.6;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('1', '1234', '2021-10-15', 'present') ON CONFLICT (id) DO UPDATE SET status = 'absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('1', '1234', '2021-10-20', 85.5, 'Math') ON CONFLICT (id) DO UPDATE SET grade = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('1', '1234', 85.0, 'Doing well in the course') ON CONFLICT (id) DO UPDATE SET progress_percentage = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('2', '5678', '2021-10-15', 'present') ON CONFLICT (id) DO UPDATE SET status = 'present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('2', '5678', '2021-10-20', 77.0, 'Science') ON CONFLICT (id) DO UPDATE SET grade = 80.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('2', '5678', 70.0, 'Needs improvement in certain areas') ON CONFLICT (id) DO UPDATE SET progress_percentage = 75.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('3', '9101', '2021-10-15', 'absent') ON CONFLICT (id) DO UPDATE SET status = 'present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('3', '9101', '2021-10-20', 92.0, 'English') ON CONFLICT (id) DO UPDATE SET grade = 95.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('3', '9101', 95.0, 'Excelling in the subject') ON CONFLICT (id) DO UPDATE SET progress_percentage = 100.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('4', '2468', '2021-10-15', 'present') ON CONFLICT (id) DO UPDATE SET status = 'absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('4', '2468', '2021-10-20', 80.0, 'History') ON CONFLICT (id) DO UPDATE SET grade = 85.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('4', '2468', 78.0, 'Making progress in the course') ON CONFLICT (id) DO UPDATE SET progress_percentage = 80.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('5', '1357', '2021-10-15', 'absent') ON CONFLICT (id) DO UPDATE SET status = 'present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('5', '1357', '2021-10-20', 95.0, 'Physics') ON CONFLICT (id) DO UPDATE SET grade = 98.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('5', '1357', 90.0, 'Excellent progress in the subject') ON CONFLICT (id) DO UPDATE SET progress_percentage = 95.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('6', '7890', '2021-10-15', 'present') ON CONFLICT (id) DO UPDATE SET status = 'absent';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('6', '7890', '2021-10-20', 70.0, 'Chemistry') ON CONFLICT (id) DO UPDATE SET grade = 75.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('6', '7890', 65.0, 'Needs to focus more on the course') ON CONFLICT (id) DO UPDATE SET progress_percentage = 70.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_attendance (id, student_id, date, status) VALUES ('7', '1593', '2021-10-15', 'absent') ON CONFLICT (id) DO UPDATE SET status = 'present';",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (id, student_id, exam_date, grade, subject) VALUES ('7', '1593', '2021-10-20', 88.0, 'Biology') ON CONFLICT (id) DO UPDATE SET grade = 92.0;",
  "### TABLEDATA\n\nCREATE TABLE student_attendance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    date DATE,\n    status VARCHAR\n);\n\n\nCREATE TABLE student_performance (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    exam_date DATE,\n    grade FLOAT,\n    subject VARCHAR\n);\n\n\nCREATE TABLE student_progress (\n    id UUID PRIMARY KEY,\n    student_id UUID,\n    progress_percentage FLOAT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nINSERT INTO student_progress (id, student_id, progress_percentage, feedback) VALUES ('7', '1593', 85.0, 'Doing well in the subject') ON CONFLICT (id) DO UPDATE SET progress_percentage = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('09876543-2101-0101-1234-567890abcdef', 'Alice', 'Smith', '2000-01-01', 'Female', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Smith', dob = '2000-01-01', gender = 'Female', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('12345678-9876-5432-0987-654321abcdef', 'Bob', 'Johnson', '1999-05-15', 'Male', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE first_name = 'Bob', last_name = 'Johnson', dob = '1999-05-15', gender = 'Male', email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('56789012-3456-7890-2103-987654abcdef', 'Emily', 'Davis', '2001-12-10', 'Female', 'emily.davis@example.com') ON DUPLICATE KEY UPDATE first_name = 'Emily', last_name = 'Davis', dob = '2001-12-10', gender = 'Female', email = 'emily.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('34567890-1234-5678-9012-345678abcdef', 'David', 'Brown', '1998-07-25', 'Male', 'david.brown@example.com') ON DUPLICATE KEY UPDATE first_name = 'David', last_name = 'Brown', dob = '1998-07-25', gender = 'Male', email = 'david.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('90123456-7890-1234-5678-901234abcdef', 'Laura', 'Wilson', '2003-03-05', 'Female', 'laura.wilson@example.com') ON DUPLICATE KEY UPDATE first_name = 'Laura', last_name = 'Wilson', dob = '2003-03-05', gender = 'Female', email = 'laura.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('65432109-8765-4321-0987-654321abcdef', 'Michael', 'Young', '1997-11-20', 'Male', 'michael.young@example.com') ON DUPLICATE KEY UPDATE first_name = 'Michael', last_name = 'Young', dob = '1997-11-20', gender = 'Male', email = 'michael.young@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('78901234-5678-9012-3456-789012abcdef', 'Sophia', 'Clark', '2002-09-12', 'Female', 'sophia.clark@example.com') ON DUPLICATE KEY UPDATE first_name = 'Sophia', last_name = 'Clark', dob = '2002-09-12', gender = 'Female', email = 'sophia.clark@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('23456789-0123-4567-8901-234567abcdef', 'Jack', 'Roberts', '1996-04-30', 'Male', 'jack.roberts@example.com') ON DUPLICATE KEY UPDATE first_name = 'Jack', last_name = 'Roberts', dob = '1996-04-30', gender = 'Male', email = 'jack.roberts@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('45678901-2345-6789-0123-456789abcdef', 'Olivia', 'Lee', '2000-08-18', 'Female', 'olivia.lee@example.com') ON DUPLICATE KEY UPDATE first_name = 'Olivia', last_name = 'Lee', dob = '2000-08-18', gender = 'Female', email = 'olivia.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('67890123-4567-8901-2345-678901abcdef', 'Henry', 'Garcia', '1999-02-14', 'Male', 'henry.garcia@example.com') ON DUPLICATE KEY UPDATE first_name = 'Henry', last_name = 'Garcia', dob = '1999-02-14', gender = 'Male', email = 'henry.garcia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('89012345-6789-0123-4567-890123abcdef', 'Ava', 'Martinez', '2001-06-23', 'Female', 'ava.martinez@example.com') ON DUPLICATE KEY UPDATE first_name = 'Ava', last_name = 'Martinez', dob = '2001-06-23', gender = 'Female', email = 'ava.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('01234567-8901-2345-6789-012345abcdef', 'Ethan', 'Lopez', '1997-10-05', 'Male', 'ethan.lopez@example.com') ON DUPLICATE KEY UPDATE first_name = 'Ethan', last_name = 'Lopez', dob = '1997-10-05', gender = 'Male', email = 'ethan.lopez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('54321098-7654-3210-9876-543210abcdef', 'Mia', 'Hernandez', '2002-01-17', 'Female', 'mia.hernandez@example.com') ON DUPLICATE KEY UPDATE first_name = 'Mia', last_name = 'Hernandez', dob = '2002-01-17', gender = 'Female', email = 'mia.hernandez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('87654321-0987-6543-2109-876543abcdef', 'Noah', 'King', '1998-09-30', 'Male', 'noah.king@example.com') ON DUPLICATE KEY UPDATE first_name = 'Noah', last_name = 'King', dob = '1998-09-30', gender = 'Male', email = 'noah.king@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('21098765-4321-0987-6543-210987abcdef', 'Lily', 'Perez', '2003-05-08', 'Female', 'lily.perez@example.com') ON DUPLICATE KEY UPDATE first_name = 'Lily', last_name = 'Perez', dob = '2003-05-08', gender = 'Female', email = 'lily.perez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('32109876-5432-1098-7654-321098abcdef', 'James', 'Gonzalez', '1999-12-25', 'Male', 'james.gonzalez@example.com') ON DUPLICATE KEY UPDATE first_name = 'James', last_name = 'Gonzalez', dob = '1999-12-25', gender = 'Male', email = 'james.gonzalez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('43210987-6543-2109-8765-432109abcdef', 'Grace', 'Torres', '2001-03-13', 'Female', 'grace.torres@example.com') ON DUPLICATE KEY UPDATE first_name = 'Grace', last_name = 'Torres', dob = '2001-03-13', gender = 'Female', email = 'grace.torres@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('09876543-2101-0101-1234-567890abcdef', 'Alice', 'Smith', '2000-01-01', 'Female', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Smith', dob = '2000-01-01', gender = 'Female', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('12345678-9876-5432-0987-654321abcdef', 'Bob', 'Johnson', '1999-05-15', 'Male', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE first_name = 'Bob', last_name = 'Johnson', dob = '1999-05-15', gender = 'Male', email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('1', 'Alice', 'Smith', '2000-05-15', 'Female', 'alice.smith@example.com') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', dob = '2000-05-15', gender = 'Female', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance_records (record_id, student_id, date, status) VALUES ('1', '1', '2023-01-10', 'Present') ON CONFLICT (record_id) DO UPDATE SET student_id = '1', date = '2023-01-10', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO exam_scores (score_id, student_id, exam_name, score) VALUES ('1', '1', 'Math Midterm', 85) ON CONFLICT (score_id) DO UPDATE SET student_id = '1', exam_name = 'Math Midterm', score = 85;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO progress_reports (report_id, student_id, term, overall_progress) VALUES ('1', '1', 1, 'Good progress in subjects') ON CONFLICT (report_id) DO UPDATE SET student_id = '1', term = 1, overall_progress = 'Good progress in subjects';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('2', 'Bob', 'Johnson', '1999-10-20', 'Male', 'bob.johnson@example.com') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', dob = '1999-10-20', gender = 'Male', email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance_records (record_id, student_id, date, status) VALUES ('2', '2', '2023-01-10', 'Present') ON CONFLICT (record_id) DO UPDATE SET student_id = '2', date = '2023-01-10', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO exam_scores (score_id, student_id, exam_name, score) VALUES ('2', '2', 'Science Final', 92) ON CONFLICT (score_id) DO UPDATE SET student_id = '2', exam_name = 'Science Final', score = 92;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO progress_reports (report_id, student_id, term, overall_progress) VALUES ('2', '2', 1, 'Excellent progress in Science') ON CONFLICT (report_id) DO UPDATE SET student_id = '2', term = 1, overall_progress = 'Excellent progress in Science';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('3', 'Charlie', 'Brown', '2001-08-05', 'Male', 'charlie.brown@example.com') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Charlie', last_name = 'Brown', dob = '2001-08-05', gender = 'Male', email = 'charlie.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance_records (record_id, student_id, date, status) VALUES ('3', '3', '2023-01-11', 'Absent') ON CONFLICT (record_id) DO UPDATE SET student_id = '3', date = '2023-01-11', status = 'Absent';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO exam_scores (score_id, student_id, exam_name, score) VALUES ('3', '3', 'History Quiz', 78) ON CONFLICT (score_id) DO UPDATE SET student_id = '3', exam_name = 'History Quiz', score = 78;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO progress_reports (report_id, student_id, term, overall_progress) VALUES ('3', '3', 1, 'Satisfactory progress in History') ON CONFLICT (report_id) DO UPDATE SET student_id = '3', term = 1, overall_progress = 'Satisfactory progress in History';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('4', 'David', 'Miller', '2000-03-25', 'Male', 'david.miller@example.com') ON CONFLICT (student_id) DO UPDATE SET first_name = 'David', last_name = 'Miller', dob = '2000-03-25', gender = 'Male', email = 'david.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance_records (record_id, student_id, date, status) VALUES ('4', '4', '2023-01-11', 'Present') ON CONFLICT (record_id) DO UPDATE SET student_id = '4', date = '2023-01-11', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO exam_scores (score_id, student_id, exam_name, score) VALUES ('4', '4', 'English Final', 88) ON CONFLICT (score_id) DO UPDATE SET student_id = '4', exam_name = 'English Final', score = 88;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO progress_reports (report_id, student_id, term, overall_progress) VALUES ('4', '4', 2, 'Great improvement in English') ON CONFLICT (report_id) DO UPDATE SET student_id = '4', term = 2, overall_progress = 'Great improvement in English';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO student_information (student_id, first_name, last_name, dob, gender, email) VALUES ('5', 'Emily', 'Green', '2002-01-30', 'Female', 'emily.green@example.com') ON CONFLICT (student_id) DO UPDATE SET first_name = 'Emily', last_name = 'Green', dob = '2002-01-30', gender = 'Female', email = 'emily.green@example.com';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance_records (record_id, student_id, date, status) VALUES ('5', '5', '2023-01-12', 'Present') ON CONFLICT (record_id) DO UPDATE SET student_id = '5', date = '2023-01-12', status = 'Present';",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO exam_scores (score_id, student_id, exam_name, score) VALUES ('5', '5', 'Chemistry Midterm', 90) ON CONFLICT (score_id) DO UPDATE SET student_id = '5', exam_name = 'Chemistry Midterm', score = 90;",
  "### TABLEDATA\n\nCREATE TABLE student_information (\n    student_id UUID PRIMARY KEY,\n    first_name STRING,\n    last_name STRING,\n    dob DATE,\n    gender STRING,\n    email STRING\n);\n\nCREATE TABLE attendance_records (\n    record_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    date DATE,\n    status STRING\n);\n\nCREATE TABLE exam_scores (\n    score_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    exam_name STRING,\n    score INT\n);\n\nCREATE TABLE progress_reports (\n    report_id UUID PRIMARY KEY,\n    student_id UUID REFERENCES student_information(student_id),\n    term INT,\n    overall_progress TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO progress_reports (report_id, student_id, term, overall_progress) VALUES ('5', '5', 2, 'Outstanding performance in Chemistry') ON CONFLICT (report_id) DO UPDATE SET student_id = '5', term = 2, overall_progress = 'Outstanding performance in Chemistry';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, full_name, date_of_birth) VALUES (1, 'John Doe', '2000-01-01') ON CONFLICT (student_id) DO UPDATE SET full_name = 'John Doe', date_of_birth = '2000-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, full_name, date_of_birth) VALUES (2, 'Jane Smith', '2001-02-02') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Jane Smith', date_of_birth = '2001-02-02';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, full_name, date_of_birth) VALUES (3, 'Alice Brown', '1999-03-03') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Alice Brown', date_of_birth = '1999-03-03';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, full_name, date_of_birth) VALUES (4, 'Bob Johnson', '2000-04-04') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Bob Johnson', date_of_birth = '2000-04-04';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, full_name, date_of_birth) VALUES (5, 'Sarah Wilson', '2002-05-05') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Sarah Wilson', date_of_birth = '2002-05-05';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (1, 1, '2021-01-01', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 1, class_date = '2021-01-01', is_present = true;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (2, 2, '2021-02-02', false) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 2, class_date = '2021-02-02', is_present = false;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (3, 3, '2021-03-03', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 3, class_date = '2021-03-03', is_present = true;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (4, 4, '2021-04-04', false) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 4, class_date = '2021-04-04', is_present = false;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (5, 5, '2021-05-05', true) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 5, class_date = '2021-05-05', is_present = true;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name) VALUES (1, 'Mathematics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name) VALUES (2, 'Science') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name) VALUES (3, 'History') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name) VALUES (4, 'English') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name) VALUES (5, 'Computer Science') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (1, 1, 1, 'A') ON CONFLICT (performance_id) DO UPDATE SET student_id = 1, course_id = 1, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (2, 2, 2, 'B') ON CONFLICT (performance_id) DO UPDATE SET student_id = 2, course_id = 2, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (3, 3, 3, 'C') ON CONFLICT (performance_id) DO UPDATE SET student_id = 3, course_id = 3, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (4, 4, 4, 'D') ON CONFLICT (performance_id) DO UPDATE SET student_id = 4, course_id = 4, grade = 'D';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (5, 5, 5, 'F') ON CONFLICT (performance_id) DO UPDATE SET student_id = 5, course_id = 5, grade = 'F';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO progress (progress_id, student_id, overall_progress) VALUES (1, 1, 90) ON CONFLICT (progress_id) DO UPDATE SET student_id = 1, overall_progress = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO progress (progress_id, student_id, overall_progress) VALUES (2, 2, 85) ON CONFLICT (progress_id) DO UPDATE SET student_id = 2, overall_progress = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO progress (progress_id, student_id, overall_progress) VALUES (3, 3, 95) ON CONFLICT (progress_id) DO UPDATE SET student_id = 3, overall_progress = 95;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO progress (progress_id, student_id, overall_progress) VALUES (4, 4, 75) ON CONFLICT (progress_id) DO UPDATE SET student_id = 4, overall_progress = 75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nUPSERT INTO progress (progress_id, student_id, overall_progress) VALUES (5, 5, 80) ON CONFLICT (progress_id) DO UPDATE SET student_id = 5, overall_progress = 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, full_name, date_of_birth) VALUES (1, 'John Doe', '1999-05-15') ON CONFLICT (student_id) DO UPDATE SET full_name = 'John Doe', date_of_birth = '1999-05-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (1, 1, '2021-08-10', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 1, class_date = '2021-08-10', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (1, 'Mathematics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (1, 1, 1, 'A') ON CONFLICT (performance_id) DO UPDATE SET student_id = 1, course_id = 1, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO progress (progress_id, student_id, overall_progress) VALUES (1, 1, 90) ON CONFLICT (progress_id) DO UPDATE SET student_id = 1, overall_progress = 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, full_name, date_of_birth) VALUES (2, 'Jane Smith', '2000-02-20') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Jane Smith', date_of_birth = '2000-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (2, 2, '2021-08-11', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 2, class_date = '2021-08-11', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (2, 'Science') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (2, 2, 2, 'B') ON CONFLICT (performance_id) DO UPDATE SET student_id = 2, course_id = 2, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO progress (progress_id, student_id, overall_progress) VALUES (2, 2, 85) ON CONFLICT (progress_id) DO UPDATE SET student_id = 2, overall_progress = 85;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, full_name, date_of_birth) VALUES (3, 'Alice Johnson', '1998-11-30') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Alice Johnson', date_of_birth = '1998-11-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (3, 3, '2021-08-12', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 3, class_date = '2021-08-12', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (3, 'History') ON CONFLICT (course_id) DO UPDATE SET course_name = 'History';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (3, 3, 3, 'C') ON CONFLICT (performance_id) DO UPDATE SET student_id = 3, course_id = 3, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO progress (progress_id, student_id, overall_progress) VALUES (3, 3, 75) ON CONFLICT (progress_id) DO UPDATE SET student_id = 3, overall_progress = 75;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, full_name, date_of_birth) VALUES (4, 'Michael Williams', '1997-09-25') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Michael Williams', date_of_birth = '1997-09-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (4, 4, '2021-08-13', FALSE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 4, class_date = '2021-08-13', is_present = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (4, 'English') ON CONFLICT (course_id) DO UPDATE SET course_name = 'English';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (4, 4, 4, 'D') ON CONFLICT (performance_id) DO UPDATE SET student_id = 4, course_id = 4, grade = 'D';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO progress (progress_id, student_id, overall_progress) VALUES (4, 4, 60) ON CONFLICT (progress_id) DO UPDATE SET student_id = 4, overall_progress = 60;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO students (student_id, full_name, date_of_birth) VALUES (5, 'Sarah Brown', '1996-06-18') ON CONFLICT (student_id) DO UPDATE SET full_name = 'Sarah Brown', date_of_birth = '1996-06-18';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO attendance (attendance_id, student_id, class_date, is_present) VALUES (5, 5, '2021-08-14', TRUE) ON CONFLICT (attendance_id) DO UPDATE SET student_id = 5, class_date = '2021-08-14', is_present = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name) VALUES (5, 'Physics') ON CONFLICT (course_id) DO UPDATE SET course_name = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO student_performance (performance_id, student_id, course_id, grade) VALUES (5, 5, 5, 'B') ON CONFLICT (performance_id) DO UPDATE SET student_id = 5, course_id = 5, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  full_name VARCHAR(50) NOT NULL,\n  date_of_birth DATE\n);\n\nCREATE TABLE attendance (\n  attendance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  class_date DATE,\n  is_present BOOLEAN\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE student_performance (\n  performance_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  course_id INT REFERENCES courses(course_id),\n  grade CHAR(1)\n);\n\nCREATE TABLE progress (\n  progress_id INT PRIMARY KEY,\n  student_id INT REFERENCES students(student_id),\n  overall_progress INT\n);\n\n### STATEMENT\n\nINSERT INTO progress (progress_id, student_id, overall_progress) VALUES (5, 5, 80) ON CONFLICT (progress_id) DO UPDATE SET student_id = 5, overall_progress = 80;"
]