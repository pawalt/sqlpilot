[
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (1, 'Alice', 18, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', age = 18, grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (2, 'Bob', 19, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', age = 19, grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (3, 'Charlie', 20, 'C') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', age = 20, grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (4, 'David', 21, 'D') ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', age = 21, grade = 'D';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (5, 'Eve', 22, 'E') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', age = 22, grade = 'E';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (6, 'Frank', 23, 'F') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Frank', age = 23, grade = 'F';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (7, 'Grace', 24, 'G') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Grace', age = 24, grade = 'G';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (8, 'Henry', 25, 'H') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Henry', age = 25, grade = 'H';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (9, 'Iris', 26, 'I') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Iris', age = 26, grade = 'I';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (10, 'Jack', 27, 'J') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Jack', age = 27, grade = 'J';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (11, 'Katie', 28, 'K') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Katie', age = 28, grade = 'K';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (12, 'Liam', 29, 'L') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Liam', age = 29, grade = 'L';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (13, 'Mia', 30, 'M') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Mia', age = 30, grade = 'M';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (14, 'Nathan', 31, 'N') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Nathan', age = 31, grade = 'N';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (15, 'Olivia', 32, 'O') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Olivia', age = 32, grade = 'O';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (16, 'Peter', 33, 'P') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Peter', age = 33, grade = 'P';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (17, 'Quinn', 34, 'Q') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Quinn', age = 34, grade = 'Q';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (18, 'Rachel', 35, 'R') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Rachel', age = 35, grade = 'R';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (19, 'Sam', 36, 'S') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Sam', age = 36, grade = 'S';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (20, 'Tom', 37, 'T') ON CONFLICT (student_id) DO UPDATE SET student_name = 'Tom', age = 37, grade = 'T';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (1, 'Alice', 20, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (2, 'Bob', 22, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (3, 'Charlie', 21, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (4, 'David', 23, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (5, 'Ellie', 24, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (6, 'Fiona', 20, 'C') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (7, 'George', 22, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (8, 'Hannah', 21, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (9, 'Isaac', 23, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (10, 'Jenny', 24, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (11, 'Kevin', 20, 'C') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (12, 'Linda', 22, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (13, 'Mike', 21, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (14, 'Nancy', 23, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (15, 'Oliver', 24, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (16, 'Peter', 20, 'C') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (17, 'Quinn', 22, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (18, 'Rachel', 21, 'B') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (19, 'Sam', 23, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, grade) VALUES (20, 'Tom', 24, 'A') ON CONFLICT (student_id) DO UPDATE SET student_name = excluded.student_name, age = excluded.age, grade = excluded.grade",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (1, 'Alice', 10, 3.8)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (2, 'Bob', 11, 3.5)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (3, 'Charlie', 9, 3.2)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (4, 'David', 12, 4.0)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (5, 'Eve', 10, 3.9)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor_name, credit_hours) VALUES (101, 'Math', 'Mr. Smith', 4)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor_name, credit_hours) VALUES (102, 'Science', 'Ms. Johnson', 3)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor_name, credit_hours) VALUES (103, 'History', 'Mr. Brown', 4)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor_name, credit_hours) VALUES (104, 'English', 'Ms. Lee', 3)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor_name, credit_hours) VALUES (105, 'Computer Science', 'Mr. White', 4)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (1, 'Alice', 10, 3.8) ON DUPLICATE KEY UPDATE student_name='Alice', grade_level=10, GPA=3.8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (2, 'Bob', 11, 3.5) ON DUPLICATE KEY UPDATE student_name='Bob', grade_level=11, GPA=3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (3, 'Charlie', 9, 3.2) ON DUPLICATE KEY UPDATE student_name='Charlie', grade_level=9, GPA=3.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (4, 'David', 12, 4.0) ON DUPLICATE KEY UPDATE student_name='David', grade_level=12, GPA=4.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (5, 'Eve', 10, 3.9) ON DUPLICATE KEY UPDATE student_name='Eve', grade_level=10, GPA=3.9;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (6, 'Frank', 11, 3.6) ON DUPLICATE KEY UPDATE student_name='Frank', grade_level=11, GPA=3.6;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (7, 'Grace', 9, 3.3) ON DUPLICATE KEY UPDATE student_name='Grace', grade_level=9, GPA=3.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (8, 'Henry', 12, 4.0) ON DUPLICATE KEY UPDATE student_name='Henry', grade_level=12, GPA=4.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (9, 'Ivy', 10, 4.0) ON DUPLICATE KEY UPDATE student_name='Ivy', grade_level=10, GPA=4.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (10, 'Jack', 11, 3.7) ON DUPLICATE KEY UPDATE student_name='Jack', grade_level=11, GPA=3.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (11, 'Kate', 9, 3.4) ON DUPLICATE KEY UPDATE student_name='Kate', grade_level=9, GPA=3.4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (12, 'Leo', 12, 3.9) ON DUPLICATE KEY UPDATE student_name='Leo', grade_level=12, GPA=3.9;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (13, 'Mia', 10, 3.6) ON DUPLICATE KEY UPDATE student_name='Mia', grade_level=10, GPA=3.6;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (14, 'Nina', 11, 3.3) ON DUPLICATE KEY UPDATE student_name='Nina', grade_level=11, GPA=3.3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (15, 'Owen', 9, 3.0) ON DUPLICATE KEY UPDATE student_name='Owen', grade_level=9, GPA=3.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (16, 'Pam', 12, 3.7) ON DUPLICATE KEY UPDATE student_name='Pam', grade_level=12, GPA=3.7;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (17, 'Quinn', 10, 3.2) ON DUPLICATE KEY UPDATE student_name='Quinn', grade_level=10, GPA=3.2;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (18, 'Ryan', 11, 2.8) ON DUPLICATE KEY UPDATE student_name='Ryan', grade_level=11, GPA=2.8;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (19, 'Sara', 9, 3.5) ON DUPLICATE KEY UPDATE student_name='Sara', grade_level=9, GPA=3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nUPSERT INTO students (student_id, student_name, grade_level, GPA) VALUES (20, 'Tom', 12, 4.0) ON DUPLICATE KEY UPDATE student_name='Tom', grade_level=12, GPA=4.0;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (1, 'Alice', 18, 'Female', 11) ON DUPLICATE KEY UPDATE student_name = 'Alice', age = 18, gender = 'Female', grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (1, 'Mathematics', 'Introduction to Math', 4) ON DUPLICATE KEY UPDATE course_name = 'Mathematics', course_description = 'Introduction to Math', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (1, 1, 1, 90.50) ON DUPLICATE KEY UPDATE student_id = 1, course_id = 1, grade = 90.50;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (2, 'Bob', 17, 'Male', 10) ON DUPLICATE KEY UPDATE student_name = 'Bob', age = 17, gender = 'Male', grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (2, 'Science', 'Introduction to Science', 3) ON DUPLICATE KEY UPDATE course_name = 'Science', course_description = 'Introduction to Science', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (2, 2, 2, 85.75) ON DUPLICATE KEY UPDATE student_id = 2, course_id = 2, grade = 85.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (3, 'Charlie', 16, 'Male', 10) ON DUPLICATE KEY UPDATE student_name = 'Charlie', age = 16, gender = 'Male', grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (3, 'History', 'Introduction to History', 3) ON DUPLICATE KEY UPDATE course_name = 'History', course_description = 'Introduction to History', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (3, 3, 3, 92.00) ON DUPLICATE KEY UPDATE student_id = 3, course_id = 3, grade = 92.00;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (4, 'David', 17, 'Male', 11) ON DUPLICATE KEY UPDATE student_name = 'David', age = 17, gender = 'Male', grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (4, 'English', 'Introduction to English', 4) ON DUPLICATE KEY UPDATE course_name = 'English', course_description = 'Introduction to English', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (4, 4, 4, 88.00) ON DUPLICATE KEY UPDATE student_id = 4, course_id = 4, grade = 88.00;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (5, 'Eva', 16, 'Female', 10) ON DUPLICATE KEY UPDATE student_name = 'Eva', age = 16, gender = 'Female', grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (5, 'Art', 'Introduction to Art', 2) ON DUPLICATE KEY UPDATE course_name = 'Art', course_description = 'Introduction to Art', credits = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (5, 5, 5, 75.25) ON DUPLICATE KEY UPDATE student_id = 5, course_id = 5, grade = 75.25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (6, 'Fiona', 17, 'Female', 11) ON DUPLICATE KEY UPDATE student_name = 'Fiona', age = 17, gender = 'Female', grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (6, 'Music', 'Introduction to Music', 2) ON DUPLICATE KEY UPDATE course_name = 'Music', course_description = 'Introduction to Music', credits = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (6, 6, 6, 78.75) ON DUPLICATE KEY UPDATE student_id = 6, course_id = 6, grade = 78.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (7, 'George', 18, 'Male', 12) ON DUPLICATE KEY UPDATE student_name = 'George', age = 18, gender = 'Male', grade_level = 12;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (7, 'Physics', 'Introduction to Physics', 3) ON DUPLICATE KEY UPDATE course_name = 'Physics', course_description = 'Introduction to Physics', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (7, 7, 7, 95.00) ON DUPLICATE KEY UPDATE student_id = 7, course_id = 7, grade = 95.00;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (1, 'Alice', 18, 'Female', 12) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Alice', age = 18, gender = 'Female', grade_level = 12;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (2, 'Bob', 17, 'Male', 11) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Bob', age = 17, gender = 'Male', grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (3, 'Charlie', 16, 'Male', 10) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Charlie', age = 16, gender = 'Male', grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (4, 'David', 17, 'Male', 11) ON CONFLICT (student_id) DO UPDATE SET student_name = 'David', age = 17, gender = 'Male', grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Students (student_id, student_name, age, gender, grade_level) VALUES (5, 'Eve', 16, 'Female', 10) ON CONFLICT (student_id) DO UPDATE SET student_name = 'Eve', age = 16, gender = 'Female', grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (101, 'Mathematics', 'Introduction to Algebra', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Mathematics', course_description = 'Introduction to Algebra', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (102, 'Science', 'Biology Basics', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Science', course_description = 'Biology Basics', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (103, 'History', 'World History', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'History', course_description = 'World History', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (104, 'English', 'Literature Study', 4) ON CONFLICT (course_id) DO UPDATE SET course_name = 'English', course_description = 'Literature Study', credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Courses (course_id, course_name, course_description, credits) VALUES (105, 'Computer Science', 'Programming Fundamentals', 3) ON CONFLICT (course_id) DO UPDATE SET course_name = 'Computer Science', course_description = 'Programming Fundamentals', credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (1, 1, 101, 85.50) ON CONFLICT (grade_id) DO UPDATE SET student_id = 1, course_id = 101, grade = 85.50;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (2, 2, 102, 77.25) ON CONFLICT (grade_id) DO UPDATE SET student_id = 2, course_id = 102, grade = 77.25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (3, 3, 103, 92.75) ON CONFLICT (grade_id) DO UPDATE SET student_id = 3, course_id = 103, grade = 92.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (4, 1, 104, 88.00) ON CONFLICT (grade_id) DO UPDATE SET student_id = 1, course_id = 104, grade = 88.00;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (5, 2, 105, 95.00) ON CONFLICT (grade_id) DO UPDATE SET student_id = 2, course_id = 105, grade = 95.00;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (6, 3, 101, 80.75) ON CONFLICT (grade_id) DO UPDATE SET student_id = 3, course_id = 101, grade = 80.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (7, 1, 102, 85.75) ON CONFLICT (grade_id) DO UPDATE SET student_id = 1, course_id = 102, grade = 85.75;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (8, 2, 103, 90.25) ON CONFLICT (grade_id) DO UPDATE SET student_id = 2, course_id = 103, grade = 90.25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (9, 3, 104, 87.50) ON CONFLICT (grade_id) DO UPDATE SET student_id = 3, course_id = 104, grade = 87.50;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nINSERT INTO Grades (grade_id, student_id, course_id, grade) VALUES (10, 1, 105, 92.00) ON CONFLICT (grade_id) DO UPDATE SET student_id = 1, course_id = 105, grade = 92.00;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nINSERT INTO students (student_id, name, age, grade) VALUES (1, 'Alice', 18, 'A') ON CONFLICT(student_id) DO UPDATE SET name = 'Alice', age = 19, grade = 'A+'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nINSERT INTO courses (course_id, name, instructor, credits) VALUES (1, 'Mathematics', 'Prof. Smith', 3) ON CONFLICT(course_id) DO UPDATE SET name = 'Mathematics', instructor = 'Prof. Brown', credits = 4",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nINSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (1, 1, 1, '2022-01-15') ON CONFLICT(enrollment_id) DO UPDATE SET student_id = 2, enrollment_date = '2022-01-20'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nINSERT INTO grades (grade_id, enrollment_id, grade, comments) VALUES (1, 1, 'A', 'Great job!') ON CONFLICT(grade_id) DO UPDATE SET enrollment_id = 2, grade = 'A+', comments = 'Excellent work!'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (1, 'Alice', 20, 'A') ON DUPLICATE KEY UPDATE name='Alice', age=20, grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (2, 'Bob', 22, 'B') ON DUPLICATE KEY UPDATE name='Bob', age=22, grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (101, 'Mathematics', 'Prof. Johnson', 3) ON DUPLICATE KEY UPDATE name='Mathematics', instructor='Prof. Johnson', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (102, 'Physics', 'Prof. Smith', 4) ON DUPLICATE KEY UPDATE name='Physics', instructor='Prof. Smith', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (201, 1, 101, '2022-01-15') ON DUPLICATE KEY UPDATE student_id=1, course_id=101, enrollment_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (202, 2, 102, '2022-02-20') ON DUPLICATE KEY UPDATE student_id=2, course_id=102, enrollment_date='2022-02-20';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (grade_id, enrollment_id, grade, comments) VALUES (301, 201, 'A', 'Excellent performance') ON DUPLICATE KEY UPDATE enrollment_id=201, grade='A', comments='Excellent performance';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (grade_id, enrollment_id, grade, comments) VALUES (302, 202, 'B', 'Good effort') ON DUPLICATE KEY UPDATE enrollment_id=202, grade='B', comments='Good effort';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (3, 'Charlie', 25, 'C') ON DUPLICATE KEY UPDATE name='Charlie', age=25, grade='C';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (4, 'David', 23, 'B') ON DUPLICATE KEY UPDATE name='David', age=23, grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (103, 'Biology', 'Prof. Davis', 3) ON DUPLICATE KEY UPDATE name='Biology', instructor='Prof. Davis', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (104, 'Chemistry', 'Prof. Wilson', 4) ON DUPLICATE KEY UPDATE name='Chemistry', instructor='Prof. Wilson', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (203, 3, 103, '2022-03-25') ON DUPLICATE KEY UPDATE student_id=3, course_id=103, enrollment_date='2022-03-25';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, enrollment_date) VALUES (204, 4, 104, '2022-04-30') ON DUPLICATE KEY UPDATE student_id=4, course_id=104, enrollment_date='2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (grade_id, enrollment_id, grade, comments) VALUES (303, 203, 'B', 'Good progress') ON DUPLICATE KEY UPDATE enrollment_id=203, grade='B', comments='Good progress';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (grade_id, enrollment_id, grade, comments) VALUES (304, 204, 'A', 'High achiever') ON DUPLICATE KEY UPDATE enrollment_id=204, grade='A', comments='High achiever';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (5, 'Emma', 24, 'B') ON DUPLICATE KEY UPDATE name='Emma', age=24, grade='B';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO students (student_id, name, age, grade) VALUES (6, 'Frank', 21, 'A') ON DUPLICATE KEY UPDATE name='Frank', age=21, grade='A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (105, 'History', 'Prof. Brown', 3) ON DUPLICATE KEY UPDATE name='History', instructor='Prof. Brown', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, name, instructor, credits) VALUES (106, 'Computer Science', 'Prof. Taylor', 4) ON DUPLICATE KEY UPDATE name='Computer Science', instructor='Prof. Taylor', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (1, 'Alice', 20, 'Female', 3.5);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (2, 'Bob', 22, 'Male', 3.7);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (3, 'Charlie', 21, 'Male', 3.9);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (4, 'Diana', 23, 'Female', 3.8);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (5, 'Eva', 20, 'Female', 3.6);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (101, 'Mathematics', 'John Doe', 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (102, 'Physics', 'Jane Smith', 4);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (103, 'History', 'Michael Johnson', 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (104, 'Computer Science', 'Emily Lee', 4);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (105, 'English Literature', 'David Brown', 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (201, 1, 101, 'Spring 2022', 'A');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (202, 2, 102, 'Fall 2021', 'B+');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (203, 3, 103, 'Spring 2022', 'A-');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (204, 4, 104, 'Fall 2021', 'A');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (205, 5, 105, 'Spring 2022', 'B');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (301, 1, 101, 'A');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (302, 2, 102, 'B+');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (303, 3, 103, 'A-');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (304, 4, 104, 'A');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (305, 5, 105, 'B');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (501, 'Professor Green', 'Mathematics', 10);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (502, 'Professor Blue', 'Physics', 12);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (503, 'Professor Red', 'History', 8);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (504, 'Professor Yellow', 'Computer Science', 15);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (505, 'Professor Purple', 'English', 7);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (1, 'Alice', 20, 'Female', 3.5)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (101, 'Mathematics', 'Prof. Smith', 4)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (1, 1, 101, 'Fall 2021', 'A')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (1, 1, 101, 'A')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (201, 'Prof. Johnson', 'Mathematics Department', 10)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (2, 'Bob', 22, 'Male', 3.7)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (102, 'Physics', 'Prof. Brown', 5)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (2, 2, 102, 'Spring 2022', 'B')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (2, 2, 102, 'B')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (202, 'Prof. Davis', 'Physics Department', 8)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (3, 'Charlie', 21, 'Male', 3.2)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (103, 'Biology', 'Prof. White', 3)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (3, 3, 103, 'Fall 2022', 'C')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (3, 3, 103, 'C')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (203, 'Prof. Adams', 'Biology Department', 6)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO students (id, name, age, gender, GPA) VALUES (4, 'Diana', 23, 'Female', 3.8)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO courses (course_id, course_name, instructor, credits) VALUES (104, 'Chemistry', 'Prof. Green', 4)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO enrollments (enrollment_id, student_id, course_id, semester, grade) VALUES (4, 4, 104, 'Spring 2023', 'A')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO grades (id, student_id, course_id, grade) VALUES (4, 4, 104, 'A')",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nUPSERT INTO instructors (instructor_id, name, department, teaching_experience) VALUES (204, 'Prof. Lee', 'Chemistry Department', 7)"
]