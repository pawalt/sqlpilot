[
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE age <= 18;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students ORDER BY grade ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE age BETWEEN 15 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE grade = 'B' ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students WHERE student_id IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(age) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(age) FROM Students WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT grade FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE grade = 'C' AND age >= 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE age < 30 ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE age NOT BETWEEN 25 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 3 OR student_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE grade = 'A' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE age = (SELECT MAX(age) FROM Students);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(age), grade FROM Students GROUP BY grade HAVING AVG(age) > 22;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE age > 20 AND grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Students WHERE age BETWEEN 18 AND 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(age) FROM Students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(age) FROM Students WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT grade FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE age < 18 OR age > 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE grade NOT IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students WHERE age > 20 AND (grade = 'B' OR grade = 'C');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age, grade FROM Students WHERE age < 25 AND (grade = 'A' OR grade = 'B') ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(age) as average_age, MAX(age) as max_age FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id FROM Students WHERE grade = 'A' AND (age < 20 OR age > 25);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age, grade FROM Students WHERE student_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE grade IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students WHERE age BETWEEN 18 AND 22 AND (grade = 'A' OR grade = 'B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name FROM Students WHERE age < 20 UNION SELECT student_name FROM Students WHERE age > 25;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT MIN(age) FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE grade = 'A' OR grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n  student_id INT PRIMARY KEY,\n  student_name VARCHAR,\n  age INT,\n  grade VARCHAR\n)\n\n### STATEMENT\n\nSELECT student_name, age FROM Students WHERE age >= 18 AND age <= 22 AND grade LIKE '%B%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT course_id, credit_hours FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade_level FROM students WHERE GPA > 3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students WHERE grade_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE grade_level = 12;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM courses WHERE credit_hours > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY GPA DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students ORDER BY GPA ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_id, grade_level FROM students WHERE student_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE instructor_name = 'Professor Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, credit_hours FROM courses WHERE credit_hours BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT AVG(GPA) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students WHERE grade_level = 11;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT MAX(credit_hours) FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT MIN(GPA) FROM students WHERE grade_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE grade_level > 10 AND GPA >= 3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students WHERE grade_level = 12 AND GPA < 3.0;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade_level FROM students WHERE GPA BETWEEN 3.0 AND 3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade_level FROM students WHERE student_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id IN (SELECT student_id FROM courses WHERE credit_hours > 3);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.course_id WHERE credit_hours > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, GPA FROM students WHERE student_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE GPA > 3.0 ORDER BY student_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, grade_level, GPA FROM students WHERE grade_level >= 10 ORDER BY GPA DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students LEFT JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students RIGHT JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(GPA) AS average_gpa FROM students GROUP BY grade_level HAVING grade_level > 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT instructor_name, AVG(credit_hours) AS avg_credit_hours FROM courses GROUP BY instructor_name HAVING AVG(credit_hours) > 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name FROM students JOIN courses ON students.student_id = courses.course_id WHERE grade_level = 11 AND GPA >= 3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id < 1005;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE instructor_name LIKE 'Dr%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name STRING,\n    grade_level INT,\n    GPA FLOAT\n);\n\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name STRING,\n    instructor_name STRING,\n    credit_hours INT\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, credit_hours FROM students JOIN courses ON students.student_id = courses.course_id WHERE credit_hours > 3 AND GPA >= 3.0 ORDER BY credit_hours DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, age FROM Students WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, credits FROM Courses WHERE credits > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_description FROM Courses WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades WHERE grade >= 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.student_id, Students.student_name, Courses.course_name, Courses.credits FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.student_name, Courses.course_name, Grades.grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE Students.gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.student_name, COUNT(course_id) AS course_count FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, AVG(grade) AS avg_grade FROM Grades GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.age, AVG(Grades.grade) AS avg_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.age;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.student_id, Students.student_name, COUNT(Grades.grade) AS grade_count FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.student_name, MAX(Grades.grade) AS max_grade FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id GROUP BY Students.student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE grade = (SELECT MAX(grade) FROM Grades);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE grade = (SELECT MIN(grade) FROM Grades);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id ORDER BY grade DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id ORDER BY grade ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, age, gender FROM Students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade >= 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, AVG(grade) AS average_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, AVG(grade) AS average_grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(student_id) AS num_enrolled_students FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, SUM(credits) AS total_credits FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age, COUNT(student_id) AS num_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, MIN(grade) AS min_grade, MAX(grade) AS max_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE grade BETWEEN 70 AND 90;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id WHERE grade < 60;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY grade DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id ORDER BY student_name, grade;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, student_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, course_name, grade FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id WHERE Students.age > 25 AND Courses.credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, AVG(grade) AS average_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id WHERE grade >= 80 GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, COUNT(course_id) AS num_courses FROM Students JOIN Grades ON Students.student_id = Grades.student_id GROUP BY student_name HAVING COUNT(course_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(student_id) AS num_students FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name HAVING COUNT(student_id) >= 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_name, SUM(credits) AS total_credits FROM Students JOIN Grades ON Students.student_id = Grades.student_id JOIN Courses ON Grades.course_id = Courses.course_id GROUP BY student_name HAVING SUM(credits) < 15;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    grade_level INT\n);\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255),\n    course_description TEXT,\n    credits INT\n);\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, MAX(grade) AS max_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_name HAVING MAX(grade) > 90;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM students",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, age FROM students",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT student_id, name, age, grade FROM students",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT student_id, name, age, grade FROM students WHERE age > 20",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM students WHERE grade = 'A'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT student_id, name FROM students WHERE age < 18",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM courses",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, instructor FROM courses",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT course_id, name, credits FROM courses",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM courses WHERE credits >= 3",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM enrollments",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id FROM enrollments",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT enrollment_id, enrollment_date FROM enrollments",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM enrollments WHERE enrollment_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM grades",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT enrollment_id, grade FROM grades",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT grade_id, comments FROM grades",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM grades WHERE grade = 'B+'",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name, g.grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, age FROM students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, grade FROM students WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, instructor FROM courses WHERE credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT name, enrollment_date FROM enrollments WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name, e.enrollment_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, g.grade, g.comments FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN grades g ON e.enrollment_id = g.enrollment_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name, g.grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT c.name, c.instructor, COUNT(e.enrollment_id) AS enroll_count FROM courses c LEFT JOIN enrollments e ON c.course_id = e.course_id GROUP BY c.name, c.instructor;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, AVG(g.grade) AS avg_grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN grades g ON e.enrollment_id = g.enrollment_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name, MAX(g.grade) AS max_grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id GROUP BY s.name, c.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, COUNT(DISTINCT c.name) AS course_count FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, AVG(c.credits) AS avg_credits FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name AS course_name, g.grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id WHERE s.age < 25 AND g.grade IN ('A', 'B');",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, e.enrollment_date, c.instructor FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id WHERE e.enrollment_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, g.grade, g.comments FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN grades g ON e.enrollment_id = g.enrollment_id WHERE g.grade <> 'A' AND g.comments IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name AS course_name, e.enrollment_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id WHERE s.age >= 18 AND c.credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name, g.grade, g.comments FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id WHERE g.grade = 'B' OR g.comments LIKE '%good%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name AS course_name, g.grade FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id JOIN grades g ON e.enrollment_id = g.enrollment_id WHERE s.age >= 20 GROUP BY s.name, c.name HAVING AVG(g.grade) > 80;",
  "### TABLEDATA\n\nCREATE TABLE students (\n  student_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  age INT,\n  grade VARCHAR(10)\n)\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  name VARCHAR(50),\n  instructor VARCHAR(50),\n  credits INT\n)\n\nCREATE TABLE enrollments (\n  enrollment_id INT PRIMARY KEY,\n  student_id INT,\n  course_id INT,\n  enrollment_date DATE\n)\n\nCREATE TABLE grades (\n  grade_id INT PRIMARY KEY,\n  enrollment_id INT,\n  grade VARCHAR(2),\n  comments TEXT\n)\n\n### STATEMENT\n\nSELECT s.name, c.name AS course_name, e.enrollment_date FROM students s JOIN enrollments e ON s.student_id = e.student_id JOIN courses c ON e.course_id = c.course_id WHERE c.instructor = 'Prof. Smith' AND e.enrollment_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, age, gender FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester FROM enrollments;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT enrollment_id, student_id, course_id, grade FROM grades;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, department FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM instructors;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, age FROM students WHERE age > 20;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_name, credits FROM courses WHERE credits >= 3;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_id, course_name, credits FROM courses WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, GPA FROM students WHERE GPA > 3.5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, grade FROM students JOIN grades ON students.id = grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT students.name, courses.course_name, enrollments.grade FROM students JOIN enrollments ON students.id = enrollments.student_id JOIN courses ON enrollments.course_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_name, instructor, credits FROM courses WHERE credits < 4 AND instructor = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, department FROM instructors WHERE teaching_experience > 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM grades WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, age, GPA FROM students ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_name, instructor, credits FROM courses ORDER BY credits;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, department, teaching_experience FROM instructors ORDER BY teaching_experience DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM students WHERE age > 20 AND GPA > 3.5",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, age FROM students WHERE gender = 'Female' ORDER BY age DESC",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester FROM enrollments INNER JOIN courses ON enrollments.course_id = courses.course_id WHERE credits > 3",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT AVG(credits) AS avg_credits FROM courses",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM students WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT department FROM instructors",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_name, instructor FROM courses WHERE credits BETWEEN 3 AND 4",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, course_id, grade FROM students INNER JOIN grades ON students.id = grades.student_id WHERE grade = 'A'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT instructor, COUNT(course_id) AS course_count FROM courses GROUP BY instructor HAVING course_count > 1",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, age, gender FROM students WHERE age BETWEEN 18 AND 25 AND (gender = 'Male' OR gender = 'Female') ORDER BY age ASC",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester FROM enrollments WHERE semester = 'Spring'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT name, teaching_experience FROM instructors WHERE teaching_experience > 5",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, AVG(GPA) AS avg_gpa FROM students GROUP BY student_id",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT instructor, course_name FROM courses INNER JOIN instructors ON courses.instructor = instructors.name",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM courses WHERE credits = (SELECT MAX(credits) FROM courses)",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM grades WHERE grade = 'B'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT id, name FROM students WHERE age > 20",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM grades WHERE grade = 'C'",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT * FROM students WHERE age < 25 AND GPA < 2.5",
  "### TABLEDATA\n\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    GPA FLOAT\n)\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    credits INT\n)\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(5)\n)\n\nCREATE TABLE grades (\n    id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(5)\n)\n\nCREATE TABLE instructors (\n    instructor_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    department VARCHAR(50),\n    teaching_experience INT\n)\n\n### STATEMENT\n\nSELECT course_name, COUNT(instructor) AS num_instructors FROM courses GROUP BY course_name ORDER BY num_instructors DESC"
]