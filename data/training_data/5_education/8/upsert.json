[
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (1, 'John Doe', 'Computer Science', 'Transcript for John Doe', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (2, 'Alice Smith', 'Mathematics', 'Transcript for Alice Smith', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (3, 'Bob Williams', 'Physics', 'Transcript for Bob Williams', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (4, 'Jane Brown', 'Biology', 'Transcript for Jane Brown', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (5, 'Sam Johnson', 'Chemistry', 'Transcript for Sam Johnson', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (6, 'Emily Davis', 'History', 'Transcript for Emily Davis', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (7, 'Michael Wilson', 'Art', 'Transcript for Michael Wilson', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (8, 'Sarah Miller', 'Geography', 'Transcript for Sarah Miller', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (9, 'Chris Thompson', 'Sociology', 'Transcript for Chris Thompson', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (10, 'Laura Garcia', 'Economics', 'Transcript for Laura Garcia', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (11, 'Kevin Hernandez', 'French', 'Transcript for Kevin Hernandez', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (12, 'Olivia Patel', 'German', 'Transcript for Olivia Patel', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (13, 'Daniel Lee', 'Italian', 'Transcript for Daniel Lee', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (14, 'Rachel Nguyen', 'Japanese', 'Transcript for Rachel Nguyen', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (15, 'Nathan Kim', 'Russian', 'Transcript for Nathan Kim', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (16, 'Hannah Jones', 'Spanish', 'Transcript for Hannah Jones', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (17, 'Peter Wong', 'Chinese', 'Transcript for Peter Wong', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (18, 'Grace Martinez', 'Portuguese', 'Transcript for Grace Martinez', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (19, 'Alexis Taylor', 'Korean', 'Transcript for Alexis Taylor', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (20, 'Ethan Lewis', 'Swedish', 'Transcript for Ethan Lewis', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (1, 'Alice Jones', 'Computer Science', 'Completed all courses with excellent grades.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (2, 'Bob Smith', 'Mathematics', 'Currently in progress, preparing for final exams.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (3, 'Catherine Brown', 'Physics', 'Graduated with honors and published research paper.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (4, 'David Wilson', 'Art History', 'Enrolled in elective courses and exploring new artistic styles.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (5, 'Emily Davis', 'Chemistry', 'Taking additional lab courses to enhance practical skills.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (6, 'Frank Roberts', 'Biology', 'Completed field research with distinguished professor.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (7, 'Grace White', 'Engineering', 'Interning at leading tech company for hands-on experience.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (8, 'Henry Taylor', 'Psychology', 'Participating in clinical studies and research projects.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (9, 'Isabella Clark', 'Sociology', 'Analyzing social trends and preparing thesis on gender roles.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (10, 'James Adams', 'History', 'Studying ancient civilizations with focus on cultural heritage.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (11, 'Katherine Hill', 'English Literature', 'Exploring post-modern authors and writing literary essays.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (12, 'Louis Miller', 'Political Science', 'Participating in debates and organizing political events on campus.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (13, 'Mary Young', 'Economics', 'Analyzing market trends and preparing for internship in finance sector.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (14, 'Nathan Harris', 'Geography', 'Conducting field studies and mapping environmental changes.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (15, 'Olivia King', 'Music', 'Performing in orchestra and composing original pieces.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (16, 'Peter Moore', 'Philosophy', 'Engaging in philosophical discussions and debates.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (17, 'Quinn Robinson', 'Drama', 'Acting in theater productions and studying playwrights.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (18, 'Rachel Scott', 'Journalism', 'Reporting on campus events and interviewing prominent figures.', true);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (19, 'Samuel Cooper', 'Spanish', 'Participating in language exchange programs and cultural events.', false);",
  "### TABLEDATA\n\nCREATE TABLE academic_records (\n    id INT PRIMARY KEY,\n    student_name VARCHAR(50),\n    program_name VARCHAR(100),\n    transcript TEXT,\n    diploma_status BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO academic_records (id, student_name, program_name, transcript, diploma_status) VALUES (20, 'Tiffany Reed', 'Graphic Design', 'Creating digital artworks and collaborating on design projects.', true);",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (1, 'Alice', 'Mathematics', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (2, 'Bob', 'Science', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (3, 'Charlie', 'History', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (4, 'David', 'English', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (5, 'Eve', 'Computer Science', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (6, 'Frank', 'Physics', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (7, 'Grace', 'Chemistry', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (8, 'Hank', 'Biology', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (9, 'Ian', 'Geography', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (10, 'Jack', 'Art', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (11, 'Kelly', 'Music', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (12, 'Liam', 'Drama', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (13, 'Mia', 'Physical Education', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (14, 'Noah', 'Economics', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (15, 'Olivia', 'Sociology', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (16, 'Peter', 'Environmental Science', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (17, 'Queenie', 'Political Science', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (18, 'Ryan', 'Anthropology', 'C')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (19, 'Sara', 'Psychology', 'A')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (20, 'Tom', 'Public Health', 'B')",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (1, 'Alice', 'Math', 'A') ON DUPLICATE KEY UPDATE student_name = 'Alice', course_name = 'Math', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (2, 'Bob', 'Science', 'B') ON DUPLICATE KEY UPDATE student_name = 'Bob', course_name = 'Science', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (3, 'Charlie', 'History', 'C') ON DUPLICATE KEY UPDATE student_name = 'Charlie', course_name = 'History', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (4, 'David', 'English', 'B') ON DUPLICATE KEY UPDATE student_name = 'David', course_name = 'English', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (5, 'Eve', 'Computer Science', 'A') ON DUPLICATE KEY UPDATE student_name = 'Eve', course_name = 'Computer Science', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (6, 'Frank', 'Physics', 'A') ON DUPLICATE KEY UPDATE student_name = 'Frank', course_name = 'Physics', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (7, 'Grace', 'Chemistry', 'B') ON DUPLICATE KEY UPDATE student_name = 'Grace', course_name = 'Chemistry', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (8, 'Hannah', 'Biology', 'C') ON DUPLICATE KEY UPDATE student_name = 'Hannah', course_name = 'Biology', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (9, 'Ian', 'Geography', 'A') ON DUPLICATE KEY UPDATE student_name = 'Ian', course_name = 'Geography', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (10, 'Julia', 'Art', 'B') ON DUPLICATE KEY UPDATE student_name = 'Julia', course_name = 'Art', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (11, 'Kevin', 'Music', 'C') ON DUPLICATE KEY UPDATE student_name = 'Kevin', course_name = 'Music', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (12, 'Lisa', 'Dance', 'A') ON DUPLICATE KEY UPDATE student_name = 'Lisa', course_name = 'Dance', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (13, 'Mike', 'Swimming', 'B') ON DUPLICATE KEY UPDATE student_name = 'Mike', course_name = 'Swimming', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (14, 'Nancy', 'Soccer', 'C') ON DUPLICATE KEY UPDATE student_name = 'Nancy', course_name = 'Soccer', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (15, 'Oscar', 'Tennis', 'A') ON DUPLICATE KEY UPDATE student_name = 'Oscar', course_name = 'Tennis', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (16, 'Peter', 'Golf', 'B') ON DUPLICATE KEY UPDATE student_name = 'Peter', course_name = 'Golf', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (17, 'Quincy', 'Basketball', 'C') ON DUPLICATE KEY UPDATE student_name = 'Quincy', course_name = 'Basketball', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (18, 'Rachel', 'Volleyball', 'A') ON DUPLICATE KEY UPDATE student_name = 'Rachel', course_name = 'Volleyball', grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (19, 'Sam', 'Track and Field', 'B') ON DUPLICATE KEY UPDATE student_name = 'Sam', course_name = 'Track and Field', grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100) NOT NULL,\n    course_name VARCHAR(100) NOT NULL,\n    grade CHAR(1) NOT NULL\n);\n\nCREATE TABLE certificates (\n    certificate_id INT PRIMARY KEY,\n    student_id INT NOT NULL,\n    certificate_name VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO transcripts (student_id, student_name, course_name, grade) VALUES (20, 'Tom', 'Cricket', 'C') ON DUPLICATE KEY UPDATE student_name = 'Tom', course_name = 'Cricket', grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (1, 'Transcript 1')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (2, 'Transcript 2')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (1, 'Diploma 1', '2022-01-15')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (3, 'Diploma 2', '2022-02-20')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (1, 'Certificate 1', '2023-01-01')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (2, 'Certificate 2', '2024-05-10')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (3, 'Transcript 3')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (4, 'Transcript 4')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (2, 'Diploma 3', '2022-03-25')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (4, 'Diploma 4', '2022-04-30')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (3, 'Certificate 3', '2023-02-15')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (4, 'Certificate 4', '2023-03-20')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (5, 'Transcript 5')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (6, 'Transcript 6')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (5, 'Diploma 5', '2022-06-10')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (6, 'Diploma 6', '2022-07-15')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (5, 'Certificate 5', '2023-04-01')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (6, 'Certificate 6', '2023-05-05')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (7, 'Transcript 7')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO AcademicTranscripts (student_id, transcript) VALUES (8, 'Transcript 8')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (7, 'Diploma 7', '2022-09-20')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (8, 'Diploma 8', '2022-10-25')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (7, 'Certificate 7', '2023-06-10')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nUPSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (8, 'Certificate 8', '2023-07-15')",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (1, 'Transcript A') ON CONFLICT (student_id) DO UPDATE SET transcript = excluded.transcript;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (2, 'Transcript B') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (1, 'Diploma A', '2022-01-15') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (3, 'Diploma C', '2022-02-20') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (4, 'Diploma D', '2022-03-25') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (1, 'Certificate A', '2023-01-01') ON CONFLICT (student_id) DO UPDATE SET certificate = excluded.certificate, expiration_date = excluded.expiration_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (5, 'Certificate E', '2023-02-05') ON CONFLICT (student_id) DO UPDATE SET certificate = excluded.certificate, expiration_date = excluded.expiration_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (6, 'Certificate F', '2023-03-10') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (7, 'Transcript G') ON CONFLICT (student_id) DO UPDATE SET transcript = excluded.transcript;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (8, 'Transcript H') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (2, 'Diploma B', '2022-04-30') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (9, 'Diploma I', '2022-05-15') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (10, 'Diploma J', '2022-06-20') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (7, 'Certificate G', '2023-04-01') ON CONFLICT (student_id) DO UPDATE SET certificate = excluded.certificate, expiration_date = excluded.expiration_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (11, 'Certificate K', '2023-05-05') ON CONFLICT (student_id) DO UPDATE SET certificate = excluded.certificate, expiration_date = excluded.expiration_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Certificates (student_id, certificate, expiration_date) VALUES (12, 'Certificate L', '2023-06-10') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (13, 'Transcript M') ON CONFLICT (student_id) DO UPDATE SET transcript = excluded.transcript;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO AcademicTranscripts (student_id, transcript) VALUES (14, 'Transcript N') ON CONFLICT (student_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (3, 'Diploma C', '2022-07-30') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE AcademicTranscripts (\n  student_id INT,\n  transcript TEXT,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Diplomas (\n  student_id INT,\n  diploma TEXT,\n  issuing_date DATE,\n  PRIMARY KEY (student_id)\n)\n\nCREATE TABLE Certificates (\n  student_id INT,\n  certificate TEXT,\n  expiration_date DATE,\n  PRIMARY KEY (student_id)\n)\n\n### STATEMENT\n\nINSERT INTO Diplomas (student_id, diploma, issuing_date) VALUES (15, 'Diploma O', '2022-08-15') ON CONFLICT (student_id) DO UPDATE SET diploma = excluded.diploma, issuing_date = excluded.issuing_date;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (1, 'Mathematics', 'A', 1) ON CONFLICT (student_id) DO UPDATE SET course_name='Mathematics', grade='A', semester=1;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (1, 1, '2022-01-01', 'Bachelor of Science') ON CONFLICT (diploma_id) DO UPDATE SET student_id=1, date_of_issue='2022-01-01', degree='Bachelor of Science';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (1, 1, 'Python Certification', '2022-02-01') ON CONFLICT (certificate_id) DO UPDATE SET student_id=1, certificate_name='Python Certification', issue_date='2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (1, 'Computer Science', 3) ON CONFLICT (course_id) DO UPDATE SET course_name='Computer Science', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (2, 'Physics', 'B', 2) ON CONFLICT (student_id) DO UPDATE SET course_name='Physics', grade='B', semester=2;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (2, 2, '2022-03-01', 'Bachelor of Arts') ON CONFLICT (diploma_id) DO UPDATE SET student_id=2, date_of_issue='2022-03-01', degree='Bachelor of Arts';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (2, 2, 'Java Certification', '2022-04-01') ON CONFLICT (certificate_id) DO UPDATE SET student_id=2, certificate_name='Java Certification', issue_date='2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (2, 'History', 4) ON CONFLICT (course_id) DO UPDATE SET course_name='History', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (3, 'Chemistry', 'C', 1) ON CONFLICT (student_id) DO UPDATE SET course_name='Chemistry', grade='C', semester=1;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (3, 3, '2022-05-01', 'Bachelor of Business') ON CONFLICT (diploma_id) DO UPDATE SET student_id=3, date_of_issue='2022-05-01', degree='Bachelor of Business';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (3, 3, 'SQL Certification', '2022-06-01') ON CONFLICT (certificate_id) DO UPDATE SET student_id=3, certificate_name='SQL Certification', issue_date='2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (3, 'English Literature', 3) ON CONFLICT (course_id) DO UPDATE SET course_name='English Literature', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (4, 'Biology', 'A', 2) ON CONFLICT (student_id) DO UPDATE SET course_name='Biology', grade='A', semester=2;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (4, 4, '2022-07-01', 'Bachelor of Engineering') ON CONFLICT (diploma_id) DO UPDATE SET student_id=4, date_of_issue='2022-07-01', degree='Bachelor of Engineering';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (4, 4, 'C++ Certification', '2022-08-01') ON CONFLICT (certificate_id) DO UPDATE SET student_id=4, certificate_name='C++ Certification', issue_date='2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (4, 'Psychology', 4) ON CONFLICT (course_id) DO UPDATE SET course_name='Psychology', credits=4;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (5, 'Art', 'A', 1) ON CONFLICT (student_id) DO UPDATE SET course_name='Art', grade='A', semester=1;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (5, 5, '2022-09-01', 'Bachelor of Music') ON CONFLICT (diploma_id) DO UPDATE SET student_id=5, date_of_issue='2022-09-01', degree='Bachelor of Music';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (5, 5, 'JavaScript Certification', '2022-10-01') ON CONFLICT (certificate_id) DO UPDATE SET student_id=5, certificate_name='JavaScript Certification', issue_date='2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (5, 'Sociology', 3) ON CONFLICT (course_id) DO UPDATE SET course_name='Sociology', credits=3;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (101, 'Mathematics', 'A', 1) ON DUPLICATE KEY UPDATE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (1, 101, '2021-05-20', 'Bachelor of Science') ON DUPLICATE KEY UPDATE degree = 'Master of Science';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (1, 101, 'Python Certification', '2021-06-10') ON DUPLICATE KEY UPDATE issue_date = '2021-07-15';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (1, 'Computer Science', 3) ON DUPLICATE KEY UPDATE credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (102, 'Biology', 'B+', 2) ON DUPLICATE KEY UPDATE grade = 'A-';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (2, 102, '2020-12-15', 'Associate Degree') ON DUPLICATE KEY UPDATE degree = 'Bachelor Degree';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (2, 102, 'Java Certification', '2021-09-05') ON DUPLICATE KEY UPDATE issue_date = '2021-10-20';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (2, 'Chemistry', 4) ON DUPLICATE KEY UPDATE credits = 5;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (103, 'Physics', 'A-', 1) ON DUPLICATE KEY UPDATE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (3, 103, '2022-01-30', 'Master of Arts') ON DUPLICATE KEY UPDATE degree = 'PhD';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (3, 103, 'SQL Certification', '2021-08-20') ON DUPLICATE KEY UPDATE issue_date = '2021-09-30';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (3, 'English Literature', 2) ON DUPLICATE KEY UPDATE credits = 3;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (104, 'History', 'B', 2) ON DUPLICATE KEY UPDATE grade = 'B+';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (4, 104, '2021-06-25', 'Bachelor of Arts') ON DUPLICATE KEY UPDATE degree = 'Master of Arts';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (4, 104, 'JavaScript Certification', '2021-10-10') ON DUPLICATE KEY UPDATE issue_date = '2021-11-25';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (4, 'Economics', 3) ON DUPLICATE KEY UPDATE credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (student_id, course_name, grade, semester) VALUES (105, 'Geography', 'B-', 1) ON DUPLICATE KEY UPDATE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (diploma_id, student_id, date_of_issue, degree) VALUES (5, 105, '2022-02-28', 'Master of Science') ON DUPLICATE KEY UPDATE degree = 'PhD';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO certificates (certificate_id, student_id, certificate_name, issue_date) VALUES (5, 105, 'HTML Certification', '2021-11-15') ON DUPLICATE KEY UPDATE issue_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  student_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  grade VARCHAR(2),\n  semester INT\n);\n\nCREATE TABLE diplomas (\n  diploma_id INT PRIMARY KEY,\n  student_id INT,\n  date_of_issue DATE,\n  degree VARCHAR(50)\n);\n\nCREATE TABLE certificates (\n  certificate_id INT PRIMARY KEY,\n  student_id INT,\n  certificate_name VARCHAR(100),\n  issue_date DATE\n);\n\nCREATE TABLE courses (\n  course_id INT PRIMARY KEY,\n  course_name VARCHAR(255),\n  credits INT\n);\n\n### STATEMENT\n\nINSERT INTO courses (course_id, course_name, credits) VALUES (5, 'Political Science', 4) ON DUPLICATE KEY UPDATE credits = 5;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (id, student_id, course_name, grade, semester) VALUES (1, 101, 'Mathematics', 'A', 'Fall') ON DUPLICATE KEY UPDATE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (id, student_id, degree_name, conferred_date, institution) VALUES (1, 101, 'Bachelor', '2022-05-15', 'University of Example') ON DUPLICATE KEY UPDATE conferred_date = '2022-05-20';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO certificates (id, student_id, course_name, completion_date, issuer) VALUES (1, 101, 'Programming', '2022-06-30', 'Code Institute') ON DUPLICATE KEY UPDATE issuer = 'CODE Institute';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, birthdate, email, address) VALUES (101, 'John Doe', '2000-01-01', 'john.doe@example.com', '123 Example St') ON DUPLICATE KEY UPDATE email = 'john.doe.new@example.com';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (id, course_name, instructor, credits, description) VALUES (1, 'Physics', 'Dr. Smith', 3, 'Introduction to Physics') ON DUPLICATE KEY UPDATE credits = 4;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (id, student_id, course_name, grade, semester) VALUES (2, 102, 'History', 'B', 'Spring') ON DUPLICATE KEY UPDATE grade = 'C';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (id, student_id, degree_name, conferred_date, institution) VALUES (2, 102, 'Master', '2023-06-15', 'Example University') ON DUPLICATE KEY UPDATE conferred_date = '2023-06-20';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO certificates (id, student_id, course_name, completion_date, issuer) VALUES (2, 102, 'Writing', '2023-07-30', 'Writing Academy') ON DUPLICATE KEY UPDATE issuer = 'Writing Academy';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, birthdate, email, address) VALUES (102, 'Alice Smith', '1999-03-15', 'alice.smith@example.com', '456 Test Rd') ON DUPLICATE KEY UPDATE address = '789 New Ave';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (id, course_name, instructor, credits, description) VALUES (2, 'Chemistry', 'Prof. Johnson', 4, 'Basic Chemistry Concepts') ON DUPLICATE KEY UPDATE description = 'General Chemistry Course';",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (id, student_id, course_name, grade, semester) VALUES (1, 1001, 'Mathematics', 'A', 'Fall') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, grade = EXCLUDED.grade, semester = EXCLUDED.semester;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (id, student_id, degree_name, conferred_date, institution) VALUES (1, 1001, 'Bachelor of Science', '2022-05-20', 'University of X') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, degree_name = EXCLUDED.degree_name, conferred_date = EXCLUDED.conferred_date, institution = EXCLUDED.institution;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO certificates (id, student_id, course_name, completion_date, issuer) VALUES (1, 1001, 'Programming Basics', '2022-03-10', 'Tech Institute') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, completion_date = EXCLUDED.completion_date, issuer = EXCLUDED.issuer;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, birthdate, email, address) VALUES (1001, 'John Doe', '1995-08-20', 'john.doe@example.com', '123 Park Street') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, birthdate = EXCLUDED.birthdate, email = EXCLUDED.email, address = EXCLUDED.address;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (id, course_name, instructor, credits, description) VALUES (1, 'Physics', 'Dr. Smith', 3, 'Introductory course on Physics') ON CONFLICT (id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, credits = EXCLUDED.credits, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (id, student_id, course_name, grade, semester) VALUES (2, 1002, 'Biology', 'B', 'Fall') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, grade = EXCLUDED.grade, semester = EXCLUDED.semester;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (id, student_id, degree_name, conferred_date, institution) VALUES (2, 1002, 'Master of Arts', '2023-06-15', 'University of Y') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, degree_name = EXCLUDED.degree_name, conferred_date = EXCLUDED.conferred_date, institution = EXCLUDED.institution;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO certificates (id, student_id, course_name, completion_date, issuer) VALUES (2, 1002, 'Web Development', '2023-04-25', 'Coding Academy') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, completion_date = EXCLUDED.completion_date, issuer = EXCLUDED.issuer;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, birthdate, email, address) VALUES (1002, 'Alice Smith', '1998-03-15', 'alice.smith@example.com', '456 Elm Avenue') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, birthdate = EXCLUDED.birthdate, email = EXCLUDED.email, address = EXCLUDED.address;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (id, course_name, instructor, credits, description) VALUES (2, 'Chemistry', 'Prof. Johnson', 4, 'Advanced course on Chemistry') ON CONFLICT (id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, credits = EXCLUDED.credits, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transcripts (id, student_id, course_name, grade, semester) VALUES (3, 1003, 'History', 'A', 'Spring') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, grade = EXCLUDED.grade, semester = EXCLUDED.semester;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO diplomas (id, student_id, degree_name, conferred_date, institution) VALUES (3, 1003, 'Doctor of Philosophy', '2024-07-30', 'University of Z') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, degree_name = EXCLUDED.degree_name, conferred_date = EXCLUDED.conferred_date, institution = EXCLUDED.institution;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO certificates (id, student_id, course_name, completion_date, issuer) VALUES (3, 1003, 'Data Analysis', '2024-05-15', 'Analytics School') ON CONFLICT (id) DO UPDATE SET student_id = EXCLUDED.student_id, course_name = EXCLUDED.course_name, completion_date = EXCLUDED.completion_date, issuer = EXCLUDED.issuer;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO students (id, name, birthdate, email, address) VALUES (1003, 'Tom Brown', '1990-12-10', 'tom.brown@example.com', '789 Oak Street') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, birthdate = EXCLUDED.birthdate, email = EXCLUDED.email, address = EXCLUDED.address;",
  "### TABLEDATA\n\nCREATE TABLE transcripts (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  grade VARCHAR(2) NOT NULL,\n  semester VARCHAR(10) NOT NULL\n);\n\n\nCREATE TABLE diplomas (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  degree_name VARCHAR(255) NOT NULL,\n  conferred_date DATE NOT NULL,\n  institution VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE certificates (\n  id INT PRIMARY KEY,\n  student_id INT NOT NULL,\n  course_name VARCHAR(255) NOT NULL,\n  completion_date DATE NOT NULL,\n  issuer VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE students (\n  id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  birthdate DATE NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE courses (\n  id INT PRIMARY KEY,\n  course_name VARCHAR(255) NOT NULL,\n  instructor VARCHAR(255) NOT NULL,\n  credits INT NOT NULL,\n  description TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO courses (id, course_name, instructor, credits, description) VALUES (3, 'Literature', 'Prof. Adams', 3, 'Exploration of classic literature') ON CONFLICT (id) DO UPDATE SET course_name = EXCLUDED.course_name, instructor = EXCLUDED.instructor, credits = EXCLUDED.credits, description = EXCLUDED.description;"
]