[
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE first_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE last_name LIKE 'Sm%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM students ORDER BY last_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM students WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE contact_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name FROM students WHERE last_name = 'Doe' AND address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(student_id) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT contact_number) FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, contact_number FROM students WHERE contact_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT last_name FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM students LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM students WHERE student_id IN (1, 2, 3, 4);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE first_name = 'Alice' OR first_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM students WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM students WHERE address = '123 Main Street';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, address FROM students WHERE student_id > 10 AND student_id < 20;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM students WHERE first_name LIKE 'A%' AND last_name NOT LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE first_name = 'John' OR last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM students WHERE address LIKE '%Ave';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT address FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(student_id) AS avg_student_id FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE first_name LIKE '%a%' OR last_name LIKE '%a%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, contact_number FROM students WHERE contact_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM students WHERE contact_number = '1234567890' AND address = '456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(student_id) AS max_student_id FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE first_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address, contact_number FROM students WHERE address IN ('123 Main St', '456 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address TEXT,\n    contact_number TEXT\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM students WHERE student_id = (SELECT MIN(student_id) FROM students);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, address FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address, contact_number FROM students WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor_name FROM courses WHERE course_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name, department FROM courses WHERE instructor_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address FROM students WHERE contact_number = 1234567890;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, department FROM courses WHERE course_name LIKE '%Database%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM students WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_name, department FROM courses WHERE instructor_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE name = 'Alice' AND address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name FROM students WHERE contact_number > 1000000000;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE department = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address, contact_number FROM students WHERE contact_number BETWEEN 1000000000 AND 2000000000;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM courses WHERE department = 'Mathematics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM students WHERE address LIKE '%Court%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE instructor_name = 'Dr. Brown';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address FROM students WHERE name = 'Bob' OR name = 'Charlie';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name, department FROM courses WHERE department = 'Physics';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, address, contact_number FROM students WHERE name IN ('Diana', 'Eve', 'Frank');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, address FROM students WHERE address LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, contact_number FROM students WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM courses WHERE department = 'Computer Science';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM courses WHERE instructor_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, department FROM courses WHERE department IN ('Computer Science', 'Mathematics');",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students INNER JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT s.name, c.course_name FROM students s INNER JOIN courses c ON s.student_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students LEFT JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT s.name, c.course_name FROM students s LEFT JOIN courses c ON s.student_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students RIGHT JOIN courses ON students.student_id = courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT s.name, c.course_name FROM students s RIGHT JOIN courses c ON s.student_id = c.course_id;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM students WHERE student_id = (SELECT MAX(student_id) FROM students);",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(contact_number) as avg_contact FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as student_count FROM students;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor_name FROM courses ORDER BY course_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, address, contact_number FROM students WHERE address IS NOT NULL ORDER BY name DESC;",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address FROM students WHERE name LIKE 'A%' UNION SELECT course_id, course_name, instructor_name FROM courses WHERE course_name LIKE 'C%';",
  "### TABLEDATA\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number BIGINT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50) NOT NULL,\n    instructor_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT department FROM courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, name, address FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name, Enrollments.course_id FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Courses.course_name, Enrollments.enrollment_date FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name AS student_name, Courses.course_name AS course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Courses.course_id = Enrollments.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id FROM Enrollments WHERE enrollment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name, Courses.course_name FROM Students, Courses, Enrollments WHERE Students.student_id = Enrollments.student_id AND Courses.course_id = Enrollments.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT instructor FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(course_id) AS course_count FROM Enrollments GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(course_id) AS avg_course_id FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(course_id) AS max_course_id FROM Enrollments GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date FROM Enrollments ORDER BY enrollment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Students WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, enrollment_date FROM Enrollments WHERE student_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, start_date FROM Courses ORDER BY start_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Students WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, start_date FROM Courses WHERE instructor = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_id FROM Enrollments WHERE enrollment_date BETWEEN '2021-01-01' AND '2021-03-31';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_students FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT MAX(enrollment_date) AS latest_enrollment FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, COUNT(*) AS total_enrollments FROM Enrollments GROUP BY course_id ORDER BY total_enrollments DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name, Courses.course_name FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.address LIKE '%Avenue%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT AVG(enrollment_id) AS avg_enrollment_id FROM Enrollments;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, COUNT(*) AS total_courses_enrolled FROM Enrollments WHERE student_id = 2 GROUP BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, COUNT(*) AS total_students_enrolled FROM Courses JOIN Enrollments ON Courses.course_id = Enrollments.course_id GROUP BY course_name;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_name, enrollment_date FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE Students.name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT instructor, COUNT(*) AS total_courses_taught FROM Courses GROUP BY instructor HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_id FROM Enrollments WHERE student_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, MAX(start_date) AS latest_start_date FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.name, COUNT(*) AS total_courses_enrolled FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id GROUP BY Students.name ORDER BY total_courses_enrolled DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, AVG(DATEDIFF(NOW(), start_date)) AS avg_days_since_start FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, enrollment_id, enrollment_date FROM Enrollments WHERE enrollment_date < (SELECT MIN(enrollment_date) FROM Enrollments);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    instructor VARCHAR(50),\n    start_date DATE\n);\n\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Courses UNION SELECT course_id, course_name, instructor FROM Courses WHERE start_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, phone_number FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, schedule FROM Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Registrations;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, registration_date FROM Registrations;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT registration_id, course_id FROM Registrations;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT grade_id, student_id, comments FROM Grades;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Students.first_name, Courses.course_name FROM Students, Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Registrations.student_id, Courses.course_name, Registrations.registration_date FROM Registrations, Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT Grades.student_id, Students.first_name, Courses.course_name, Grades.grade FROM Grades, Students, Courses;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_name, instructor FROM Courses WHERE course_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, registration_date FROM Registrations WHERE student_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, grade, comments FROM Grades WHERE course_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Grades WHERE student_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM Students WHERE address LIKE '%California%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Courses WHERE schedule='Monday';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, registration_date FROM Registrations ORDER BY registration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor, schedule FROM Courses WHERE instructor='John Doe' AND schedule='Tuesday';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, address, phone_number FROM Students WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_id, grade FROM Students INNER JOIN Grades ON Students.student_id = Grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, course_description, instructor FROM Courses WHERE course_description LIKE '%advanced%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, registration_date, course_id FROM Registrations WHERE student_id IN (SELECT student_id FROM Students WHERE first_name='Alice');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, course_id, grade, comments FROM Grades WHERE grade='A' ORDER BY student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Registrations WHERE course_id=101);",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor FROM Courses WHERE course_id IN (SELECT course_id FROM Grades WHERE grade='B');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, AVG(CAST(grade AS INT)) AS average_grade FROM Grades GROUP BY student_id HAVING AVG(CAST(grade AS INT)) > 80;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, registration_date, course_name, instructor FROM Registrations JOIN Courses ON Registrations.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, MAX(CAST(grade AS INT)) AS highest_grade FROM Grades GROUP BY student_id ORDER BY highest_grade DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_id, grade FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, instructor, COUNT(course_id) AS total_students FROM Courses JOIN Registrations ON Courses.course_id = Registrations.course_id GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_id, grade, comments FROM Students LEFT JOIN Grades ON Students.student_id = Grades.student_id WHERE grade IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT course_id, course_name, AVG(CAST(grade AS INT)) AS average_grade FROM Courses JOIN Grades ON Courses.course_id = Grades.course_id GROUP BY course_id HAVING AVG(CAST(grade AS INT)) > 70;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    instructor VARCHAR(50),\n    schedule VARCHAR(50)\n);\n\n\nCREATE TABLE Registrations (\n    registration_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    registration_date DATE,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n\nCREATE TABLE Grades (\n    grade_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    grade VARCHAR(2),\n    comments TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students(student_id),\n    FOREIGN KEY (course_id) REFERENCES Courses(course_id)\n);\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_id, grade, comments FROM Students FULL JOIN Grades ON Students.student_id = Grades.student_id ORDER BY student_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Students;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM Students WHERE student_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT course_name, credit_hours FROM Courses WHERE credit_hours > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Enrollments WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT street_address, city, state, postal_code FROM Addresses WHERE student_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, relationship, contact_number FROM Contacts WHERE student_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, address, phone_number FROM Students WHERE student_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT course_name, course_description FROM Courses WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester FROM Enrollments WHERE semester = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Addresses WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, contact_number FROM Contacts WHERE relationship = 'Parent';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, phone_number FROM Students WHERE phone_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT course_name, credit_hours FROM Courses WHERE credit_hours < 4;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Enrollments WHERE grade = 'B';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT street_address, city, state, postal_code FROM Addresses WHERE city = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, contact_number FROM Contacts WHERE student_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, address, phone_number FROM Students WHERE student_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT course_name, course_description, credit_hours FROM Courses WHERE course_name LIKE '%Math%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester, grade FROM Enrollments WHERE grade IN ('A', 'A+');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Addresses WHERE state = 'CA';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Students WHERE first_name = 'John' AND last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT course_name, course_description FROM Courses WHERE credit_hours > 3;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester FROM Enrollments WHERE grade = 'A';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, street_address, city, state FROM Addresses WHERE postal_code = '12345';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, relationship FROM Contacts WHERE student_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT * FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, first_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE semester = 'Spring';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, contact_name, contact_number FROM Students JOIN Contacts ON Students.student_id = Contacts.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, street_address, city, state, postal_code FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id;",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_name, grade, street_address, city, state FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE grade <> 'F';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE grade IN ('A', 'B', 'C');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, contact_number FROM Students JOIN Contacts ON Students.student_id = Contacts.student_id WHERE relationship = 'Parent';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, contact_number, city FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE state = 'CA';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE course_name LIKE '%Math%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_id, semester, grade FROM Enrollments WHERE semester IN ('Fall', 'Spring');",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, contact_number, postal_code FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE street_address LIKE '%Main Street%';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, course_name, semester FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, address_id, street_address, city, state, postal_code FROM Students JOIN Addresses ON Students.student_id = Addresses.student_id WHERE state = 'TX';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT contact_name, relationship, contact_number FROM Contacts JOIN Addresses ON Contacts.student_id = Addresses.student_id WHERE city = 'Chicago';",
  "### TABLEDATA\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address TEXT,\n    phone_number VARCHAR(10)\n)\n\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(50),\n    course_description TEXT,\n    credit_hours INT\n)\n\nCREATE TABLE Enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    semester VARCHAR(20),\n    grade VARCHAR(2)\n)\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    student_id INT,\n    street_address TEXT,\n    city VARCHAR(50),\n    state VARCHAR(2),\n    postal_code VARCHAR(10)\n)\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    student_id INT,\n    contact_name VARCHAR(50),\n    relationship VARCHAR(50),\n    contact_number VARCHAR(10)\n)\n\n### STATEMENT\n\nSELECT student_id, first_name, last_name, course_name, grade FROM Students JOIN Enrollments ON Students.student_id = Enrollments.student_id JOIN Courses ON Enrollments.course_id = Courses.course_id WHERE city = 'Los Angeles';"
]