[
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 101, '2022-01-01 12:00:00', 100.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 102, '2022-01-02 10:30:00', 150.50)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 103, '2022-01-03 15:45:00', 75.25)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (4, 104, '2022-01-04 09:00:00', 200.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (5, 105, '2022-01-05 11:20:00', 125.75)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (6, 106, '2022-01-06 14:10:00', 180.50)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (7, 107, '2022-01-07 16:30:00', 90.25)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (8, 108, '2022-01-08 13:45:00', 150.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (9, 109, '2022-01-09 10:00:00', 100.75)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (10, 110, '2022-01-10 12:15:00', 120.50)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (11, 111, '2022-01-11 14:30:00', 80.25)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (12, 112, '2022-01-12 16:00:00', 160.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (13, 113, '2022-01-13 11:45:00', 110.75)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (14, 114, '2022-01-14 13:20:00', 140.50)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (15, 115, '2022-01-15 15:10:00', 70.25)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (16, 116, '2022-01-16 09:30:00', 190.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (17, 117, '2022-01-17 11:55:00', 130.75)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (18, 118, '2022-01-18 14:40:00', 100.50)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (19, 119, '2022-01-19 16:20:00', 150.25)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (20, 120, '2022-01-20 12:05:00', 80.00)",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (1, 101, '2022-01-01', 100.00) ON CONFLICT (order_id) DO UPDATE SET customer_id = 101, order_date = '2022-01-01', total_amount = 100.00",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (2, 102, '2022-01-02', 150.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 102, order_date = '2022-01-02', total_amount = 150.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (3, 103, '2022-01-03', 200.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 103, order_date = '2022-01-03', total_amount = 200.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (4, 104, '2022-01-04', 300.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 104, order_date = '2022-01-04', total_amount = 300.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (5, 105, '2022-01-05', 400.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 105, order_date = '2022-01-05', total_amount = 400.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (6, 106, '2022-01-06', 500.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 106, order_date = '2022-01-06', total_amount = 500.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (7, 107, '2022-01-07', 600.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 107, order_date = '2022-01-07', total_amount = 600.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (8, 108, '2022-01-08', 700.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 108, order_date = '2022-01-08', total_amount = 700.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (9, 109, '2022-01-09', 800.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 109, order_date = '2022-01-09', total_amount = 800.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (10, 110, '2022-01-10', 900.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 110, order_date = '2022-01-10', total_amount = 900.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (11, 111, '2022-01-11', 1000.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 111, order_date = '2022-01-11', total_amount = 1000.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (12, 112, '2022-01-12', 1100.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 112, order_date = '2022-01-12', total_amount = 1100.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (13, 113, '2022-01-13', 1200.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 113, order_date = '2022-01-13', total_amount = 1200.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (14, 114, '2022-01-14', 1300.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 114, order_date = '2022-01-14', total_amount = 1300.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (15, 115, '2022-01-15', 1400.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 115, order_date = '2022-01-15', total_amount = 1400.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (16, 116, '2022-01-16', 1500.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 116, order_date = '2022-01-16', total_amount = 1500.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (17, 117, '2022-01-17', 1600.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 117, order_date = '2022-01-17', total_amount = 1600.50",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (18, 118, '2022-01-18', 1700.75) ON CONFLICT (order_id) DO UPDATE SET customer_id = 118, order_date = '2022-01-18', total_amount = 1700.75",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (19, 119, '2022-01-19', 1800.25) ON CONFLICT (order_id) DO UPDATE SET customer_id = 119, order_date = '2022-01-19', total_amount = 1800.25",
  "### TABLEDATA\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date TIMESTAMP,\n    total_amount DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, total_amount) VALUES (20, 120, '2022-01-20', 1900.50) ON CONFLICT (order_id) DO UPDATE SET customer_id = 120, order_date = '2022-01-20', total_amount = 1900.50",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_address='123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', customer_email='jane.smith@example.com', customer_address='456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak St') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', customer_email='alice.johnson@example.com', customer_address='789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '321 Pine St') ON DUPLICATE KEY UPDATE customer_name='Bob Williams', customer_email='bob.williams@example.com', customer_address='321 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (5, 'Mary Davis', 'mary.davis@example.com', '654 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Mary Davis', customer_email='mary.davis@example.com', customer_address='654 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (6, 'Chris Brown', 'chris.brown@example.com', '987 Birch St') ON DUPLICATE KEY UPDATE customer_name='Chris Brown', customer_email='chris.brown@example.com', customer_address='987 Birch St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (7, 'Sarah Garcia', 'sarah.garcia@example.com', '147 Willow St') ON DUPLICATE KEY UPDATE customer_name='Sarah Garcia', customer_email='sarah.garcia@example.com', customer_address='147 Willow St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (8, 'Michael Rodriguez', 'michael.rodriguez@example.com', '258 Maple St') ON DUPLICATE KEY UPDATE customer_name='Michael Rodriguez', customer_email='michael.rodriguez@example.com', customer_address='258 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (9, 'Emily Martinez', 'emily.martinez@example.com', '369 Oak St') ON DUPLICATE KEY UPDATE customer_name='Emily Martinez', customer_email='emily.martinez@example.com', customer_address='369 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (10, 'David Hernandez', 'david.hernandez@example.com', '753 Pine St') ON DUPLICATE KEY UPDATE customer_name='David Hernandez', customer_email='david.hernandez@example.com', customer_address='753 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (11, 'Laura Wilson', 'laura.wilson@example.com', '951 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Laura Wilson', customer_email='laura.wilson@example.com', customer_address='951 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (12, 'Daniel Lee', 'daniel.lee@example.com', '852 Birch St') ON DUPLICATE KEY UPDATE customer_name='Daniel Lee', customer_email='daniel.lee@example.com', customer_address='852 Birch St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (13, 'Olivia Young', 'olivia.young@example.com', '741 Willow St') ON DUPLICATE KEY UPDATE customer_name='Olivia Young', customer_email='olivia.young@example.com', customer_address='741 Willow St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (14, 'William Clark', 'william.clark@example.com', '639 Maple St') ON DUPLICATE KEY UPDATE customer_name='William Clark', customer_email='william.clark@example.com', customer_address='639 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (15, 'Sophia Hall', 'sophia.hall@example.com', '528 Oak St') ON DUPLICATE KEY UPDATE customer_name='Sophia Hall', customer_email='sophia.hall@example.com', customer_address='528 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (16, 'Ethan Perez', 'ethan.perez@example.com', '417 Pine St') ON DUPLICATE KEY UPDATE customer_name='Ethan Perez', customer_email='ethan.perez@example.com', customer_address='417 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (17, 'Ava Hernandez', 'ava.hernandez@example.com', '396 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Ava Hernandez', customer_email='ava.hernandez@example.com', customer_address='396 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (18, 'James Green', 'james.green@example.com', '285 Birch St') ON DUPLICATE KEY UPDATE customer_name='James Green', customer_email='james.green@example.com', customer_address='285 Birch St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (19, 'Nora Baker', 'nora.baker@example.com', '174 Willow St') ON DUPLICATE KEY UPDATE customer_name='Nora Baker', customer_email='nora.baker@example.com', customer_address='174 Willow St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (20, 'Matthew Evans', 'matthew.evans@example.com', '963 Maple St') ON DUPLICATE KEY UPDATE customer_name='Matthew Evans', customer_email='matthew.evans@example.com', customer_address='963 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St');\nON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (1, 1, '2021-10-26', 100.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-26', order_total = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St');\nON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', customer_email = 'jane.smith@example.com', customer_address = '456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (2, 2, '2021-10-27', 150.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-27', order_total = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak St');\nON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', customer_email = 'alice.johnson@example.com', customer_address = '789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (3, 3, '2021-10-28', 200.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-28', order_total = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '246 Maple St');\nON DUPLICATE KEY UPDATE customer_name = 'Bob Williams', customer_email = 'bob.williams@example.com', customer_address = '246 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (4, 4, '2021-10-29', 250.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-29', order_total = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (5, 'Eve Brown', 'eve.brown@example.com', '135 Pine St');\nON DUPLICATE KEY UPDATE customer_name = 'Eve Brown', customer_email = 'eve.brown@example.com', customer_address = '135 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (5, 5, '2021-10-30', 300.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-30', order_total = 300.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (6, 'Charlie Davis', 'charlie.davis@example.com', '579 Walnut St');\nON DUPLICATE KEY UPDATE customer_name = 'Charlie Davis', customer_email = 'charlie.davis@example.com', customer_address = '579 Walnut St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (6, 6, '2021-10-31', 350.00);\nON DUPLICATE KEY UPDATE order_date = '2021-10-31', order_total = 350.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (7, 'Grace Moore', 'grace.moore@example.com', '357 Cherry St');\nON DUPLICATE KEY UPDATE customer_name = 'Grace Moore', customer_email = 'grace.moore@example.com', customer_address = '357 Cherry St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (7, 7, '2021-11-01', 400.00);\nON DUPLICATE KEY UPDATE order_date = '2021-11-01', order_total = 400.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (8, 'Sam Lee', 'sam.lee@example.com', '987 Elm St');\nON DUPLICATE KEY UPDATE customer_name = 'Sam Lee', customer_email = 'sam.lee@example.com', customer_address = '987 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (8, 8, '2021-11-02', 450.00);\nON DUPLICATE KEY UPDATE order_date = '2021-11-02', order_total = 450.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (9, 'Sarah Baker', 'sarah.baker@example.com', '147 Walnut St');\nON DUPLICATE KEY UPDATE customer_name = 'Sarah Baker', customer_email = 'sarah.baker@example.com', customer_address = '147 Walnut St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (9, 9, '2021-11-03', 500.00);\nON DUPLICATE KEY UPDATE order_date = '2021-11-03', order_total = 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (10, 'Mark Taylor', 'mark.taylor@example.com', '369 Maple St');\nON DUPLICATE KEY UPDATE customer_name = 'Mark Taylor', customer_email = 'mark.taylor@example.com', customer_address = '369 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_address TEXT\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_total DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date, order_total) VALUES (10, 10, '2021-11-04', 550.00);\nON DUPLICATE KEY UPDATE order_date = '2021-11-04', order_total = 550.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c1', 'Alice', 'alice@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c1', '2022-01-01') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (1, 'p1', 2, 10.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c2', 'Bob', 'bob@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c2', '2022-01-02') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (2, 'p2', 3, 15.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c3', 'Charlie', 'charlie@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c3', '2022-01-03') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (3, 'p3', 1, 5.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c4', 'David', 'david@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c4', '2022-01-04') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (4, 'p4', 4, 20.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c5', 'Eve', 'eve@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c5', '2022-01-05') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (5, 'p5', 2, 12.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c6', 'Frank', 'frank@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c6', '2022-01-06') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price) VALUES (6, 'p6', 3, 18.99) ON CONFLICT (order_id, product_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('c7', 'Grace', 'grace@example.com') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date) VALUES ('c7', '2022-01-07') ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('1c237681-59e8-4a77-94a5-13de4e9f7d88', 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('3b4efeb6-0fee-46a5-8e32-7d63e0605805', 'Alice Smith', 'alice.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Smith', customer_email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('f19faab6-0b25-467d-843c-7c03e158c859', 'Bob Johnson', 'bob.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Johnson', customer_email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('8a5996ba-95d0-4a48-a49d-6eb0ef74ca95', 'Emma Davis', 'emma.davis@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emma Davis', customer_email = 'emma.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('2452e47e-4a07-4db2-9bc4-d8f6ff69b29f', 'Michael Brown', 'michael.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Brown', customer_email = 'michael.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('eab363fe-03e4-451a-b86f-6de1b4ce5b3e', 'Sarah Williams', 'sarah.williams@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Williams', customer_email = 'sarah.williams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('2fea26d0-8417-455b-bd7b-3c65d7c7b611', 'David Wilson', 'david.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David Wilson', customer_email = 'david.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('82b326e4-4488-4b11-a4e1-7bb6b5088e5a', 'Olivia Miller', 'olivia.miller@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia Miller', customer_email = 'olivia.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('fec7bb97-4a50-4817-961e-60cda640d22d', 'James Taylor', 'james.taylor@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'James Taylor', customer_email = 'james.taylor@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES ('5f5f5c84-ef5e-4c4f-8e45-c2cbf7bd48f1', 'Emily Anderson', 'emily.anderson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Anderson', customer_email = 'emily.anderson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (1, '1c237681-59e8-4a77-94a5-13de4e9f7d88', '2022-02-28 10:00:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '1c237681-59e8-4a77-94a5-13de4e9f7d88', order_date = '2022-02-28 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (2, '3b4efeb6-0fee-46a5-8e32-7d63e0605805', '2022-03-15 12:30:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '3b4efeb6-0fee-46a5-8e32-7d63e0605805', order_date = '2022-03-15 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (3, 'f19faab6-0b25-467d-843c-7c03e158c859', '2022-04-02 14:45:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = 'f19faab6-0b25-467d-843c-7c03e158c859', order_date = '2022-04-02 14:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (4, '8a5996ba-95d0-4a48-a49d-6eb0ef74ca95', '2022-04-18 09:00:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '8a5996ba-95d0-4a48-a49d-6eb0ef74ca95', order_date = '2022-04-18 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (5, '2452e47e-4a07-4db2-9bc4-d8f6ff69b29f', '2022-05-01 16:30:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '2452e47e-4a07-4db2-9bc4-d8f6ff69b29f', order_date = '2022-05-01 16:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (6, 'eab363fe-03e4-451a-b86f-6de1b4ce5b3e', '2022-05-19 11:15:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = 'eab363fe-03e4-451a-b86f-6de1b4ce5b3e', order_date = '2022-05-19 11:15:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (7, '2fea26d0-8417-455b-bd7b-3c65d7c7b611', '2022-06-03 08:45:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '2fea26d0-8417-455b-bd7b-3c65d7c7b611', order_date = '2022-06-03 08:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (8, '82b326e4-4488-4b11-a4e1-7bb6b5088e5a', '2022-06-20 14:00:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '82b326e4-4488-4b11-a4e1-7bb6b5088e5a', order_date = '2022-06-20 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (9, 'fec7bb97-4a50-4817-961e-60cda640d22d', '2022-07-06 13:20:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = 'fec7bb97-4a50-4817-961e-60cda640d22d', order_date = '2022-07-06 13:20:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (10, '5f5f5c84-ef5e-4c4f-8e45-c2cbf7bd48f1', '2022-07-22 10:40:00') ON CONFLICT (order_id) DO UPDATE SET customer_id = '5f5f5c84-ef5e-4c4f-8e45-c2cbf7bd48f1', order_date = '2022-07-22 10:40:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (1, 1, '5862fd74-0414-4821-80c4-99f8a048ecae', 2, 25.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 1, product_id = '5862fd74-0414-4821-80c4-99f8a048ecae', quantity = 2, price = 25.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (2, 2, 'd2e2b8e3-6c5d-46f3-8990-d9fcf0b7c529', 3, 39.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 2, product_id = 'd2e2b8e3-6c5d-46f3-8990-d9fcf0b7c529', quantity = 3, price = 39.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (3, 3, '631a88b8-291e-45d5-99cf-b8d06b7b9241', 1, 15.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 3, product_id = '631a88b8-291e-45d5-99cf-b8d06b7b9241', quantity = 1, price = 15.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (4, 4, 'c5ebeb13-8be3-4d16-9418-7d5b9387d730', 2, 29.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 4, product_id = 'c5ebeb13-8be3-4d16-9418-7d5b9387d730', quantity = 2, price = 29.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (5, 5, '5f300b6d-bacb-4f13-b432-50ded36f44d7', 4, 49.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 5, product_id = '5f300b6d-bacb-4f13-b432-50ded36f44d7', quantity = 4, price = 49.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (6, 6, 'b55dfcce-bf1a-44ff-8304-27eb9974b605', 1, 19.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 6, product_id = 'b55dfcce-bf1a-44ff-8304-27eb9974b605', quantity = 1, price = 19.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (7, 7, 'd42c5d03-9ea4-4579-b61a-17bd5b15cc63', 3, 39.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 7, product_id = 'd42c5d03-9ea4-4579-b61a-17bd5b15cc63', quantity = 3, price = 39.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (8, 8, '70267b38-1de6-40f7-87f2-f405b416de19', 2, 29.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 8, product_id = '70267b38-1de6-40f7-87f2-f405b416de19', quantity = 2, price = 29.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (9, 9, '67811634-5f48-48f5-8f34-de6f4e040498', 1, 15.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 9, product_id = '67811634-5f48-48f5-8f34-de6f4e040498', quantity = 1, price = 15.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_email VARCHAR(50) UNIQUE\n);\n\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE order_details (\n    detail_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id UUID NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO order_details (detail_id, order_id, product_id, quantity, price) VALUES (10, 10, 'd9c2a070-5967-47eb-8cb4-6b0505073c14', 4, 49.99) ON CONFLICT (detail_id) DO UPDATE SET order_id = 10, product_id = 'd9c2a070-5967-47eb-8cb4-6b0505073c14', quantity = 4, price = 49.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date) VALUES (1, 1, '2022-01-01') ON CONFLICT (order_id) DO UPDATE SET customer_id = 1, order_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (1, 1, 1, 5) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = 1, product_id = 1, quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 10.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', price = 10.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', customer_email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date) VALUES (2, 2, '2022-01-02') ON CONFLICT (order_id) DO UPDATE SET customer_id = 2, order_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (2, 2, 2, 3) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = 2, product_id = 2, quantity = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 15.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', price = 15.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', customer_email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date) VALUES (3, 3, '2022-01-03') ON CONFLICT (order_id) DO UPDATE SET customer_id = 3, order_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (3, 3, 3, 2) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = 3, product_id = 3, quantity = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (3, 'Product C', 20.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', price = 20.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Michael Brown', 'michael.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Brown', customer_email = 'michael.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date) VALUES (4, 4, '2022-01-04') ON CONFLICT (order_id) DO UPDATE SET customer_id = 4, order_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (4, 4, 4, 7) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = 4, product_id = 4, quantity = 7;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (4, 'Product D', 25.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', price = 25.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Emily Davis', 'emily.davis@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Davis', customer_email = 'emily.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO orders (order_id, customer_id, order_date) VALUES (5, 5, '2022-01-05') ON CONFLICT (order_id) DO UPDATE SET customer_id = 5, order_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (5, 5, 5, 4) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = 5, product_id = 5, quantity = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price) VALUES (5, 'Product E', 30.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', price = 30.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Alice Smith', 'alice.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, customer_email = excluded.customer_email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (1, 1, '2022-07-15') ON CONFLICT (order_id) DO UPDATE SET customer_id = excluded.customer_id, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO orders (order_id, customer_id, order_date) VALUES (2, 2, '2022-07-16') ON CONFLICT (order_id) DO UPDATE SET customer_id = excluded.customer_id, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (1, 1, 1, 5) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = excluded.order_id, product_id = excluded.product_id, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO order_details (order_detail_id, order_id, product_id, quantity) VALUES (2, 2, 2, 3) ON CONFLICT (order_detail_id) DO UPDATE SET order_id = excluded.order_id, product_id = excluded.product_id, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 10.99) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT PRIMARY KEY,\n   customer_name VARCHAR,\n   customer_email VARCHAR);\n\nCREATE TABLE orders (order_id INT PRIMARY KEY,\n   customer_id INT,\n   order_date DATE);\n\nCREATE TABLE order_details (order_detail_id INT PRIMARY KEY,\n   order_id INT,\n   product_id INT,\n   quantity INT);\n\nCREATE TABLE products (product_id INT PRIMARY KEY,\n   product_name VARCHAR,\n   price DECIMAL);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 15.99) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', email='alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name='Bob Brown', email='bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (5, 'Emily Davis', 'emily.davis@example.com') ON DUPLICATE KEY UPDATE customer_name='Emily Davis', email='emily.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (101, '2022-01-15', 1) ON DUPLICATE KEY UPDATE order_date='2022-01-15', customer_id=1;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (102, '2022-01-20', 2) ON DUPLICATE KEY UPDATE order_date='2022-01-20', customer_id=2;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (103, '2022-01-25', 3) ON DUPLICATE KEY UPDATE order_date='2022-01-25', customer_id=3;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (104, '2022-01-30', 4) ON DUPLICATE KEY UPDATE order_date='2022-01-30', customer_id=4;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (105, '2022-02-05', 5) ON DUPLICATE KEY UPDATE order_date='2022-02-05', customer_id=5;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (101, 1, 2, 10.00, 20.00) ON DUPLICATE KEY UPDATE product_id=1, quantity=2, price=10.00, total=20.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (102, 2, 3, 15.00, 45.00) ON DUPLICATE KEY UPDATE product_id=2, quantity=3, price=15.00, total=45.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (103, 3, 1, 8.00, 8.00) ON DUPLICATE KEY UPDATE product_id=3, quantity=1, price=8.00, total=8.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (104, 4, 5, 12.50, 62.50) ON DUPLICATE KEY UPDATE product_id=4, quantity=5, price=12.50, total=62.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (105, 5, 2, 20.00, 40.00) ON DUPLICATE KEY UPDATE product_id=5, quantity=2, price=20.00, total=40.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Widget A', 10.00) ON DUPLICATE KEY UPDATE product_name='Widget A', price=10.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (2, 'Widget B', 15.00) ON DUPLICATE KEY UPDATE product_name='Widget B', price=15.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (3, 'Widget C', 8.00) ON DUPLICATE KEY UPDATE product_name='Widget C', price=8.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (4, 'Widget D', 12.50) ON DUPLICATE KEY UPDATE product_name='Widget D', price=12.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (5, 'Widget E', 20.00) ON DUPLICATE KEY UPDATE product_name='Widget E', price=20.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (1, 'Category A') ON DUPLICATE KEY UPDATE category_name='Category A';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (2, 'Category B') ON DUPLICATE KEY UPDATE category_name='Category B';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (3, 'Category C') ON DUPLICATE KEY UPDATE category_name='Category C';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (4, 'Category D') ON DUPLICATE KEY UPDATE category_name='Category D';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (5, 'Category E') ON DUPLICATE KEY UPDATE category_name='Category E';",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (1, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (3, 'Alice Brown', 'alice.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (1, '2022-10-15', 1) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (2, '2022-10-16', 2) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (3, '2022-10-17', 3) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (1, 1, 2, 10.99, 21.98) ON CONFLICT (order_id, product_id) DO UPDATE SET quantity = excluded.quantity, price = excluded.price, total = excluded.total;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (2, 2, 3, 15.99, 47.97) ON CONFLICT (order_id, product_id) DO UPDATE SET quantity = excluded.quantity, price = excluded.price, total = excluded.total;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO order_details (order_id, product_id, quantity, price, total) VALUES (3, 3, 1, 9.99, 9.99) ON CONFLICT (order_id, product_id) DO UPDATE SET quantity = excluded.quantity, price = excluded.price, total = excluded.total;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (1, 'Product A', 10.99) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (2, 'Product B', 15.99) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price) VALUES (3, 'Product C', 9.99) ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (1, 'Category X') ON CONFLICT (category_id) DO UPDATE SET category_name = excluded.category_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (2, 'Category Y') ON CONFLICT (category_id) DO UPDATE SET category_name = excluded.category_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO product_categories (category_id, category_name) VALUES (3, 'Category Z') ON CONFLICT (category_id) DO UPDATE SET category_name = excluded.category_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (4, 'Tom Brown', 'tom.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (5, 'Mary Smith', 'mary.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email) VALUES (6, 'Sarah Johnson', 'sarah.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (4, '2022-10-18', 4) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (5, '2022-10-19', 5) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), email VARCHAR(100));\n\nCREATE TABLE orders (order_id INT, order_date DATE, customer_id INT);\n\nCREATE TABLE order_details (order_id INT, product_id INT, quantity INT, price DECIMAL(10,2), total DECIMAL(10,2));\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(50), price DECIMAL(10,2));\n\nCREATE TABLE product_categories (category_id INT, category_name VARCHAR(50));\n\n### STATEMENT\n\nINSERT INTO orders (order_id, order_date, customer_id) VALUES (6, '2022-10-20', 6) ON CONFLICT (order_id) DO UPDATE SET order_date = excluded.order_date, customer_id = excluded.customer_id;"
]