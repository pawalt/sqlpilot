[
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_id, customer_id FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT product_id, return_date FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, exchange_date FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_reason, exchange_reason FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE return_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE exchange_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE return_reason LIKE '%damaged%';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE exchange_reason LIKE '%wrong color%';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) FROM Returns_and_Exchanges GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(exchange_date, return_date)) AS avg_exchange_duration FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges ORDER BY return_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges ORDER BY exchange_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_returns FROM Returns_and_Exchanges WHERE return_date IS NOT NULL GROUP BY customer_id HAVING num_returns > 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_id, customer_id, product_id, exchange_reason FROM Returns_and_Exchanges WHERE return_id IN (1,2,3);",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_exchanges FROM Returns_and_Exchanges WHERE exchange_date IS NOT NULL GROUP BY customer_id HAVING num_exchanges > 0;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT return_reason FROM Returns_and_Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, return_date FROM Returns_and_Exchanges WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT return_date FROM Returns_and_Exchanges WHERE exchange_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, return_reason FROM Returns_and_Exchanges WHERE return_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id FROM Returns_and_Exchanges WHERE return_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_id, customer_id, product_id FROM Returns_and_Exchanges WHERE return_date < '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, exchange_reason FROM Returns_and_Exchanges WHERE exchange_reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, exchange_date FROM Returns_and_Exchanges WHERE exchange_reason = 'Size mismatch';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_id, exchange_date FROM Returns_and_Exchanges WHERE return_reason IS NOT NULL AND exchange_reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM Returns_and_Exchanges WHERE return_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, return_reason, exchange_reason FROM Returns_and_Exchanges WHERE return_date < '2022-04-01' OR exchange_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT * FROM Returns_and_Exchanges WHERE customer_id IN (100, 200, 300);",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id FROM Returns_and_Exchanges WHERE return_reason = 'Wrong color' AND exchange_reason = 'Size mismatch';",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, return_date, exchange_date FROM Returns_and_Exchanges WHERE return_date < exchange_date;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, return_id FROM Returns_and_Exchanges WHERE DATEDIFF(exchange_date, return_date) > 7;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id FROM Returns_and_Exchanges WHERE exchange_date = (SELECT MAX(exchange_date) FROM Returns_and_Exchanges);",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT return_id, customer_id, product_id FROM Returns_and_Exchanges WHERE EXTRACT(YEAR FROM return_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_returns FROM Returns_and_Exchanges GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, AVG(DATEDIFF(exchange_date, return_date)) AS avg_exchange_days FROM Returns_and_Exchanges GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns_and_Exchanges (\n  return_id INT,\n  customer_id INT,\n  product_id INT,\n  return_date DATE,\n  exchange_date DATE,\n  return_reason VARCHAR(255),\n  exchange_reason VARCHAR(255)\n)\n\n### STATEMENT\n\nSELECT customer_id, MAX(DATEDIFF(exchange_date, return_date)) AS max_exchange_days FROM Returns_and_Exchanges GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, return_date FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_reason FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, exchange_date FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, current_item_id, new_item_id FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, return_date, return_reason FROM returns WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, exchange_date, exchange_reason FROM exchanges WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM returns WHERE item_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges WHERE current_item_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM returns WHERE return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges WHERE exchange_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id FROM returns WHERE return_reason LIKE '%damaged%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, customer_id FROM exchanges WHERE exchange_reason LIKE '%size%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(item_id) FROM returns WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM exchanges WHERE customer_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(item_id) FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(current_item_id) FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(return_id) FROM returns GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(exchange_id) FROM exchanges GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_date, item_id, return_reason FROM returns WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, customer_id, exchange_date, current_item_id, new_item_id, exchange_reason FROM exchanges WHERE customer_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_date, item_id FROM returns WHERE return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, customer_id, exchange_date, current_item_id FROM exchanges WHERE exchange_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_date, return_reason FROM returns WHERE customer_id = 20 AND return_reason LIKE '%damaged%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT exchange_id, customer_id, exchange_date, exchange_reason FROM exchanges WHERE customer_id = 25 AND exchange_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  item_id INT,\n  return_reason TEXT\n);\n\nCREATE TABLE exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  current_item_id INT,\n  new_item_id INT,\n  exchange_reason TEXT\n);\n\n### STATEMENT\n\nSELECT return_reason, COUNT(return_id) FROM returns GROUP BY return_reason ORDER BY COUNT(re...",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT return_id, order_id, return_date FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, return_date FROM returns WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT exchange_id, order_id, exchange_date, exchange_reason FROM exchanges;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT order_id, exchange_date FROM exchanges WHERE exchange_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, product_category, product_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM returns JOIN products ON returns.order_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges JOIN products ON exchanges.order_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM returns WHERE return_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM exchanges WHERE exchange_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(product_price) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_category, AVG(product_price) FROM products GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_category, COUNT(*) FROM products GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products WHERE product_name LIKE '%phone%';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(product_price) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM returns INNER JOIN orders ON returns.order_id = orders.order_id WHERE returns.return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_category = 'Electronics' ORDER BY product_price DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT exchange_date, exchange_reason FROM exchanges WHERE exchange_reason LIKE '%defective%' ORDER BY exchange_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, product_category, product_price FROM products WHERE product_price > 100 AND product_category = 'Clothing';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(product_price) AS max_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(product_price) AS avg_price, product_category FROM products GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, exchange_date, exchange_reason FROM products INNER JOIN exchanges ON products.product_id = exchanges.order_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT return_id, count(order_id) AS total_orders FROM returns GROUP BY return_id HAVING total_orders > 3;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT return_id, products.product_name AS returned_product FROM returns INNER JOIN products ON returns.order_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(product_price) AS avg_price, product_category FROM products GROUP BY product_category HAVING avg_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_category, COUNT(*) AS total_exchanges FROM exchanges GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT exchange_id, product_name, product_price FROM exchanges INNER JOIN products ON exchanges.order_id = products.product_id WHERE exchange_reason = 'Wrong size';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_returns FROM returns;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT exchange_id, product_name, product_price FROM exchanges INNER JOIN products ON exchanges.order_id = products.product_id WHERE exchange_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(product_price) AS total_price FROM products GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT exchange_id, products.product_name, exchange_date FROM exchanges INNER JOIN products ON exchanges.order_id = products.product_id ORDER BY exchange_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT return_id, return_date, exchange_reason FROM returns LEFT JOIN exchanges ON returns.return_id = exchanges.exchange_id WHERE exchange_reason IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_category, AVG(product_price) AS avg_price, COUNT(*) AS total_products FROM products GROUP BY product_category HAVING total_products > 5;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT return_id, exchanges.exchange_id, return_date FROM returns RIGHT JOIN exchanges ON returns.return_id = exchanges.exchange_id;",
  "### TABLEDATA\n\nCREATE TABLE returns (\n return_id INT PRIMARY KEY,\n order_id INT,\n return_date DATE\n);\n\n\nCREATE TABLE exchanges (\n exchange_id INT PRIMARY KEY,\n order_id INT,\n exchange_date DATE,\n exchange_reason TEXT\n);\n\n\nCREATE TABLE products (\n product_id INT PRIMARY KEY,\n product_name TEXT,\n product_category TEXT,\n product_price DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_category, SUM(product_price) AS total_price FROM products GROUP BY product_category HAVING total_price > 500;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_date FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT exchange_id, customer_id, exchange_date FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT original_product_id, new_product_id FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT email, phone_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email, phone_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email, phone_number FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns WHERE return_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM Returns WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE customer_id IN (SELECT customer_id FROM Returns WHERE return_reason = 'Defective');",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE customer_id IN (SELECT customer_id FROM Returns WHERE return_reason = 'Changed Mind' AND product_id = 5);",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT return_id, return_date, product_id FROM Returns WHERE return_date >= '2022-01-01' AND return_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT e.exchange_id, e.exchange_date, p.product_name FROM Exchanges e JOIN Products p ON e.original_product_id = p.product_id WHERE e.customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, c.email, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.return_id, r.return_date, p.product_name, p.category FROM Returns r JOIN Products p ON r.product_id = p.product_id WHERE p.category = 'electronics';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, c.phone_number, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id AND p.category = 'clothing';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT e.exchange_id, e.exchange_date, p1.product_name AS original_product, p2.product_name AS new_product FROM Exchanges e JOIN Products p1 ON e.original_product_id = p1.product_id JOIN Products p2 ON e.new_product_id = p2.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.return_id, c.customer_name, r.return_date, p.product_name, p.price FROM Returns r JOIN Customers c ON r.customer_id = c.customer_id JOIN Products p ON r.product_id = p.product_id WHERE c.email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id ORDER BY p.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.return_id, r.return_date, p.product_name, p.price FROM Returns r JOIN Products p ON r.product_id = p.product_id WHERE r.return_reason IN ('damaged', 'expired');",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.customer_name FROM Customers c JOIN Returns r ON c.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(r.return_id) AS total_returns FROM Customers c LEFT JOIN Returns r ON c.customer_id = r.customer_id GROUP BY c.customer_name HAVING total_returns > 3;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(p.price) AS avg_product_price FROM Customers c JOIN Returns r ON c.customer_id = r.customer_id JOIN Products p ON r.product_id = p.product_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(p.price) AS total_spent FROM Customers c JOIN Exchanges e ON c.customer_id = e.customer_id JOIN Products p ON e.original_product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id WHERE p.price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id AND p.category = 'electronics' ORDER BY p.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(p.price) AS most_expensive_product FROM Customers c JOIN Products p ON c.customer_id = p.product_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, p.price FROM Customers c JOIN Products p ON c.customer_id = p.product_id WHERE p.product_name LIKE '%iphone%' OR p.product_name LIKE '%Samsung%';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n    return_id INT PRIMARY KEY,\n    customer_id INT,\n    return_date DATE,\n    product_id INT,\n    return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n    exchange_id INT PRIMARY KEY,\n    customer_id INT,\n    exchange_date DATE,\n    original_product_id INT,\n    new_product_id INT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(100),\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT r.return_id, r.return_date, c.customer_name, e1.product_name AS original_product, e2.product_name AS new_product FROM Returns r JOIN Customers c ON r.customer_id = c.customer_id JOIN Exchanges e1 ON r.product_id = e1.product_id JOIN Exchanges e2 ON r.product_id = e2.product_id WHERE r.return_reason = 'defective';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, return_date FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT return_id, return_reason FROM Returns;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, exchange_reason FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT exchange_id, exchange_date FROM Exchanges;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, feedback_date FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM CustomerFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT quantity_in_stock, price FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM SaleRecords;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, sale_date FROM SaleRecords;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT sale_id, product_id, quantity_sold FROM SaleRecords;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, price FROM ProductInventory WHERE quantity_in_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns WHERE return_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, exchange_date FROM Exchanges WHERE exchange_reason = 'Defective Product';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT feedback_id, feedback_text FROM CustomerFeedback WHERE feedback_date > '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM ProductInventory WHERE price < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, sale_date, total_price FROM SaleRecords WHERE total_price > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns JOIN SaleRecords ON Returns.customer_id = SaleRecords.customer_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity_sold) AS total_quantity_sold FROM SaleRecords",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, price, quantity_in_stock FROM ProductInventory WHERE price > 50",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(sale_id) AS total_sales FROM SaleRecords GROUP BY customer_id HAVING total_sales > 2",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Exchanges JOIN CustomerFeedback ON Exchanges.customer_id = CustomerFeedback.customer_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns WHERE return_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM ProductInventory",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT feedback_date, feedback_text FROM CustomerFeedback ORDER BY feedback_date DESC",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(total_price) AS min_price FROM SaleRecords GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(quantity_sold) AS max_quantity_sold FROM SaleRecords GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT exchange_id, exchange_date, exchange_reason FROM Exchanges WHERE exchange_reason LIKE '%defective%'",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT return_id, customer_id, return_date FROM Returns WHERE customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, price, quantity_in_stock FROM ProductInventory WHERE quantity_in_stock < 10",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(total_price) AS avg_total_price FROM SaleRecords GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT feedback_id, customer_id, feedback_date FROM CustomerFeedback WHERE customer_id IN (SELECT customer_id FROM SaleRecords)",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Returns JOIN SaleRecords USING (customer_id)",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM SaleRecords",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT product_id) AS unique_products_sold FROM SaleRecords GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT feedback_text FROM CustomerFeedback WHERE LENGTH(feedback_text) > 100",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price_per_product FROM ProductInventory",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT SUM(total_price) AS total_revenue FROM SaleRecords",
  "### TABLEDATA\n\nCREATE TABLE Returns (\n  return_id INT PRIMARY KEY,\n  customer_id INT,\n  return_date DATE,\n  return_reason VARCHAR(255)\n);\n\nCREATE TABLE Exchanges (\n  exchange_id INT PRIMARY KEY,\n  customer_id INT,\n  exchange_date DATE,\n  exchange_reason VARCHAR(255)\n);\n\nCREATE TABLE CustomerFeedback (\n  feedback_id INT PRIMARY KEY,\n  customer_id INT,\n  feedback_date DATE,\n  feedback_text TEXT\n);\n\nCREATE TABLE ProductInventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  quantity_in_stock INT,\n  price DECIMAL(10, 2)\n);\n\nCREATE TABLE SaleRecords (\n  sale_id INT PRIMARY KEY,\n  customer_id INT,\n  sale_date DATE,\n  product_id INT,\n  quantity_sold INT,\n  total_price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(sale_date) AS first_sale_date FROM SaleRecords GROUP BY customer_id"
]