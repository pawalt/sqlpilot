[
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, year FROM FashionTrends WHERE season = 'Summer';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT season FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends ORDER BY year;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM FashionTrends WHERE year > 2020;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season, year FROM FashionTrends WHERE season = 'Fall' AND year > 2019;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(year) FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(year) FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season, year FROM FashionTrends ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT season) FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE trend_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(year) FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season FROM FashionTrends WHERE trend_name LIKE '%sneakers%';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE season IN ('Spring', 'Summer');",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, year FROM FashionTrends WHERE year >= 2018 AND year <= 2020;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE trend_description LIKE '%vintage%';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE season = 'Summer' AND year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season FROM FashionTrends WHERE trend_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trends FROM FashionTrends WHERE year >= 2020;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(year) AS avg_year FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT season FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(*) AS trend_count FROM FashionTrends GROUP BY trend_name;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM FashionTrends WHERE trend_name LIKE 'Casual%';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE trend_description ILIKE '%vibrant%';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE year IN (2020, 2021, 2022);",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season, year FROM FashionTrends WHERE season = 'Spring' OR season = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM FashionTrends WHERE year BETWEEN 2018 AND 2021;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE year < 2019 ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season, COUNT(*) AS trend_count FROM FashionTrends GROUP BY trend_name, season;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT year FROM FashionTrends ORDER BY year DESC;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE trend_name = 'Vintage' AND (season = 'Spring' OR season = 'Fall');",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(year) AS total_years FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(*) AS trend_count FROM FashionTrends GROUP BY trend_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, season FROM FashionTrends WHERE trend_description IS NOT NULL AND trend_description <> '';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(year) AS avg_year, MAX(year) AS max_year, MIN(year) AS min_year FROM FashionTrends WHERE season = 'Summer';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n  id SERIAL PRIMARY KEY,\n  trend_name TEXT NOT NULL,\n  season TEXT NOT NULL,\n  year INT NOT NULL,\n  trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE trend_description IS NULL OR trend_description = '';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date FROM fashion_trends;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, trend_id, forecast_date FROM trend_forecast;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date, end_date FROM fashion_trends WHERE trend_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_text FROM trend_forecast WHERE trend_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name FROM fashion_trends WHERE end_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, forecast_date, forecast_text FROM trend_forecast WHERE trend_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends WHERE trend_name LIKE '%summer%';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_text FROM trend_forecast WHERE forecast_date = '2022-05-25';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date FROM fashion_trends ORDER BY start_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, trend_id, forecast_date FROM trend_forecast ORDER BY forecast_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date FROM fashion_trends LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, trend_id, forecast_date FROM trend_forecast LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends WHERE start_date = '2022-06-15' AND end_date = '2022-09-15';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_text FROM trend_forecast WHERE forecast_date BETWEEN '2022-07-01' AND '2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name FROM fashion_trends WHERE trend_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, trend_id, forecast_date FROM trend_forecast WHERE trend_id = 1 OR trend_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends WHERE start_date < '2022-07-01' AND end_date > '2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, end_date FROM fashion_trends WHERE trend_name = 'Fall 2022';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends WHERE start_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date, end_date FROM fashion_trends WHERE trend_name LIKE '%summer%'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT f.forecast_text, t.trend_name FROM fashion_trends t INNER JOIN trend_forecast f ON t.trend_id = f.trend_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_forecasts FROM trend_forecast WHERE forecast_date BETWEEN '2022-06-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT trend_name FROM fashion_trends WHERE start_date < '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, f.forecast_text FROM fashion_trends t LEFT JOIN trend_forecast f ON t.trend_id = f.trend_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_date, start_date)) AS avg_trend_duration FROM fashion_trends",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(forecast_id) AS num_forecasts FROM fashion_trends t LEFT JOIN trend_forecast f ON t.trend_id = f.trend_id GROUP BY trend_name",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date, end_date FROM fashion_trends ORDER BY start_date DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_text FROM fashion_trends t INNER JOIN trend_forecast f ON t.trend_id = f.trend_id WHERE forecast_text LIKE '%trendy%'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date, end_date, forecast_text FROM fashion_trends t LEFT JOIN trend_forecast f ON t.trend_id = f.trend_id WHERE forecast_date > '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, COUNT(f.forecast_id) AS num_forecasts FROM fashion_trends t INNER JOIN trend_forecast f ON t.trend_id = f.trend_id GROUP BY t.trend_name HAVING num_forecasts > 5",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_id, trend_name FROM trend_forecast f INNER JOIN fashion_trends t ON f.trend_id = t.trend_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT MAX(DATEDIFF(end_date, start_date)) AS max_trend_duration FROM fashion_trends",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, SUM(DATEDIFF(end_date, start_date)) AS total_duration FROM fashion_trends GROUP BY trend_name ORDER BY total_duration DESC",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, COUNT(f.forecast_id) AS num_forecasts FROM fashion_trends t INNER JOIN trend_forecast f ON t.trend_id = f.trend_id GROUP BY t.trend_name ORDER BY num_forecasts DESC LIMIT 3",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT trend_name FROM fashion_trends WHERE end_date < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(DATEDIFF(end_date, start_date)) AS avg_duration FROM fashion_trends GROUP BY trend_name ORDER BY avg_duration DESC",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, COUNT(f.forecast_id) AS num_forecasts FROM fashion_trends t LEFT JOIN trend_forecast f ON t.trend_id = f.trend_id GROUP BY t.trend_name ORDER BY num_forecasts ASC",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_text TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, start_date, end_date FROM fashion_trends WHERE trend_id IN (SELECT trend_id FROM trend_forecast WHERE forecast_date > '2022-12-31')",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM HistoricalData;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT year, sales_volume FROM HistoricalData;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TrendForecasts;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_id, forecast_date, forecast_description FROM TrendForecasts;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM HistoricalData WHERE sales_volume > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM TrendForecasts WHERE forecast_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name FROM FashionTrends WHERE trend_start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_description FROM FashionTrends WHERE trend_end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_id, SUM(sales_volume) AS total_sales FROM HistoricalData GROUP BY trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_id, COUNT(*) AS total_forecasts FROM TrendForecasts GROUP BY trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_date, forecast_description FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description, year, sales_volume FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, forecast_date, forecast_description FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT ft.trend_name, hd.sales_volume, tf.forecast_description FROM FashionTrends ft INNER JOIN HistoricalData hd ON ft.id = hd.trend_id INNER JOIN TrendForecasts tf ON ft.id = tf.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT ft.trend_name, COUNT(hd.year) AS num_years FROM FashionTrends ft LEFT JOIN HistoricalData hd ON ft.id = hd.trend_id GROUP BY ft.id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT ft.trend_name, MAX(hd.sales_volume) AS max_sales FROM FashionTrends ft LEFT JOIN HistoricalData hd ON ft.id = hd.trend_id GROUP BY ft.id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT ft.trend_name, MIN(tf.forecast_date) AS earliest_forecast_date FROM FashionTrends ft LEFT JOIN TrendForecasts tf ON ft.id = tf.trend_id GROUP BY ft.id;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM FashionTrends;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date FROM FashionTrends WHERE trend_end_date > '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(*) AS num_forecasts FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id GROUP BY trend_name;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(*) AS num_years FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id GROUP BY trend_name HAVING num_years > 5;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, MAX(sales_volume) AS max_sales FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id GROUP BY trend_name;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_date, forecast_description FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id WHERE forecast_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT trend_name FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id WHERE sales_volume > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(sales_volume) AS avg_sales FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id GROUP BY trend_name HAVING avg_sales > 500;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, COUNT(*) AS num_forecasts FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id GROUP BY trend_name HAVING num_forecasts < 3;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_end_date FROM FashionTrends WHERE trend_end_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, MAX(sales_volume) AS max_sales, year FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id GROUP BY trend_name, year;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_date FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id ORDER BY forecast_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, sales_volume FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id WHERE sales_volume > 500 ORDER BY trend_start_date;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_description FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id WHERE forecast_description LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, year FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id WHERE year = 2020;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_end_date, forecast_date FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, sales_volume AS last_year_sales FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id WHERE year = YEAR(NOW()) - 1;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(sales_volume) AS avg_sales FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id GROUP BY trend_name HAVING avg_sales BETWEEN 200 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date, sales_volume FROM FashionTrends INNER JOIN HistoricalData ON FashionTrends.id = HistoricalData.trend_id WHERE sales_volume > 1000 AND trend_start_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE FashionTrends (\n    id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\n\nCREATE TABLE HistoricalData (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    year YEAR,\n    sales_volume INT\n);\n\n\nCREATE TABLE TrendForecasts (\n    id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_description TEXT\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date, forecast_date FROM FashionTrends INNER JOIN TrendForecasts ON FashionTrends.id = TrendForecasts.trend_id WHERE forecast_date > '2022-01-01' AND trend_start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_category FROM fashion_trends WHERE trend_start_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM fashion_trends WHERE trend_category = 'Casual';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date FROM fashion_trends WHERE trend_end_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date FROM fashion_trends WHERE trend_name LIKE '%Summer%';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, data_date, data_value FROM fashion_trends JOIN historical_data ON fashion_trends.trend_id = historical_data.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, data_date, data_value FROM fashion_trends JOIN historical_data ON fashion_trends.trend_id = historical_data.trend_id WHERE data_date = '2021-06-15';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, data_date, data_value FROM fashion_trends JOIN historical_data ON fashion_trends.trend_id = historical_data.trend_id WHERE data_value > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM trend_forecast;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, forecast_date, forecast_value FROM fashion_trends JOIN trend_forecast ON fashion_trends.trend_id = trend_forecast.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT forecast_date, forecast_value FROM trend_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM collection_plans;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, plan_date, plan_description FROM fashion_trends JOIN collection_plans ON fashion_trends.trend_id = collection_plans.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT plan_date, plan_description FROM collection_plans WHERE plan_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, plan_date, plan_description FROM fashion_trends JOIN collection_plans ON fashion_trends.trend_id = collection_plans.trend_id WHERE plan_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, data_value, forecast_value FROM fashion_trends JOIN historical_data ON fashion_trends.trend_id = historical_data.trend_id JOIN trend_forecast ON fashion_trends.trend_id = trend_forecast.trend_id WHERE data_date = '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description, plan_description FROM fashion_trends JOIN collection_plans ON fashion_trends.trend_id = collection_plans.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_category, data_value, forecast_value FROM fashion_trends JOIN historical_data ON fashion_trends.trend_id = historical_data.trend_id JOIN trend_forecast ON fashion_trends.trend_id = trend_forecast.trend_id WHERE data_value > 100 AND forecast_value < 200;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date FROM fashion_trends WHERE trend_category = 'Formal' ORDER BY trend_start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_start_date, trend_end_date FROM fashion_trends WHERE trend_category = 'Casual' ORDER BY trend_end_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_trends;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_category FROM fashion_trends WHERE trend_start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, tf.forecast_value FROM fashion_trends t INNER JOIN trend_forecast tf ON t.trend_id = tf.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT th.data_date, th.data_value FROM historical_data th JOIN fashion_trends t ON th.trend_id = t.trend_id WHERE t.trend_category = 'Summer';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM trend_forecast WHERE forecast_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT MAX(data_value) AS max_value FROM historical_data WHERE data_date = '2022-09-15';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT AVG(forecast_value) AS avg_forecast_value FROM trend_forecast tf JOIN fashion_trends t ON tf.trend_id = t.trend_id WHERE t.trend_category = 'Winter';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT p.plan_id, t.trend_name, p.plan_date FROM collection_plans p JOIN fashion_trends t ON p.trend_id = t.trend_id WHERE p.plan_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, tf.forecast_value, th.data_value FROM fashion_trends t LEFT JOIN trend_forecast tf ON t.trend_id = tf.trend_id LEFT JOIN historical_data th ON t.trend_id = th.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, COUNT(*) AS total_forecasts FROM fashion_trends t LEFT JOIN trend_forecast tf ON t.trend_id = tf.trend_id GROUP BY t.trend_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, tf.forecast_value FROM fashion_trends t INNER JOIN trend_forecast tf ON t.trend_id = tf.trend_id WHERE tf.forecast_date = '2022-12-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, th.data_date, th.data_value FROM fashion_trends t INNER JOIN historical_data th ON t.trend_id = th.trend_id WHERE th.data_date BETWEEN '2022-04-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_category, AVG(data_value) AS avg_data_value FROM fashion_trends t JOIN historical_data th ON t.trend_id = th.trend_id GROUP BY t.trend_category;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, MAX(data_value) AS max_data_value FROM fashion_trends t JOIN historical_data th ON t.trend_id = th.trend_id WHERE t.trend_category = 'Fall';",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, tf.forecast_date, tf.forecast_value FROM fashion_trends t INNER JOIN trend_forecast tf ON t.trend_id = tf.trend_id WHERE tf.forecast_value > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, COUNT(DISTINCT p.plan_date) AS unique_plan_dates FROM fashion_trends t LEFT JOIN collection_plans p ON t.trend_id = p.trend_id GROUP BY t.trend_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, th.data_date, th.data_value, tf.forecast_value FROM fashion_trends t LEFT JOIN historical_data th ON t.trend_id = th.trend_id LEFT JOIN trend_forecast tf ON t.trend_id = tf.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t1.trend_name AS trend_1, t2.trend_name AS trend_2 FROM fashion_trends t1 CROSS JOIN fashion_trends t2 WHERE t1.trend_id <> t2.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, th.data_date, th.data_value FROM fashion_trends t LEFT JOIN historical_data th ON t.trend_id = th.trend_id WHERE th.data_value IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE fashion_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_category VARCHAR(50),\n    trend_start_date DATE,\n    trend_end_date DATE\n);\n\nCREATE TABLE historical_data (\n    data_id INT PRIMARY KEY,\n    trend_id INT,\n    data_date DATE,\n    data_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE trend_forecast (\n    forecast_id INT PRIMARY KEY,\n    trend_id INT,\n    forecast_date DATE,\n    forecast_value FLOAT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\nCREATE TABLE collection_plans (\n    plan_id INT PRIMARY KEY,\n    trend_id INT,\n    plan_date DATE,\n    plan_description TEXT,\n    FOREIGN KEY (trend_id) REFERENCES fashion_trends(trend_id)\n);\n\n### STATEMENT\n\nSELECT t.trend_name, tf.forecast_value FROM fashion_trends t LEFT JOIN trend_forecast tf ON t.trend_id = tf.trend_id WHERE tf.forecast_value IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, founded_year FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT category_name FROM clothing_categories;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT item_name, category_id, brand_id FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT record_id, sale_date, sale_price FROM sales_records;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT forecast_id, forecast_date, trend_description FROM trend_forecasts;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_brands WHERE brand_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items WHERE category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_records WHERE sale_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM trend_forecasts WHERE forecast_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT item_name, sale_price FROM fashion_items JOIN sales_records ON fashion_items.item_id = sales_records.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, sale_price FROM fashion_items JOIN sales_records ON fashion_items.brand_id = fashion_brands.brand_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT f.brand_name, i.item_name, s.sale_price FROM fashion_brands f JOIN fashion_items i ON f.brand_id = i.brand_id JOIN sales_records s ON i.item_id = s.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.category_name, f.brand_name, s.sale_price FROM clothing_categories c JOIN fashion_items f ON c.category_id = f.category_id JOIN sales_records s ON f.item_id = s.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(sale_price) FROM sales_records;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(founded_year) FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(sale_price) FROM sales_records;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(sale_price), MAX(sale_price), MIN(sale_price) FROM sales_records WHERE sale_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name FROM fashion_brands WHERE founded_year > 2000;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT item_name, sale_date FROM fashion_items JOIN sales_records ON fashion_items.item_id = sales_records.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, trend_description FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN trend_forecasts ON trend_forecasts.forecast_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT category_name, AVG(sale_price) AS avg_sale_price FROM clothing_categories JOIN fashion_items ON clothing_categories.category_id = fashion_items.category_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id GROUP BY category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(item_name) AS total_items FROM fashion_items JOIN fashion_brands ON fashion_items.brand_id = fashion_brands.brand_id GROUP BY brand_name HAVING COUNT(item_name) > 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(DISTINCT item_name) AS distinct_items FROM fashion_items JOIN fashion_brands ON fashion_items.brand_id = fashion_brands.brand_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT category_name, MAX(sale_price) AS max_sale_price FROM clothing_categories JOIN fashion_items ON clothing_categories.category_id = fashion_items.category_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id GROUP BY category_name HAVING MAX(sale_price) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, AVG(founded_year) AS avg_founded_year FROM fashion_brands GROUP BY brand_name HAVING AVG(founded_year) < 1990;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(DISTINCT category_name) AS total_categories FROM fashion_items JOIN fashion_brands ON fashion_items.brand_id = fashion_brands.brand_id JOIN clothing_categories ON fashion_items.category_id = clothing_categories.category_id GROUP BY brand_name HAVING COUNT(DISTINCT category_name) > 2;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT brand_name FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, category_name FROM fashion_items JOIN fashion_brands ON fashion_items.brand_id = fashion_brands.brand_id JOIN clothing_categories ON fashion_items.category_id = clothing_categories.category_id ORDER BY brand_name, category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(item_id) AS total_sales FROM fashion_brands LEFT JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id LEFT JOIN sales_records ON fashion_items.item_id = sales_records.item_id GROUP BY brand_name ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, MAX(sale_price) AS max_sale_price FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id WHERE sale_date >= '2022-01-01' GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, MIN(founded_year) AS min_founded_year FROM fashion_brands GROUP BY brand_name HAVING MIN(founded_year) > 1995;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, AVG(sale_price) AS avg_sale_price FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id GROUP BY brand_name ORDER BY avg_sale_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(*) AS total_records FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id GROUP BY brand_name HAVING total_records > 10;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, AVG(sale_price) AS avg_sale_price FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY brand_name ORDER BY avg_sale_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, MAX(founded_year) - MIN(founded_year) AS year_range FROM fashion_brands GROUP BY brand_name HAVING year_range > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\nCREATE TABLE clothing_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    category_id INT,\n    brand_id INT,\n    FOREIGN KEY (category_id) REFERENCES clothing_categories(category_id),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(brand_id)\n);\n\nCREATE TABLE sales_records (\n    record_id INT PRIMARY KEY,\n    item_id INT,\n    sale_date DATE,\n    sale_price DECIMAL(10, 2),\n    FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE trend_forecasts (\n    forecast_id INT PRIMARY KEY,\n    forecast_date DATE,\n    trend_description TEXT\n);\n\n### STATEMENT\n\nSELECT brand_name, AVG(sale_price) AS avg_sale_price, COUNT(DISTINCT category_name) AS total_categories FROM fashion_brands JOIN fashion_items ON fashion_brands.brand_id = fashion_items.brand_id JOIN sales_records ON fashion_items.item_id = sales_records.item_id JOIN clothing_categories ON fashion_items.category_id = clothing_categories.category_id GROUP BY brand_name HAVING avg_sale_price > 1000;"
]