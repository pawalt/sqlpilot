[
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_category FROM fashion_inventory WHERE item_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory WHERE item_category = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory WHERE item_stock < 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_stock FROM fashion_inventory WHERE item_category = 'T-shirts';",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_price FROM fashion_inventory WHERE item_stock > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_category, item_stock FROM fashion_inventory WHERE item_category = 'Jeans' AND item_stock > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_stock, item_price FROM fashion_inventory WHERE item_price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_category, item_stock FROM fashion_inventory WHERE item_stock = 0;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_category, item_price FROM fashion_inventory WHERE item_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_price FROM fashion_inventory WHERE item_stock > 0 ORDER BY item_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_category, item_stock FROM fashion_inventory WHERE item_category = 'Dresses' ORDER BY item_stock ASC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(item_price) FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_category, AVG(item_stock) FROM fashion_inventory GROUP BY item_category;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_category, SUM(item_price) FROM fashion_inventory GROUP BY item_category HAVING SUM(item_price) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM fashion_inventory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_stock FROM fashion_inventory OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory ORDER BY item_name ASC LIMIT 3 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory WHERE item_category = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_stock FROM fashion_inventory WHERE item_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_inventory WHERE item_category = 'Bags' AND item_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_stock FROM fashion_inventory WHERE item_price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name FROM fashion_inventory ORDER BY item_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_inventory WHERE item_stock < 10 ORDER BY item_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(item_price) AS avg_price FROM fashion_inventory WHERE item_category = 'Jewelry';",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_category, SUM(item_stock) AS total_stock FROM fashion_inventory GROUP BY item_category;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_category, MAX(item_price) AS max_price FROM fashion_inventory GROUP BY item_category HAVING max_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_stock, item_price FROM fashion_inventory WHERE item_stock < 5 OR item_price > 200;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory WHERE item_name LIKE 'B%';",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_name FROM fashion_inventory WHERE item_category IN ('Shoes', 'Tops');",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT item_category FROM fashion_inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_inventory WHERE item_stock > (SELECT AVG(item_stock) FROM fashion_inventory);",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_inventory WHERE item_price = (SELECT MAX(item_price) FROM fashion_inventory);",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_id, item_price FROM fashion_inventory WHERE item_stock = (SELECT MIN(item_stock) FROM fashion_inventory);",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_category, AVG(item_price) AS avg_price FROM fashion_inventory GROUP BY item_category HAVING avg_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_inventory WHERE item_price = (SELECT MIN(item_price) FROM fashion_inventory);",
  "### TABLEDATA\n\nCREATE TABLE fashion_inventory (\n    item_id UUID PRIMARY KEY,\n    item_name VARCHAR(255) NOT NULL,\n    item_category VARCHAR(50),\n    item_stock INT,\n    item_price DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_inventory WHERE item_name = 'Dress' AND item_category = 'Tops';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_category = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items WHERE item_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_items WHERE item_category = 'Clothes' AND item_price < 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items ORDER BY item_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MAX(item_price) FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT item_category FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM fashion_items LEFT JOIN inventory ON fashion_items.item_id = inventory.item_id AND inventory.location = 'NY';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, AVG(item_price) AS avg_price FROM fashion_items GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_category LIKE '%pants%';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, location FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE location = 'LA';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM inventory WHERE item_id = (SELECT item_id FROM fashion_items WHERE item_name = 'Dress');",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY item_name HAVING SUM(quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_price FROM fashion_items WHERE item_category = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_items FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_price > 100 AND item_category = 'Dresses';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, location FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT item_category FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity) AS total_quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY item_name HAVING total_quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items ORDER BY item_price DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, quantity FROM inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, AVG(item_price) AS avg_price FROM fashion_items GROUP BY item_name ORDER BY avg_price;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, item_price FROM fashion_items WHERE item_category IN ('Shoes', 'Bags');",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, location, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE item_category = 'Tops' AND quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, item_price FROM fashion_items WHERE item_name LIKE '%blue%';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, SUM(quantity) AS total_quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY item_name, item_category;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_category, item_price FROM fashion_items WHERE item_price BETWEEN 50 AND 100 ORDER BY item_price;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_id, item_name, item_price FROM fashion_items WHERE item_name = 'Jeans' OR item_category = 'Tops';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS total_items FROM inventory GROUP BY location ORDER BY total_items DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE quantity < 5 AND location = 'Paris';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, item_price FROM fashion_items UNION SELECT item_name, item_category, item_price FROM fashion_items WHERE item_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT item_name, COUNT(*) AS total_items FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY item_name HAVING total_items > 1;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(255),\n    item_category VARCHAR(50),\n    item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    item_id INT REFERENCES fashion_items(item_id),\n    quantity INT,\n    location VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT location, SUM(quantity) AS total_quantity FROM inventory GROUP BY location HAVING total_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, founded_year FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, founded_year FROM fashion_brands WHERE founded_year > 2000;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_categories;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_name, description FROM fashion_categories;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM fashion_items WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT fb.brand_name, fi.item_name FROM fashion_brands fb INNER JOIN fashion_items fi ON fb.id = fi.brand_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT fc.category_name, fi.item_name FROM fashion_categories fc INNER JOIN fashion_items fi ON fc.category_id = fi.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT fb.brand_name, fc.category_name, fi.item_name, fi.price FROM fashion_brands fb INNER JOIN fashion_categories fc ON fb.id = fc.category_id INNER JOIN fashion_items fi ON fb.id = fi.brand_id AND fc.category_id = fi.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT fb.brand_name, COUNT(fi.item_id) AS total_items FROM fashion_brands fb LEFT JOIN fashion_items fi ON fb.id = fi.brand_id GROUP BY fb.brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS average_price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, SUM(price) AS total_price FROM fashion_brands fb INNER JOIN fashion_items fi ON fb.id = fi.brand_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, category_name, COUNT(fi.item_id) AS total_items FROM fashion_brands fb INNER JOIN fashion_categories fc ON fb.id = fc.category_id INNER JOIN fashion_items fi ON fb.id = fi.brand_id AND fc.category_id = fi.category_id GROUP BY brand_name, category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT MIN(price) AS min_price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT brand_name FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(ci.item_id) AS total_items FROM fashion_categories fc LEFT JOIN (SELECT * FROM fashion_items WHERE price > 100) ci ON fc.category_id = ci.category_id GROUP BY category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT fb.brand_name, AVG(price) AS average_price FROM fashion_brands fb INNER JOIN fashion_items fi ON fb.id = fi.brand_id GROUP BY fb.brand_name HAVING AVG(price) > 150;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_name, MAX(price) AS max_price FROM fashion_items fi INNER JOIN fashion_categories fc ON fi.category_id = fc.category_id GROUP BY category_name HAVING MAX(price) > 200;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, founded_year FROM fashion_brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_categories;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT category_name, description FROM fashion_categories;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT item_name, price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, f.price, b.brand_name, c.category_name FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id JOIN fashion_categories c ON f.category_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, f.price, b.brand_name, c.category_name FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id JOIN fashion_categories c ON f.category_id = c.category_id WHERE b.brand_name = 'Brand1';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, f.price, b.brand_name, c.category_name FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id JOIN fashion_categories c ON f.category_id = c.category_id WHERE c.category_name = 'Category1';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, f.price, b.brand_name, c.category_name FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id JOIN fashion_categories c ON f.category_id = c.category_id WHERE f.price > 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, f.price, b.brand_name, c.category_name FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id JOIN fashion_categories c ON f.category_id = c.category_id WHERE b.brand_name = 'Brand1' AND c.category_name = 'Category1';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, AVG(f.price) AS avg_price FROM fashion_items f GROUP BY f.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT c.category_name, COUNT(f.item_id) AS num_items FROM fashion_items f JOIN fashion_categories c ON f.category_id = c.category_id GROUP BY c.category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT b.brand_name, COUNT(f.item_id) AS num_items FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id GROUP BY b.brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT c.category_name, MAX(f.price) AS max_price FROM fashion_items f JOIN fashion_categories c ON f.category_id = c.category_id GROUP BY c.category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT b.brand_name, MIN(f.price) AS min_price FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id GROUP BY b.brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT b.brand_name, AVG(f.price) AS avg_price FROM fashion_items f JOIN fashion_brands b ON f.brand_id = b.id GROUP BY b.brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT c.category_name, SUM(f.price) AS total_price FROM fashion_items f JOIN fashion_categories c ON f.category_id = c.category_id GROUP BY c.category_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, competition.brand_name AS competitive_brand FROM fashion_items f CROSS JOIN (SELECT brand_name FROM fashion_brands WHERE brand_name != 'Brand1') AS competition;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, b.brand_name, c.category_name FROM fashion_items f LEFT JOIN fashion_brands b ON f.brand_id = b.id LEFT JOIN fashion_categories c ON f.category_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, b.brand_name, c.category_name FROM fashion_items f RIGHT JOIN fashion_brands b ON f.brand_id = b.id RIGHT JOIN fashion_categories c ON f.category_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    id INT PRIMARY KEY,\n    brand_name VARCHAR(50) NOT NULL,\n    founded_year INT\n);\n\n\nCREATE TABLE fashion_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE fashion_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(50) NOT NULL,\n    brand_id INT,\n    category_id INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (brand_id) REFERENCES fashion_brands(id),\n    FOREIGN KEY (category_id) REFERENCES fashion_categories(category_id)\n);\n\n### STATEMENT\n\nSELECT f.item_name, b.brand_name, c.category_name FROM fashion_items f FULL JOIN fashion_brands b ON f.brand_id = b.id FULL JOIN fashion_categories c ON f.category_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_category = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, brand_country FROM brands;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM brands WHERE brand_country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items ORDER BY item_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(*) AS total_items FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, sale_date FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, SUM(quantity_sold) AS total_quantity_sold FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, AVG(item_price) AS avg_price FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, quantity FROM fashion_items LEFT JOIN inventory ON fashion_items.item_id = inventory.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, brand_country, SUM(quantity) AS total_quantity FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT sale_id, item_name, quantity_sold, sale_date FROM sales JOIN fashion_items ON sales.item_id = fashion_items.item_id;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, MIN(item_price) AS min_price, MAX(item_price) AS max_price FROM fashion_items GROUP BY item_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(sale_id) AS total_sales, SUM(quantity_sold) AS total_items_sold FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN sales ON fashion_items.item_id = sales.item_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT item_category FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT AVG(item_price) AS avg_price FROM fashion_items;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, COUNT(inventory_id) AS total_inventory_items FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN inventory ON fashion_items.item_id = inventory.item_id GROUP BY brand_name;",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, sale_date FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id WHERE sale_date <= '2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM fashion_items",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price FROM fashion_items WHERE item_price > 100",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM fashion_items WHERE item_category = 'Shoes' AND item_price < 50",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, brand_country FROM brands",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, item_price, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, quantity_sold, sale_date FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, brand_name FROM fashion_items JOIN brands ON fashion_items.item_id = brands.brand_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, quantity_sold, sale_date FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, item_category, item_price FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, item_category, quantity FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN inventory ON fashion_items.item_id = inventory.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_price, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE quantity > 5",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, brand_country, item_category FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id WHERE item_category = 'Dresses'",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, item_name, item_category, item_price FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id WHERE brand_country = 'USA' AND item_price < 200",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, quantity_sold, sale_date FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, item_category, quantity_sold FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN sales ON fashion_items.item_id = sales.item_id",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, item_price, quantity_sold FROM fashion_items JOIN sales ON fashion_items.item_id = sales.item_id WHERE quantity_sold > 20",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, brand_country, item_price FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id WHERE item_price > 150",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category, quantity FROM fashion_items JOIN inventory ON fashion_items.item_id = inventory.item_id WHERE quantity > 3",
  "### TABLEDATA\n\nCREATE TABLE fashion_items (\n   item_id INT PRIMARY KEY,\n   item_name VARCHAR(50),\n   item_category VARCHAR(50),\n   item_price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n   brand_id INT PRIMARY KEY,\n   brand_name VARCHAR(50),\n   brand_country VARCHAR(50)\n);\n\nCREATE TABLE inventory (\n   inventory_id INT PRIMARY KEY,\n   item_id INT,\n   quantity INT,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\nCREATE TABLE sales (\n   sale_id INT PRIMARY KEY,\n   item_id INT,\n   quantity_sold INT,\n   sale_date DATE,\n   FOREIGN KEY (item_id) REFERENCES fashion_items(item_id)\n);\n\n### STATEMENT\n\nSELECT brand_name, item_name, item_category, item_price, quantity_sold FROM brands JOIN fashion_items ON brands.brand_id = fashion_items.item_id JOIN sales ON fashion_items.item_id = sales.item_id WHERE quantity_sold > 10",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT size_name FROM sizes;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT color_name FROM colors;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM brands;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands WHERE country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT size_name FROM sizes WHERE size_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT color_name FROM colors WHERE color_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category, price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands WHERE brand_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT size_name FROM sizes WHERE size_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT color_name FROM colors WHERE color_name LIKE '%blue%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands ORDER BY brand_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT size_name FROM sizes ORDER BY size_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT color_name FROM colors ORDER BY color_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands WHERE country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM sizes WHERE size_name = 'XL';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT color_name FROM colors WHERE color_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country FROM brands WHERE brand_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE category = 'Clothing' AND price < 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT COUNT(product_id) FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country, COUNT(brand_id) as total_products FROM brands JOIN inventory ON brands.brand_id = inventory.brand_id GROUP BY brand_name, country;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT p.product_name, b.brand_name, s.size_name, c.color_name FROM products p JOIN brands b ON p.product_id = b.brand_id JOIN sizes s ON p.product_id = s.size_id JOIN colors c ON p.product_id = c.color_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT category, AVG(price) as avg_price FROM products GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country, SUM(quantity) as total_inventory FROM brands JOIN inventory ON brands.brand_id = inventory.brand_id GROUP BY brand_name, country;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE product_id IN (SELECT product_id FROM products WHERE category = 'Electronics');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, brand_name, size_name, color_name, quantity FROM products p JOIN brands b ON p.product_id = b.brand_id JOIN sizes s ON p.product_id = s.size_id JOIN colors c ON p.product_id = c.color_id JOIN inventory i ON p.product_id = i.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT category, COUNT(*) as num_products FROM products GROUP BY category HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) as avg_quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE brands (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(100),\n    country VARCHAR(50)\n);\n\nCREATE TABLE sizes (\n    size_id INT PRIMARY KEY,\n    size_name VARCHAR(10)\n);\n\nCREATE TABLE colors (\n    color_id INT PRIMARY KEY,\n    color_name VARCHAR(20)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    brand_id INT,\n    size_id INT,\n    color_id INT,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT brand_name, country, MAX(quantity) as max_inventory FROM brands JOIN inventory ON brands.brand_id = inventory.brand_id GROUP BY brand_name, country;"
]