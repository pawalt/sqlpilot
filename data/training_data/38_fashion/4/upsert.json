[
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (1, 'Brand A', 101, 'Supplier 1', 'Production Details 1') ON DUPLICATE KEY UPDATE brand_name = 'Brand A', supplier_id = 101, supplier_name = 'Supplier 1', production_details = 'Production Details 1';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (2, 'Brand B', 102, 'Supplier 2', 'Production Details 2') ON DUPLICATE KEY UPDATE brand_name = 'Brand B', supplier_id = 102, supplier_name = 'Supplier 2', production_details = 'Production Details 2';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (3, 'Brand C', 103, 'Supplier 3', 'Production Details 3') ON DUPLICATE KEY UPDATE brand_name = 'Brand C', supplier_id = 103, supplier_name = 'Supplier 3', production_details = 'Production Details 3';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (4, 'Brand D', 104, 'Supplier 4', 'Production Details 4') ON DUPLICATE KEY UPDATE brand_name = 'Brand D', supplier_id = 104, supplier_name = 'Supplier 4', production_details = 'Production Details 4';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (5, 'Brand E', 105, 'Supplier 5', 'Production Details 5') ON DUPLICATE KEY UPDATE brand_name = 'Brand E', supplier_id = 105, supplier_name = 'Supplier 5', production_details = 'Production Details 5';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (6, 'Brand F', 106, 'Supplier 6', 'Production Details 6') ON DUPLICATE KEY UPDATE brand_name = 'Brand F', supplier_id = 106, supplier_name = 'Supplier 6', production_details = 'Production Details 6';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (7, 'Brand G', 107, 'Supplier 7', 'Production Details 7') ON DUPLICATE KEY UPDATE brand_name = 'Brand G', supplier_id = 107, supplier_name = 'Supplier 7', production_details = 'Production Details 7';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (8, 'Brand H', 108, 'Supplier 8', 'Production Details 8') ON DUPLICATE KEY UPDATE brand_name = 'Brand H', supplier_id = 108, supplier_name = 'Supplier 8', production_details = 'Production Details 8';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (9, 'Brand I', 109, 'Supplier 9', 'Production Details 9') ON DUPLICATE KEY UPDATE brand_name = 'Brand I', supplier_id = 109, supplier_name = 'Supplier 9', production_details = 'Production Details 9';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (10, 'Brand J', 110, 'Supplier 10', 'Production Details 10') ON DUPLICATE KEY UPDATE brand_name = 'Brand J', supplier_id = 110, supplier_name = 'Supplier 10', production_details = 'Production Details 10';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (11, 'Brand K', 111, 'Supplier 11', 'Production Details 11') ON DUPLICATE KEY UPDATE brand_name = 'Brand K', supplier_id = 111, supplier_name = 'Supplier 11', production_details = 'Production Details 11';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (12, 'Brand L', 112, 'Supplier 12', 'Production Details 12') ON DUPLICATE KEY UPDATE brand_name = 'Brand L', supplier_id = 112, supplier_name = 'Supplier 12', production_details = 'Production Details 12';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (13, 'Brand M', 113, 'Supplier 13', 'Production Details 13') ON DUPLICATE KEY UPDATE brand_name = 'Brand M', supplier_id = 113, supplier_name = 'Supplier 13', production_details = 'Production Details 13';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (14, 'Brand N', 114, 'Supplier 14', 'Production Details 14') ON DUPLICATE KEY UPDATE brand_name = 'Brand N', supplier_id = 114, supplier_name = 'Supplier 14', production_details = 'Production Details 14';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (15, 'Brand O', 115, 'Supplier 15', 'Production Details 15') ON DUPLICATE KEY UPDATE brand_name = 'Brand O', supplier_id = 115, supplier_name = 'Supplier 15', production_details = 'Production Details 15';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (16, 'Brand P', 116, 'Supplier 16', 'Production Details 16') ON DUPLICATE KEY UPDATE brand_name = 'Brand P', supplier_id = 116, supplier_name = 'Supplier 16', production_details = 'Production Details 16';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (17, 'Brand Q', 117, 'Supplier 17', 'Production Details 17') ON DUPLICATE KEY UPDATE brand_name = 'Brand Q', supplier_id = 117, supplier_name = 'Supplier 17', production_details = 'Production Details 17';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (18, 'Brand R', 118, 'Supplier 18', 'Production Details 18') ON DUPLICATE KEY UPDATE brand_name = 'Brand R', supplier_id = 118, supplier_name = 'Supplier 18', production_details = 'Production Details 18';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (19, 'Brand S', 119, 'Supplier 19', 'Production Details 19') ON DUPLICATE KEY UPDATE brand_name = 'Brand S', supplier_id = 119, supplier_name = 'Supplier 19', production_details = 'Production Details 19';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nINSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (20, 'Brand T', 120, 'Supplier 20', 'Production Details 20') ON DUPLICATE KEY UPDATE brand_name = 'Brand T', supplier_id = 120, supplier_name = 'Supplier 20', production_details = 'Production Details 20';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nUPSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (1, 'Brand A', 101, 'Supplier X', 'Details 1') ON DUPLICATE KEY UPDATE brand_name = 'Brand A Updated', supplier_name = 'Supplier X Updated', production_details = 'Details 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nUPSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (2, 'Brand B', 102, 'Supplier Y', 'Details 2') ON DUPLICATE KEY UPDATE brand_name = 'Brand B Updated', supplier_name = 'Supplier Y Updated', production_details = 'Details 2 Updated';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nUPSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_details) VALUES (3, 'Brand C', 103, 'Supplier Z', 'Details 3') ON DUPLICATE KEY UPDATE brand_name = 'Brand C Updated', supplier_name = 'Supplier Z Updated', production_details = 'Details 3 Updated';",
  "### TABLEDATA\n\nCREATE TABLE fashion_supply_chain ( \n    brand_id INT PRIMARY KEY, \n    brand_name VARCHAR(255), \n    supplier_id INT, \n    supplier_name VARCHAR(255), \n    production_details TEXT \n);\n\n### STATEMENT\n\nUPSERT INTO fashion_supply_chain (brand_id, brand_name, supplier_id, supplier_name, production_det...",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier A', supplier_location = 'Location A';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier B', supplier_location = 'Location B';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier C', supplier_location = 'Location C';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (4, 'Supplier D', 'Location D') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier D', supplier_location = 'Location D';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (5, 'Supplier E', 'Location E') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier E', supplier_location = 'Location E';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (6, 'Supplier F', 'Location F') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier F', supplier_location = 'Location F';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (7, 'Supplier G', 'Location G') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier G', supplier_location = 'Location G';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (8, 'Supplier H', 'Location H') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier H', supplier_location = 'Location H';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (9, 'Supplier I', 'Location I') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier I', supplier_location = 'Location I';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (10, 'Supplier J', 'Location J') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier J', supplier_location = 'Location J';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (11, 'Supplier K', 'Location K') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier K', supplier_location = 'Location K';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (12, 'Supplier L', 'Location L') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier L', supplier_location = 'Location L';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (13, 'Supplier M', 'Location M') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier M', supplier_location = 'Location M';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (14, 'Supplier N', 'Location N') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier N', supplier_location = 'Location N';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (15, 'Supplier O', 'Location O') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier O', supplier_location = 'Location O';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (16, 'Supplier P', 'Location P') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier P', supplier_location = 'Location P';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (17, 'Supplier Q', 'Location Q') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier Q', supplier_location = 'Location Q';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (18, 'Supplier R', 'Location R') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier R', supplier_location = 'Location R';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (19, 'Supplier S', 'Location S') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier S', supplier_location = 'Location S';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (20, 'Supplier T', 'Location T') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier T', supplier_location = 'Location T';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (1, 'Supplier A', 'Location A') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (2, 'Supplier B', 'Location B') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (3, 'Supplier C', 'Location C') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (4, 'Supplier D', 'Location D') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (5, 'Supplier E', 'Location E') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (6, 'Supplier F', 'Location F') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (7, 'Supplier G', 'Location G') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (8, 'Supplier H', 'Location H') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (9, 'Supplier I', 'Location I') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, supplier_location) VALUES (10, 'Supplier J', 'Location J') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = excluded.supplier_name, supplier_location = excluded.supplier_location;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (1, 1, '2022-01-01', 100) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (2, 2, '2022-01-02', 200) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (3, 3, '2022-01-03', 150) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (4, 4, '2022-01-04', 120) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (5, 5, '2022-01-05', 180) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (6, 6, '2022-01-06', 250) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (7, 7, '2022-01-07', 130) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (8, 8, '2022-01-08', 170) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (9, 9, '2022-01-09', 140) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name TEXT,\n    supplier_location TEXT\n);\n\nCREATE TABLE production_details (\n    production_id INT PRIMARY KEY,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, supplier_id, production_date, quantity) VALUES (10, 10, '2022-01-10', 160) ON CONFLICT (production_id) DO UPDATE SET supplier_id = excluded.supplier_id, production_date = excluded.production_date, quantity = excluded.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Gucci', 1921, 'Florence') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1921, headquarters_location = 'Florence';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 1', 'John Doe', 'supplier1@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'John Doe', email = 'supplier1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (1, 1, '2022-01-01', 100) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Louis Vuitton', 1854, 'Paris') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1854, headquarters_location = 'Paris';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 2', 'Jane Smith', 'supplier2@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'Jane Smith', email = 'supplier2@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (2, 2, '2022-01-02', 150) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Prada', 1913, 'Milan') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1913, headquarters_location = 'Milan';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 3', 'Mike Johnson', 'supplier3@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'Mike Johnson', email = 'supplier3@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (3, 3, '2022-01-03', 200) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Chanel', 1909, 'Paris') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1909, headquarters_location = 'Paris';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 4', 'Sarah Brown', 'supplier4@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'Sarah Brown', email = 'supplier4@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (4, 4, '2022-01-04', 120) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Versace', 1978, 'Milan') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1978, headquarters_location = 'Milan';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 5', 'David Lee', 'supplier5@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'David Lee', email = 'supplier5@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (5, 5, '2022-01-05', 180) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Dior', 1946, 'Paris') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1946, headquarters_location = 'Paris';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 6', 'Emily White', 'supplier6@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'Emily White', email = 'supplier6@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (6, 6, '2022-01-06', 90) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 90;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Burberry', 1856, 'London') ON CONFLICT (brand_name) DO UPDATE SET established_year = 1856, headquarters_location = 'London';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier 7', 'Chris Miller', 'supplier7@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = 'Chris Miller', email = 'supplier7@example.com';",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (7, 7, '2022-01-07', 110) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = 110;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand1', 2000, 'Location1') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier1', 'Person1', 'supplier1@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (1, 1, '2022-01-01', 100) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand2', 2005, 'Location2') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier2', 'Person2', 'supplier2@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (2, 2, '2022-01-02', 200) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand3', 2010, 'Location3') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier3', 'Person3', 'supplier3@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (3, 3, '2022-01-03', 300) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand4', 2015, 'Location4') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier4', 'Person4', 'supplier4@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (4, 4, '2022-01-04', 400) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand5', 2020, 'Location5') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier5', 'Person5', 'supplier5@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (5, 5, '2022-01-05', 500) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand6', 2025, 'Location6') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier6', 'Person6', 'supplier6@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (6, 6, '2022-01-06', 600) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand7', 2030, 'Location7') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier7', 'Person7', 'supplier7@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (7, 7, '2022-01-07', 700) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO fashion_brands (brand_name, established_year, headquarters_location) VALUES ('Brand8', 2035, 'Location8') ON CONFLICT (brand_name) DO UPDATE SET established_year = EXCLUDED.established_year, headquarters_location = EXCLUDED.headquarters_location;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_name, contact_person, email) VALUES ('Supplier8', 'Person8', 'supplier8@example.com') ON CONFLICT (supplier_name) DO UPDATE SET contact_person = EXCLUDED.contact_person, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE fashion_brands (\n    brand_id SERIAL PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL,\n    established_year INT NOT NULL,\n    headquarters_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL,\n    contact_person VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production_details (\n    production_id SERIAL PRIMARY KEY,\n    brand_id INT REFERENCES fashion_brands(brand_id),\n    supplier_id INT REFERENCES suppliers(supplier_id),\n    production_date DATE NOT NULL,\n    quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (brand_id, supplier_id, production_date, quantity) VALUES (8, 8, '2022-01-08', 800) ON CONFLICT (brand_id, supplier_id, production_date) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (1, 'Brand1', 'Location1') ON DUPLICATE KEY UPDATE brand_name = 'Brand1', location = 'Location1';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (1, 'Supplier1', 'Contact1', '1234567890') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier1', contact_person = 'Contact1', phone_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (1, 'Product1', 10.00, 1, 1) ON DUPLICATE KEY UPDATE product_name = 'Product1', unit_price = 10.00, brand_id = 1, supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (1, 1, '2022-01-01', 100) ON DUPLICATE KEY UPDATE product_id = 1, production_date = '2022-01-01', quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (2, 'Brand2', 'Location2') ON DUPLICATE KEY UPDATE brand_name = 'Brand2', location = 'Location2';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (2, 'Supplier2', 'Contact2', '2222222222') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier2', contact_person = 'Contact2', phone_number = '2222222222';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (2, 'Product2', 20.00, 2, 2) ON DUPLICATE KEY UPDATE product_name = 'Product2', unit_price = 20.00, brand_id = 2, supplier_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (2, 2, '2022-01-02', 200) ON DUPLICATE KEY UPDATE product_id = 2, production_date = '2022-01-02', quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (3, 'Brand3', 'Location3') ON DUPLICATE KEY UPDATE brand_name = 'Brand3', location = 'Location3';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (3, 'Supplier3', 'Contact3', '3333333333') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier3', contact_person = 'Contact3', phone_number = '3333333333';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (3, 'Product3', 30.00, 3, 3) ON DUPLICATE KEY UPDATE product_name = 'Product3', unit_price = 30.00, brand_id = 3, supplier_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (3, 3, '2022-01-03', 300) ON DUPLICATE KEY UPDATE product_id = 3, production_date = '2022-01-03', quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (4, 'Brand4', 'Location4') ON DUPLICATE KEY UPDATE brand_name = 'Brand4', location = 'Location4';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (4, 'Supplier4', 'Contact4', '4444444444') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier4', contact_person = 'Contact4', phone_number = '4444444444';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (4, 'Product4', 40.00, 4, 4) ON DUPLICATE KEY UPDATE product_name = 'Product4', unit_price = 40.00, brand_id = 4, supplier_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (4, 4, '2022-01-04', 400) ON DUPLICATE KEY UPDATE product_id = 4, production_date = '2022-01-04', quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (5, 'Brand5', 'Location5') ON DUPLICATE KEY UPDATE brand_name = 'Brand5', location = 'Location5';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (5, 'Supplier5', 'Contact5', '5555555555') ON DUPLICATE KEY UPDATE supplier_name = 'Supplier5', contact_person = 'Contact5', phone_number = '5555555555';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (5, 'Product5', 50.00, 5, 5) ON DUPLICATE KEY UPDATE product_name = 'Product5', unit_price = 50.00, brand_id = 5, supplier_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (5, 5, '2022-01-05', 500) ON DUPLICATE KEY UPDATE product_id = 5, production_date = '2022-01-05', quantity = 500;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (1, 'Brand A', 'Location A') ON DUPLICATE KEY UPDATE brand_name='Brand A', location='Location A';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (1, 'Supplier A', 'Contact A', '123-456-7890') ON DUPLICATE KEY UPDATE supplier_name='Supplier A', contact_person='Contact A', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (1, 'Product A', 100.00, 1, 1) ON DUPLICATE KEY UPDATE product_name='Product A', unit_price=100.00, brand_id=1, supplier_id=1;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (1, 1, '2022-01-01', 10) ON DUPLICATE KEY UPDATE product_id=1, production_date='2022-01-01', quantity=10;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (2, 'Brand B', 'Location B') ON DUPLICATE KEY UPDATE brand_name='Brand B', location='Location B';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (2, 'Supplier B', 'Contact B', '987-654-3210') ON DUPLICATE KEY UPDATE supplier_name='Supplier B', contact_person='Contact B', phone_number='987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (2, 'Product B', 150.00, 2, 2) ON DUPLICATE KEY UPDATE product_name='Product B', unit_price=150.00, brand_id=2, supplier_id=2;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (2, 2, '2022-01-02', 20) ON DUPLICATE KEY UPDATE product_id=2, production_date='2022-01-02', quantity=20;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (3, 'Brand C', 'Location C') ON DUPLICATE KEY UPDATE brand_name='Brand C', location='Location C';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (3, 'Supplier C', 'Contact C', '555-123-4567') ON DUPLICATE KEY UPDATE supplier_name='Supplier C', contact_person='Contact C', phone_number='555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (3, 'Product C', 200.00, 3, 3) ON DUPLICATE KEY UPDATE product_name='Product C', unit_price=200.00, brand_id=3, supplier_id=3;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (3, 3, '2022-01-03', 30) ON DUPLICATE KEY UPDATE product_id=3, production_date='2022-01-03', quantity=30;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brands (brand_id, brand_name, location) VALUES (4, 'Brand D', 'Location D') ON DUPLICATE KEY UPDATE brand_name='Brand D', location='Location D';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_person, phone_number) VALUES (4, 'Supplier D', 'Contact D', '777-999-8888') ON DUPLICATE KEY UPDATE supplier_name='Supplier D', contact_person='Contact D', phone_number='777-999-8888';",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, unit_price, brand_id, supplier_id) VALUES (4, 'Product D', 250.00, 4, 4) ON DUPLICATE KEY UPDATE product_name='Product D', unit_price=250.00, brand_id=4, supplier_id=4;",
  "### TABLEDATA\n\nCREATE TABLE brands (\n  brand_id INT PRIMARY KEY,\n  brand_name VARCHAR(50) NOT NULL,\n  location VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50) NOT NULL,\n  phone_number VARCHAR(15) NOT NULL\n);\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50) NOT NULL,\n  unit_price DECIMAL(10, 2) NOT NULL,\n  brand_id INT NOT NULL,\n  supplier_id INT NOT NULL\n);\n\nCREATE TABLE production_details (\n  production_id INT PRIMARY KEY,\n  product_id INT NOT NULL,\n  production_date DATE NOT NULL,\n  quantity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production_details (production_id, product_id, production_date, quantity) VALUES (4, 4, '2022-01-04', 40) ON DUPLICATE KEY UPDATE product_id=4, production_date='2022-01-04', quantity=40;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (1, 'Brand 1') ON CONFLICT (brand_id) DO UPDATE SET brand_name = 'Brand 1';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (1, 'Product 1', 1) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1', brand_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (1, 'Supplier 1') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier 1';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (1, 1, 1, '2022-01-01', 100) ON CONFLICT (production_id) DO UPDATE SET product_id = 1, supplier_id = 1, production_date = '2022-01-01', quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (1, 'Location 1') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_location = 'Location 1';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (2, 'Brand 2') ON CONFLICT (brand_id) DO UPDATE SET brand_name = 'Brand 2';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (2, 'Product 2', 2) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 2', brand_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (2, 'Supplier 2') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier 2';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (2, 2, 2, '2022-01-02', 200) ON CONFLICT (production_id) DO UPDATE SET product_id = 2, supplier_id = 2, production_date = '2022-01-02', quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (2, 'Location 2') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_location = 'Location 2';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (3, 'Brand 3') ON CONFLICT (brand_id) DO UPDATE SET brand_name = 'Brand 3';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (3, 'Product 3', 3) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 3', brand_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (3, 'Supplier 3') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier 3';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (3, 3, 3, '2022-01-03', 300) ON CONFLICT (production_id) DO UPDATE SET product_id = 3, supplier_id = 3, production_date = '2022-01-03', quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (3, 'Location 3') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_location = 'Location 3';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (4, 'Brand 4') ON CONFLICT (brand_id) DO UPDATE SET brand_name = 'Brand 4';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (4, 'Product 4', 4) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 4', brand_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (4, 'Supplier 4') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier 4';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (4, 4, 4, '2022-01-04', 400) ON CONFLICT (production_id) DO UPDATE SET product_id = 4, supplier_id = 4, production_date = '2022-01-04', quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (4, 'Location 4') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_location = 'Location 4';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (1, 'Brand1') ON DUPLICATE KEY UPDATE brand_name='Brand1_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO brand (brand_id, brand_name) VALUES (2, 'Brand2') ON DUPLICATE KEY UPDATE brand_name='Brand2_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (1, 'Product1', 1) ON DUPLICATE KEY UPDATE product_name='Product1_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO product (product_id, product_name, brand_id) VALUES (2, 'Product2', 1) ON DUPLICATE KEY UPDATE product_name='Product2_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (1, 'Supplier1') ON DUPLICATE KEY UPDATE supplier_name='Supplier1_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO supplier (supplier_id, supplier_name) VALUES (2, 'Supplier2') ON DUPLICATE KEY UPDATE supplier_name='Supplier2_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (1, 1, 1, '2023-01-01', 100) ON DUPLICATE KEY UPDATE production_date='2023-01-01_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO production (production_id, product_id, supplier_id, production_date, quantity) VALUES (2, 2, 2, '2023-01-02', 200) ON DUPLICATE KEY UPDATE production_date='2023-01-02_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (1, 'Location1') ON DUPLICATE KEY UPDATE warehouse_location='Location1_updated';",
  "### TABLEDATA\n\nCREATE TABLE brand (\n    brand_id INT PRIMARY KEY,\n    brand_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    brand_id INT,\n    FOREIGN KEY (brand_id) REFERENCES brand(brand_id)\n);\n\nCREATE TABLE supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE production (\n    production_id INT PRIMARY KEY,\n    product_id INT,\n    supplier_id INT,\n    production_date DATE,\n    quantity INT,\n    FOREIGN KEY (product_id) REFERENCES product(product_id),\n    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)\n);\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_location VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, warehouse_location) VALUES (2, 'Location2') ON DUPLICATE KEY UPDATE warehouse_location='Location2_updated';"
]