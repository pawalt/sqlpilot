[
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_behavior_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, purchase_history FROM customer_behavior_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gender, age FROM customer_behavior_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT age, last_interaction FROM customer_behavior_analysis;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age <= 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_behavior_analysis WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, last_interaction FROM customer_behavior_analysis WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis ORDER BY last_interaction ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_behavior_analysis ORDER BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, purchase_history FROM customer_behavior_analysis WHERE purchase_history LIKE '%item1%';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, age FROM customer_behavior_analysis WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gender, last_interaction FROM customer_behavior_analysis WHERE last_interaction > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age < 25 OR gender = 'Others';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age > 40 AND gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age > 30 AND gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE last_interaction < NOW() - INTERVAL 1 DAY;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, purchase_history FROM customer_behavior_analysis WHERE gender = 'Male' AND age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, gender FROM customer_behavior_analysis WHERE last_interaction BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE age < 18 OR gender = 'Others';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE last_interaction > '2022-06-01' AND last_interaction < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, age FROM customer_behavior_analysis WHERE age >= 40 AND gender IN ('Male', 'Others');",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE purchase_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE gender = 'Female' ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, gender FROM customer_behavior_analysis WHERE age < 25 AND gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE gender = 'Male' OR gender = 'Others';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, purchase_history FROM customer_behavior_analysis WHERE purchase_history LIKE '%shoes%';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE age > 25 AND age < 35;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, gender FROM customer_behavior_analysis WHERE last_interaction > '2022-01-01' ORDER BY last_interaction ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE gender IN ('Male', 'Female') AND age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE customer_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_id, age FROM customer_behavior_analysis WHERE last_interaction > '2022-06-30' ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM customer_behavior_analysis WHERE customer_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior_analysis (\n  customer_id INT,\n  customer_name VARCHAR(50),\n  purchase_history TEXT,\n  gender ENUM('Male', 'Female', 'Others'),\n  age INT,\n  last_interaction TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_behavior_analysis WHERE customer_id = 54321;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, product_name, price FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT product_name, purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, product_name, price, purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers RIGHT JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers FULL JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE purchases.purchase_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id WHERE customers.gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name AS customer_name, purchases.product_name AS purchased_product, purchases.price AS purchased_price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id ORDER BY customers.name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name, purchases.price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id ORDER BY purchases.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, COUNT(purchases.purchase_id) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.name, AVG(purchases.price) AS average_price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, age FROM customers WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers c JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name FROM customers c INNER JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name AS customer_name, p.product_name AS purchased_product FROM customers c INNER JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, c.age, SUM(p.price) AS total_spent FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name, c.age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(p.product_name) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.price) AS avg_price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(p.price) AS max_price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(p.price) AS min_price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.gender = 'Male' AND p.price > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.purchase_date FROM customers c JOIN purchases p ON c.customer_id = p.customer_id ORDER BY p.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(*) AS total_purchases FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name HAVING total_purchases > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.price) AS total_spent FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.age > 40 GROUP BY c.name HAVING total_spent > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(p.price) AS min_price, MAX(p.price) AS max_price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name HAVING max_price - min_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.price) AS avg_price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name HAVING avg_price > 75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    purchase_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, p.price FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE c.age > 30 AND p.price > 50 ORDER BY p.price DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, age FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, order_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT product_id, name, category, price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE price < 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name, p.name FROM Customers c JOIN Products p ON c.customer_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT p.name, o.total_amount FROM Products p JOIN Orders o ON p.product_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name AS customer_name, o.total_amount AS order_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT p.name AS product_name, o.order_date AS order_date FROM Products p JOIN Orders o ON p.product_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.total_amount FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_amount) AS total_spent FROM Orders GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT name, category FROM Products WHERE price > 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(o.total_amount) AS total_spent FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT p.name, o.total_amount FROM Products p JOIN Orders o ON p.product_id = o.order_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.total_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE o.total_amount > 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name AS customer_name, p.name AS product_name, o.total_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Products p ON o.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT name, email, age FROM Customers WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE customer_id IN (SELECT customer_id FROM Customers WHERE age > 40);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE category = 'Electronics' AND price BETWEEN 500.00 AND 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT c.name AS customer_name, SUM(o.total_amount) AS total_spent FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name HAVING total_spent > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT category, AVG(price) AS avg_price FROM Products GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers c RIGHT JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id WHERE o.total_amount IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10,2)\n);\n\n### STATEMENT\n\nSELECT AVG(total_amount) AS avg_amount FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date, purchase_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT event_type, event_date, event_details FROM analytics;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT purchase_id, customer_id, product_id, purchase_date, purchase_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, category, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT event_id, customer_id, event_type, event_date, event_details FROM analytics;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email, phone_number FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date, purchase_amount FROM purchases WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT event_type, event_date, event_details FROM analytics WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM customers WHERE last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date, purchase_amount FROM purchases WHERE purchase_amount > 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT event_id, customer_id, event_type, event_date, event_details FROM analytics WHERE event_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email, phone_number FROM customers WHERE first_name = 'John' AND last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE price BETWEEN 50.00 AND 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date, purchase_amount FROM purchases WHERE customer_id = 4 AND purchase_amount < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE first_name = 'John' AND last_name = 'Doe'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM customers WHERE email LIKE '%@gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE purchase_amount > 1000)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM purchases WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, product_id, SUM(purchase_amount) AS total_purchases FROM purchases GROUP BY customer_id, product_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products WHERE price > 100",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT event_id, customer_id, event_type FROM analytics WHERE event_date > '2021-06-30'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_events FROM analytics GROUP BY customer_id HAVING total_events > 5",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, email, purchases.purchase_id, purchase_date, purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, email, products.product_name, category, price FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id JOIN products ON purchases.product_id = products.product_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, email, purchases.purchase_id, purchase_date, purchase_amount, event_id, event_type, event_date FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id LEFT JOIN analytics ON customers.customer_id = analytics.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, COUNT(purchases.purchase_id) AS total_purchases FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, MAX(purchase_amount) AS max_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT customers.customer_id, first_name, last_name, AVG(purchase_amount) AS avg_purchase_amount FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id GROUP BY customers.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, SUM(purchase_amount) AS total_sales FROM products JOIN purchases ON products.product_id = purchases.product_id GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT category, SUM(purchase_amount) AS total_sales FROM products JOIN purchases ON products.product_id = purchases.product_id GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT category, COUNT(*) AS total_products FROM products GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT category, AVG(price) AS avg_price FROM products GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  first_name VARCHAR(50),\n  last_name VARCHAR(50),\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n)\n\nCREATE TABLE purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date DATE,\n  purchase_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(100),\n  category VARCHAR(50),\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE analytics (\n  event_id INT PRIMARY KEY,\n  customer_id INT,\n  event_type VARCHAR(50),\n  event_date DATETIME,\n  event_details TEXT\n)\n\n### STATEMENT\n\nSELECT category, MAX(price) AS max_price FROM products GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age FROM Customers WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM Orders WHERE status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE brand='Nike';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age, email FROM Customers WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, total_amount, status FROM Orders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age FROM Customers WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, total_amount, status FROM Orders WHERE total_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age, gender FROM Customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM Orders WHERE status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age, email FROM Customers WHERE gender='Non-Binary';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT feedback_text, rating FROM Feedback WHERE feedback_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE brand='Adidas';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, age FROM Customers WHERE gender='Female' AND age < 40;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM Orders WHERE total_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM Customers WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, order_date, total_amount FROM Orders WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, product_id, quantity FROM Transactions WHERE transaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, feedback_text, rating FROM Customers JOIN Feedback ON Customers.customer_id = Feedback.customer_id WHERE rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, customer_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.total_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, product_name, category FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Transactions ON Orders.order_id = Transactions.order_id JOIN Products ON Transactions.product_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, feedback_text, feedback_date FROM Customers JOIN Feedback ON Customers.customer_id = Feedback.customer_id WHERE feedback_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, price, brand FROM Products WHERE brand = 'Apple';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, order_date, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, feedback_text FROM Orders JOIN Feedback ON Orders.customer_id = Feedback.customer_id WHERE Orders.status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, feedback_text, rating FROM Customers JOIN Feedback ON Customers.customer_id = Feedback.customer_id WHERE rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT order_id, product_id, quantity FROM Transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-04-30';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    price DECIMAL(10, 2),\n    brand VARCHAR(50)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT,\n    feedback_date DATE\n);}\n\n### STATEMENT\n\nSELECT customer_name, email, feedback_date FROM Customers JOIN Feedback ON Customers.customer_id = Feedback.customer_id WHERE feedback_text LIKE '%poor%';"
]