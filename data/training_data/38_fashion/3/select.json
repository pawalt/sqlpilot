[
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE gender = 'M';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE gender = 'F';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE date_of_birth > '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE joined_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY date_of_birth DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, date_of_birth FROM customers WHERE gender = 'M' ORDER BY joined_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE date_of_birth BETWEEN '1980-01-01' AND '1990-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE gender = 'F' OR gender = 'M';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, gender FROM customers WHERE joined_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers WHERE joined_date >= '2021-01-01' AND joined_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE date_of_birth <= '1975-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE gender = 'M' AND address LIKE '%Avenue%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE date_of_birth > '2000-01-01' AND gender = 'F';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM customers WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, gender FROM customers WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE date_of_birth > '1990-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE gender = 'M' AND address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1001",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE joined_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, gender FROM customers WHERE phone_number LIKE '%555%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE gender = 'F' AND date_of_birth < '1980-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE gender = 'M' AND address NOT LIKE '%Avenue%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE email NOT LIKE '%yahoo.com'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, joined_date FROM customers WHERE gender = 'F' AND phone_number <> '1234567890'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE joined_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE date_of_birth BETWEEN '1970-01-01' AND '1979-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE gender = 'M' AND email LIKE '%hotmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, date_of_birth FROM customers WHERE address LIKE '%Lane%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE gender = 'F' AND joined_date < '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE joined_date < '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id <> 1002",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, gender FROM customers WHERE address LIKE '%Building%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20),\n    address VARCHAR(255),\n    date_of_birth DATE,\n    gender CHAR(1),\n    joined_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, date_of_birth FROM customers WHERE phone_number LIKE '%123%'",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM customer_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, age FROM customer_preferences WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, purchase_date, purchase_amount FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT item_name, item_category FROM purchase_history WHERE purchase_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, age, preferred_color FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, item_name, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount FROM customer_preferences INNER JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE purchase_amount > 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, age, item_name, item_category FROM customer_preferences LEFT JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount FROM customer_preferences RIGHT JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE age < 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount FROM customer_preferences FULL JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount FROM customer_preferences JOIN purchase_history USING (customer_id);",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_amount FROM (SELECT customer_id, customer_name FROM customer_preferences) AS CP JOIN (SELECT customer_id, purchase_amount FROM purchase_history) AS PH ON CP.customer_id = PH.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_amount FROM customer_preferences UNION SELECT customer_id, customer_name, purchase_amount FROM purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT item_category, SUM(purchase_amount) AS total_amount FROM purchase_history GROUP BY item_category;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(purchase_amount) AS total_spent FROM purchase_history GROUP BY customer_id HAVING total_spent > 500;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount, item_name, item_category FROM customer_preferences CROSS JOIN purchase_history;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_date, purchase_amount, item_name, item_category FROM customer_preferences CROSS JOIN purchase_history WHERE purchase_amount > 200;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_amount FROM customer_preferences WHERE customer_id IN (SELECT customer_id FROM purchase_history WHERE purchase_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age FROM customer_preferences WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_preferences WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, purchase_date FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, item_name, purchase_date FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE purchase_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT item_category, COUNT(item_category) AS category_count FROM purchase_history GROUP BY item_category;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(purchase_amount) AS total_spent FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(age) AS average_age FROM customer_preferences GROUP BY customer_name HAVING AVG(age) > 30;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, age, preferred_color FROM customer_preferences WHERE age >= 30 AND preferred_color IN ('Blue', 'Green', 'Red');",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(purchase_amount) AS highest_purchase_amount FROM purchase_history GROUP BY customer_id HAVING MAX(purchase_amount) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age FROM customer_preferences WHERE customer_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age FROM customer_preferences WHERE age > 40 AND gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, item_category, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE purchase_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_date, item_name, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id ORDER BY purchase_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_date, item_name, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id ORDER BY purchase_date ASC, purchase_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, item_category, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE purchase_date >= '2022-01-01' AND purchase_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE purchase_amount = (SELECT MAX(purchase_amount) FROM purchase_history);",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_amount FROM customer_preferences JOIN purchase_history ON customer_preferences.customer_id = purchase_history.customer_id WHERE customer_id IN (SELECT customer_id FROM purchase_history WHERE purchase_date = '2022-06-15');",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_amount FROM customer_preferences WHERE customer_id NOT IN (SELECT customer_id FROM purchase_history);",
  "### TABLEDATA\n\nCREATE TABLE customer_preferences (\n\tcustomer_id INT PRIMARY KEY,\n\tcustomer_name VARCHAR(50),\n\tgender VARCHAR(10),\n\tage INT,\n\tpreferred_color VARCHAR(20)\n);\n\nCREATE TABLE purchase_history (\n\tpurchase_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tpurchase_date DATE,\n\titem_name VARCHAR(50),\n\titem_category VARCHAR(20),\n\tpurchase_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, gender, age, purchase_amount FROM customer_preferences WHERE customer_id IN (SELECT customer_id FROM purchase_history GROUP BY customer_id HAVING COUNT(customer_id) > 1);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT name, age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT email FROM customers WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_id, amount FROM purchases WHERE product_name = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT purchase_date FROM purchases WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT favorite_color, favorite_brand FROM preferences WHERE shoe_size = '9';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.name, purchases.product_name FROM customers JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.name, preferences.favorite_color FROM customers LEFT JOIN preferences ON customers.customer_id = preferences.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.name, purchases.amount FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT name, age FROM customers WHERE gender = 'Male' AND age > 25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM purchases WHERE purchase_date BETWEEN '2021-01-01' AND '2021-03-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(amount) AS total_amount FROM purchases GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_name) AS total_products FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT favorite_color FROM preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT name, age FROM customers WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_id, name, email FROM customers WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM purchases WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM purchases WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM purchases JOIN customers ON purchases.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers LEFT JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, p.product_name FROM customers c JOIN purchases p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, p.product_name FROM customers c JOIN purchases p ON c.customer_id = p.customer_id WHERE p.amount > 200;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, pr.favorite_color FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, p.purchase_date, pr.favorite_brand FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN preferences pr ON c.customer_id = pr.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, pr.favorite_brand, p.product_name FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN preferences pr ON c.customer_id = pr.customer_id WHERE p.amount > 150;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name AS CustomerName, COUNT(p.customer_id) AS NumPurchases FROM customers c LEFT JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, p.purchase_date, SUM(p.amount) AS TotalAmount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name, p.purchase_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, p.purchase_date, AVG(p.amount) AS AvgAmount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name, p.purchase_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, pr.favorite_color, pr.shoe_size FROM customers c JOIN preferences pr ON c.customer_id = pr.customer_id WHERE pr.favorite_color = 'Blue';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, pr.favorite_brand, p.product_name FROM customers c JOIN purchases p ON c.customer_id = p.customer_id JOIN preferences pr ON c.customer_id = pr.customer_id WHERE pr.shoe_size = '10';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, MAX(p.amount) AS MaxAmount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    age INT,\n    gender VARCHAR(10)\n)\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    amount DECIMAL(10, 2),\n    product_name VARCHAR(100),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\nCREATE TABLE preferences (\n    customer_id INT,\n    favorite_color VARCHAR(50),\n    favorite_brand VARCHAR(50),\n    shoe_size VARCHAR(10),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT c.name, MIN(p.amount) AS MinAmount FROM customers c JOIN purchases p ON c.customer_id = p.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT purchase_date, total_amount FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_preferences;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT preference FROM customer_preferences WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, products.product_name FROM customers JOIN customer_preferences ON customers.customer_id = customer_preferences.customer_id JOIN products ON customer_preferences.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM purchases WHERE total_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, product_name FROM customers JOIN customer_preferences ON customers.customer_id = customer_preferences.customer_id JOIN products ON customer_preferences.product_id = products.product_id WHERE products.category = 'Clothing';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE category = 'Electronics' AND price < 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM purchases WHERE total_amount > 500);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id IN (SELECT customer_id FROM customer_preferences WHERE preference = 'Favorite');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, address FROM customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, p.price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(p.price) AS total_spent FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(cp.product_id) AS number_of_preferences FROM customers c LEFT JOIN customer_preferences cp ON c.customer_id = cp.customer_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(p.price) AS avg_price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(p.price) AS min_price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(p.price) AS max_price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(p.price) AS avg_price, MIN(p.price) AS min_price, MAX(p.price) AS max_price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_id = 1 GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT p.category, AVG(p.price) AS avg_price FROM products p GROUP BY p.category HAVING AVG(p.price) > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(p.price) AS total_spent FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id GROUP BY c.customer_name HAVING total_spent > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(cp.product_id) AS number_of_preferences FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id GROUP BY c.customer_name HAVING COUNT(cp.product_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(cp.product_id) AS number_of_preferences, AVG(p.price) AS avg_price FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id GROUP BY c.customer_name HAVING COUNT(cp.product_id) > 2 AND AVG(p.price) > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, cp.preference FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_name LIKE '%Smith%' AND cp.preference = 'Favorite';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, cp.preference FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_name LIKE '%Brown%' OR cp.preference = 'Standard';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, cp.preference FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_name LIKE '%Williams%' AND cp.preference = 'Preferred';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    total_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    price DECIMAL(10, 2),\n    category VARCHAR(50)\n);\n\n\nCREATE TABLE customer_preferences (\n    customer_id INT,\n    product_id INT,\n    preference VARCHAR(255),\n    PRIMARY KEY (customer_id, product_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, cp.preference FROM customers c INNER JOIN customer_preferences cp ON c.customer_id = cp.customer_id INNER JOIN products p ON cp.product_id = p.product_id WHERE c.customer_name LIKE '%Johnson%' OR cp.preference = 'Standard';",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT category, stock_quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_id, customer_id, purchase_count FROM campaign_results;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT id, name, email, gender, age, location FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT product_id, product_name, category, price, stock_quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT purchase_id, customer_id, product_id, purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_id, campaign_name, start_date, end_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT result_id, campaign_id, customer_id, purchase_count FROM campaign_results;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT name, gender, age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_name, start_date, end_date FROM campaigns;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT customer_id, purchase_count FROM campaign_results;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT id, email, location FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT product_id, stock_quantity FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT purchase_id, product_id FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_id, customer_id FROM campaign_results;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE age > 30 AND gender = 'F';",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, pr.purchase_date FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE pr.purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT SUM(price * stock_quantity) AS total_revenue FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT campaign_name, COUNT(customer_id) AS total_customers FROM campaigns JOIN campaign_results ON campaigns.campaign_id = campaign_results.campaign_id GROUP BY campaign_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, COUNT(purchase_id) AS total_purchases FROM customers c JOIN purchases pr ON c.id = pr.customer_id GROUP BY c.name HAVING total_purchases > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.id, c.name, COUNT(*) AS total_purchases FROM customers c JOIN purchases pr ON c.id = pr.customer_id GROUP BY c.id, c.name HAVING total_purchases >= 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT pr.purchase_date, p.product_name, COUNT(p.product_name) AS total_purchases FROM purchases pr JOIN products p ON pr.product_id = p.product_id GROUP BY pr.purchase_date, p.product_name ORDER BY total_purchases DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.price) AS total_spent FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.price) AS average_purchase FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name ORDER BY average_purchase DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, COUNT(DISTINCT pr.product_id) AS unique_products FROM customers c JOIN purchases pr ON c.id = pr.customer_id GROUP BY c.name HAVING unique_products > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.gender, AVG(pr.purchase_count) AS average_purchase_count FROM customers c JOIN campaign_results cr ON c.id = cr.customer_id GROUP BY c.gender ORDER BY average_purchase_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, COUNT(pr.purchase_id) AS total_purchases, AVG(p.price) AS average_price FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name HAVING total_purchases > 2 ORDER BY average_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, MAX(p.price) AS max_purchase_price FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, MIN(p.price) AS min_purchase_price FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age, MIN(age) AS min_age, AVG(age) AS average_age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT EXTRACT(YEAR FROM pr.purchase_date) AS purchase_year, COUNT(*) AS total_purchases FROM purchases pr GROUP BY purchase_year;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT pr.purchase_date, COUNT(*) AS total_purchases FROM purchases pr WHERE pr.purchase_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY pr.purchase_date;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, p.product_name, pr.purchase_date FROM customers c JOIN purchases pr ON c.id = pr.customer_id JOIN products p ON pr.product_id = p.product_id WHERE pr.purchase_date >= '2022-01-01' AND pr.purchase_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.price * pr.purchase_count) AS total_spent FROM customers c JOIN campaign_results cr ON c.customer_id = c.id JOIN campaigns cmp ON cr.campaign_id = cmp.campaign_id JOIN products p ON cr.customer_id = p.product_id GROUP BY c.name ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (id INT, name VARCHAR(50), email VARCHAR(50), gender CHAR(1), age INT, location VARCHAR(100));\n\n\nCREATE TABLE products (product_id INT, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10,2), stock_quantity INT);\n\n\nCREATE TABLE purchases (purchase_id INT, customer_id INT, product_id INT, purchase_date DATE);\n\n\nCREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(100), start_date DATE, end_date DATE);\n\n\nCREATE TABLE campaign_results (result_id INT, campaign_id INT, customer_id INT, purchase_count INT);\n\n### STATEMENT\n\nSELECT c.name, AVG(age) AS average_age, COUNT(purchase_id) AS total_purchases FROM customers c JOIN purchases pr ON c.id = pr.customer_id GROUP BY c.name HAVING average_age > 40 AND total_purchases > 1;"
]