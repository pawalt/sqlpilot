[
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT * FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, created_date FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT * FROM legal_contracts WHERE version_number > 5;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, last_updated_date FROM legal_contracts WHERE version_number = 3;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_text FROM legal_contracts WHERE created_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT * FROM legal_contracts WHERE CONCAT(contract_name, ' - Version ', version_number) = 'Contract A - Version 2';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM legal_contracts WHERE contract_name LIKE 'Contract%';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, last_updated_date FROM legal_contracts WHERE created_date < '2022-03-15' ORDER BY last_updated_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM legal_contracts WHERE version_number BETWEEN 1 AND 3;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_contracts FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, COUNT(*) AS contract_count FROM legal_contracts GROUP BY contract_name;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT MAX(version_number) AS max_version FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, MIN(version_number) AS min_version FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT AVG(version_number) AS avg_version FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT DISTINCT contract_name FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_text FROM legal_contracts WHERE contract_text LIKE '%confidential%';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, created_date FROM legal_contracts WHERE EXTRACT(MONTH FROM created_date) = 11;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, DATE_PART('year', created_date) AS creation_year FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, LAST_VALUE(version_number) OVER() AS latest_version FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT * FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM legal_contracts WHERE version_number > 5;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM legal_contracts WHERE version_number BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM legal_contracts WHERE contract_name LIKE '%agreement%';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM legal_contracts WHERE created_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM legal_contracts WHERE last_updated_date < '2022-01-01' ORDER BY last_updated_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, created_date FROM legal_contracts WHERE contract_name IN ('NDA', 'MOU', 'Service Agreement');",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_name, version_number FROM legal_contracts WHERE version_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number FROM legal_contracts WHERE version_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number, created_date FROM legal_contracts WHERE version_number IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT AVG(version_number) FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT MAX(version_number) FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT MIN(version_number) FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT SUM(version_number) FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, created_date, version_number FROM legal_contracts ORDER BY created_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number FROM legal_contracts WHERE last_updated_date BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number FROM legal_contracts WHERE contract_text ILIKE '%confidential%';",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT DISTINCT contract_name FROM legal_contracts;",
  "### TABLEDATA\n\nCREATE TABLE legal_contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name VARCHAR(255),\n    contract_text TEXT,\n    version_number INT,\n    created_date TIMESTAMP,\n    last_updated_date TIMESTAMP,\n    UNIQUE (contract_name)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number, created_date, last_updated_date FROM legal_contracts WHERE version_number = (SELECT MAX(version_number) FROM legal_contracts);",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM contracts WHERE contract_version > 3;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version FROM contracts WHERE contract_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name AS name, contract_content AS content FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name, contract_version FROM contracts WHERE contract_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM contracts JOIN contract_versions ON contracts.contract_id = contract_versions.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_id, cv.version_id FROM contracts c JOIN contract_versions cv ON c.contract_id = cv.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_name, cv.version_content FROM contracts c INNER JOIN contract_versions cv ON c.contract_id = cv.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_name, cv.creation_date FROM contracts c INNER JOIN contract_versions cv ON c.contract_id = cv.contract_id WHERE c.contract_version = 2;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_id, cv.version_content FROM contracts c LEFT JOIN contract_versions cv ON c.contract_id = cv.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_name, cv.creation_date FROM contracts c LEFT JOIN contract_versions cv ON c.contract_id = cv.contract_id WHERE c.contract_version < 2;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_name, cv.version_content FROM contracts c RIGHT JOIN contract_versions cv ON c.contract_id = cv.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT c.contract_name, cv.creation_date FROM contracts c RIGHT JOIN contract_versions cv ON c.contract_id = cv.contract_id WHERE cv.version_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(contract_version) AS avg_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(contract_version) AS max_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(contract_version) AS min_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_contracts FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, COUNT(version_id) AS total_versions FROM contract_versions GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, MAX(contract_version) FROM contracts GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, creation_date FROM contracts CROSS JOIN contract_versions;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM contracts WHERE contract_version > 1;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_content FROM contracts WHERE contract_version = 3 AND contract_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE contract_version >= 2 AND contract_version <= 4;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version FROM contracts WHERE contract_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_content, contract_version FROM contracts WHERE contract_content LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version FROM contracts WHERE contract_name LIKE 'A%' AND contract_version < 3;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version FROM contracts ORDER BY contract_version DESC;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT contract_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contracts.contract_name, contract_versions.version_content FROM contracts INNER JOIN contract_versions ON contracts.contract_id = contract_versions.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, version_content, creation_date FROM contract_versions WHERE version_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(contract_id) AS num_contracts FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(contract_version) AS avg_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, MAX(contract_version) AS max_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, MIN(contract_version) AS min_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, SUM(contract_version) AS total_version FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version, COUNT(contract_versions.version_id) AS num_versions FROM contracts LEFT JOIN contract_versions ON contracts.contract_id = contract_versions.contract_id GROUP BY contract_name;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version, COUNT(contract_versions.version_id) AS num_versions FROM contracts LEFT JOIN contract_versions ON contracts.contract_id = contract_versions.contract_id GROUP BY contract_name HAVING COUNT(contract_versions.version_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version, creation_date FROM contracts JOIN contract_versions ON contracts.contract_id = contract_versions.contract_id WHERE creation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM contracts WHERE contract_id = ANY (SELECT contract_id FROM contract_versions WHERE version_id > 10);",
  "### TABLEDATA\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  contract_name VARCHAR(255) NOT NULL,\n  contract_content TEXT NOT NULL,\n  contract_version INT NOT NULL\n);\n\nCREATE TABLE contract_versions (\n  version_id INT PRIMARY KEY,\n  contract_id INT NOT NULL,\n  version_content TEXT NOT NULL,\n  creation_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT contract_name, contract_version FROM contracts WHERE contract_name IS NULL AND contract_version IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT * FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_id, contract_name FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreement_id, agreement_name, agreement_text FROM agreements;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE version_number > 5;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_name, created_at FROM contracts WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT * FROM agreements WHERE created_at BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_id, contract_name, version_number FROM contracts WHERE version_number = 3;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreement_name FROM agreements WHERE agreement_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_id, contract_name, created_at FROM contracts ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreement_name, agreement_text FROM agreements WHERE version_number < 3;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT COUNT(*) FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT MAX(version_number) FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT AVG(version_number) FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_name, version_number FROM contracts WHERE contract_name LIKE '%lease%';",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM contracts WHERE contract_name LIKE 'abc%';",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT DISTINCT version_number FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreement_name, version_number, created_at FROM agreements ORDER BY version_number ASC;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contract_name FROM contracts WHERE version_number IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreement_id, created_at FROM agreements WHERE agreement_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT * FROM versions WHERE created_at < '2022-02-01' AND version_number = 1;",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contracts.contract_name, agreements.agreement_text FROM contracts JOIN agreements ON contracts.contract_id = agreements.agreement_id WHERE contracts.version_number > 1",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreements.agreement_text, versions.created_at FROM agreements LEFT JOIN versions ON agreements.agreement_id = versions.document_id",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contracts.contract_name, agreements.version_number, versions.version_number FROM contracts INNER JOIN agreements ON contracts.contract_id = agreements.agreement_id INNER JOIN versions ON agreements.agreement_id = versions.document_id WHERE contracts.created_at > '2021-01-01' AND agreements.created_at < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT * FROM contracts, agreements, versions WHERE contracts.contract_id = agreements.agreement_id AND agreements.agreement_id = versions.document_id",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreements.agreement_name, versions.created_at FROM agreements INNER JOIN versions ON agreements.agreement_id = versions.document_id WHERE versions.version_number = 1",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contracts.contract_name, agreements.agreement_text FROM contracts LEFT JOIN agreements ON contracts.contract_id = agreements.agreement_id WHERE contracts.contract_name LIKE '%legal%'",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT DISTINCT agreements.agreement_text, contracts.created_at FROM agreements, contracts WHERE agreements.agreement_id = contracts.contract_id AND contracts.version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreements.agreement_text, versions.created_at FROM agreements RIGHT JOIN versions ON agreements.agreement_id = versions.document_id WHERE versions.version_number > 1",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT contracts.contract_name, agreements.agreement_text, versions.version_number FROM contracts JOIN agreements ON contracts.contract_id = agreements.agreement_id JOIN versions ON agreements.agreement_id = versions.document_id WHERE agreements.created_at > '2021-06-01' AND versions.created_at < '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE contracts ( contract_id UUID PRIMARY KEY, contract_name VARCHAR(255), contract_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE agreements ( agreement_id UUID PRIMARY KEY, agreement_name VARCHAR(255), agreement_text TEXT, version_number INT, created_at TIMESTAMP )\n\nCREATE TABLE versions ( version_id UUID PRIMARY KEY, document_id UUID, version_number INT, created_at TIMESTAMP )\n\n### STATEMENT\n\nSELECT agreements.agreement_name, versions.created_at FROM agreements INNER JOIN versions ON agreements.agreement_id = versions.document_id WHERE agreements.agreement_name = 'Sample Agreement'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_title, version_number FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number FROM Contracts WHERE version_number > 1;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_title FROM Contracts WHERE contract_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Contracts ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_title FROM Contracts WHERE version_number = 1 AND created_at >= '2022-01-01T00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT u.username, c.contract_title FROM Users u JOIN UserPermissions up ON u.user_id = up.user_id JOIN Contracts c ON c.contract_id = up.contract_id WHERE u.username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, COUNT(*) AS num_versions FROM ContractVersions GROUP BY contract_id HAVING num_versions > 5;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) AS num_contracts FROM Users u JOIN UserPermissions up ON u.user_id = up.user_id GROUP BY u.username HAVING num_contracts > 10;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT permissions FROM UserPermissions;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, version_number, version_content FROM ContractVersions WHERE version_content LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE email like '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_title, MIN(version_number) AS min_version FROM Contracts GROUP BY contract_title;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, MAX(created_at) AS latest_created_at FROM Contracts GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT u.username, c.contract_title, up.permissions FROM Users u JOIN UserPermissions up ON u.user_id = up.user_id JOIN Contracts c ON c.contract_id = up.contract_id WHERE up.permissions = 'read';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT AVG(version_number) FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, COUNT(DISTINCT user_id) AS num_users FROM UserPermissions GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS num_permissions FROM UserPermissions up JOIN Users u ON up.user_id = u.user_id GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, SUM(version_number) AS total_versions FROM Contracts GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_title FROM Contracts WHERE version_number > 1;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_title, created_at FROM Contracts ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_title, version_number FROM Contracts WHERE version_number BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, COUNT(*) AS version_count FROM ContractVersions GROUP BY contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_title, version_content FROM Contracts INNER JOIN ContractVersions ON Contracts.contract_id = ContractVersions.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT u.username, c.contract_title FROM Users u INNER JOIN UserPermissions up ON u.user_id = up.user_id INNER JOIN Contracts c ON up.contract_id = c.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT u.username AS user, c.contract_title AS contract, up.permissions FROM Users u INNER JOIN UserPermissions up ON u.user_id = u.user_id INNER JOIN Contracts c ON up.contract_id = c.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, COUNT(u.user_id) AS user_count FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = up.contract_id INNER JOIN Users u ON up.user_id = u.user_id GROUP BY c.contract_title;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, MAX(cv.created_at) AS latest_version_date FROM Contracts c INNER JOIN ContractVersions cv ON c.contract_id = cv.contract_id GROUP BY c.contract_title;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username, up.permissions FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE u.username LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username, up.permissions FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE up.permissions = 'read';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE u.email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.created_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.version_number > 2;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.version_number = (SELECT MAX(version_number) FROM Contracts);",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.created_at = (SELECT MAX(created_at) FROM Contracts);",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE c.contract_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_title VARCHAR(255),\n    contract_content TEXT,\n    version_number INT,\n    created_at TIMESTAMPTZ\n);\n\nCREATE TABLE ContractVersions (\n    version_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    version_content TEXT,\n    created_at TIMESTAMPTZ,\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\nCREATE TABLE Users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE UserPermissions (\n    permission_id UUID PRIMARY KEY,\n    user_id UUID,\n    contract_id UUID,\n    permissions VARCHAR(100),\n    FOREIGN KEY(user_id) REFERENCES Users(user_id),\n    FOREIGN KEY(contract_id) REFERENCES Contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT c.contract_title, u.username AS user, up.permissions AS permission FROM Contracts c INNER JOIN UserPermissions up ON c.contract_id = c.contract_id INNER JOIN Users u ON up.user_id = u.user_id WHERE u.username = 'alice';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Contracts",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_name, version FROM Contracts",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Contractors",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, email FROM Contractors",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ContractVersions",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_id, version_number, content FROM ContractVersions",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ContractHistory",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT history_id, change_description, changed_by FROM ContractHistory",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ContractStatus",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_id, status FROM ContractStatus",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_name, version, created_date FROM Contracts WHERE version = 1",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, email FROM Contractors WHERE contractor_id = '12345'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_id, version_number, content FROM ContractVersions WHERE version_number > 2",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT history_id, change_description, changed_by FROM ContractHistory WHERE changed_by = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT status_id, contract_id, status FROM ContractStatus WHERE status = 'Active'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_name, version, created_date FROM Contracts WHERE created_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, address, phone_number FROM Contractors WHERE contractor_name LIKE '%Construction%'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_id, version_number, created_by FROM ContractVersions WHERE created_by = 'Bob'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT history_id, change_date, changed_by FROM ContractHistory WHERE change_date BETWEEN '2021-10-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT status_id, update_date FROM ContractStatus WHERE update_date > '2022-03-15'",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_name, version FROM Contracts WHERE version > 1;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, phone_number FROM Contractors WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id WHERE v.version_number > 2;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, ch.change_description FROM Contracts c JOIN ContractHistory ch ON c.contract_id = ch.contract_id;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, s.status FROM Contracts c JOIN ContractStatus s ON c.contract_id = s.contract_id WHERE s.update_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contract_name, created_date FROM Contracts WHERE version = (SELECT MAX(version) FROM Contracts);",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, address FROM Contractors WHERE contractor_id IN (SELECT contractor_id FROM Contracts WHERE version = 3);",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number, h.change_description FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id JOIN ContractHistory h ON v.contract_id = h.contract_id WHERE v.version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number, s.status FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id JOIN ContractStatus s ON c.contract_id = s.contract_id WHERE v.version_number = 1 AND s.status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, h.change_description, s.status FROM Contracts c JOIN ContractHistory h ON c.contract_id = h.contract_id JOIN ContractStatus s ON c.contract_id = s.contract_id WHERE h.change_date > '2021-01-01' AND s.update_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number, h.change_description, s.status FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id JOIN ContractHistory h ON v.contract_id = h.contract_id JOIN ContractStatus s ON c.contract_id = s.contract_id WHERE h.change_description LIKE '%update%' AND s.status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(contract_id) AS total_contracts FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(version) AS average_version FROM Contracts;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT contractor_name, COUNT(contract_id) AS total_contracts FROM Contractors c JOIN Contracts c ON c.contractor_id = c.contractor_id GROUP BY contractor_name;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, c.created_date FROM Contracts c LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id ORDER BY v.version_number DESC;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id ORDER BY c.created_date ASC, v.version_number DESC;",
  "### TABLEDATA\n\nCREATE TABLE Contracts (\n    contract_id UUID PRIMARY KEY,\n    contract_name STRING,\n    contract_content STRING,\n    version INT,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE Contractors (\n    contractor_id UUID PRIMARY KEY,\n    contractor_name STRING,\n    address STRING,\n    phone_number STRING,\n    email STRING\n)\n\nCREATE TABLE ContractVersions (\n    link_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    content STRING,\n    created_by STRING,\n    created_date TIMESTAMP\n)\n\nCREATE TABLE ContractHistory (\n    history_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    change_description STRING,\n    changed_by STRING,\n    change_date TIMESTAMP\n)\n\nCREATE TABLE ContractStatus (\n    status_id UUID PRIMARY KEY,\n    contract_id UUID,\n    version_number INT,\n    status STRING,\n    update_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT c.contract_name, v.version_number FROM Contracts c JOIN ContractVersions v ON c.contract_id = v.contract_id LIMIT 5 OFFSET 10;"
]