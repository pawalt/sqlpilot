[
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, case_type FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT plaintiff_name, defendant_name FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE resolution_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_type = 'Civil';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM legal_cases WHERE plaintiff_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE defendant_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE plaintiff_name = 'Alice Johnson' AND case_type = 'Criminal';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_type LIKE 'C%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE resolution_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases ORDER BY resolution_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM legal_cases WHERE case_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(resolution_date) FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(CAST(case_id AS INTEGER)) FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_name LIKE '%ABC%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_name LIKE 'The%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_name, case_type, plaintiff_name, defendant_name FROM legal_cases WHERE resolution_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name FROM legal_cases WHERE plaintiff_name LIKE 'A%' AND defendant_name LIKE '%B';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, resolution_date FROM legal_cases WHERE case_status = 'Closed' ORDER BY resolution_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_cases FROM legal_cases WHERE case_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type, plaintiff_name, defendant_name FROM legal_cases WHERE case_type IN ('Civil', 'Criminal') AND resolution_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(resolution_date) AS latest_resolution_date FROM legal_cases WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(resolution_date, NOW())) AS average_resolution_days FROM legal_cases WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT plaintiff_name, COUNT(*) AS total_cases FROM legal_cases GROUP BY plaintiff_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type FROM legal_cases WHERE resolution_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT defendant_name, MAX(resolution_date), MIN(resolution_date) FROM legal_cases GROUP BY defendant_name;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT defendant_name, COUNT(*) AS total_cases FROM legal_cases WHERE case_status = 'Closed' GROUP BY defendant_name;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(resolution_date, NOW())) AS avg_days_pending_resolution FROM legal_cases WHERE case_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type, plaintiff_name, case_status FROM legal_cases WHERE case_name LIKE '%vs%' AND defendant_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_status, resolution_date FROM legal_cases WHERE plaintiff_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_status, resolution_date FROM legal_cases WHERE defendant_name NOT LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT case_id, CASE WHEN case_status = 'Pending' THEN 'Open' ELSE 'Closed' END AS case_state FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT plaintiff_name, defendant_name FROM legal_cases WHERE resolution_date >= '2022-01-01' ORDER BY resolution_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255) NOT NULL,\n  case_type VARCHAR(50),\n  plaintiff_name VARCHAR(100),\n  defendant_name VARCHAR(100),\n  case_status VARCHAR(20) DEFAULT 'Pending',\n  resolution_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(resolution_date, NOW())) AS avg_days_to_resolution FROM legal_cases WHERE resolution_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_status FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_role FROM case_parties",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_id, party_contact FROM case_parties",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_type = 'civil'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_initiation_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_resolution_date IS NULL",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_role = 'plaintiff'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_contact LIKE '%@example.com'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_role = 'defendant' AND case_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases ORDER BY case_type ASC",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases ORDER BY case_initiation_date DESC",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_name, case_name FROM case_parties INNER JOIN legal_cases ON case_parties.case_id = legal_cases.case_id",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_status FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(case_resolution_date, case_initiation_date)) AS resolution_time FROM legal_cases",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_initiation_date FROM legal_cases WHERE case_initiation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_type = 'Civil';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_resolution_date FROM legal_cases WHERE case_resolution_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_type FROM legal_cases WHERE case_type = 'Criminal';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT case_type FROM legal_cases;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_initiation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases WHERE case_type LIKE '%iminal%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_type FROM legal_cases WHERE case_status = 'Open' OR case_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_role FROM case_parties WHERE party_role = 'Defendant';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_contact LIKE '%@gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE case_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT LC.case_name, CP.party_name FROM legal_cases LC INNER JOIN case_parties CP ON LC.case_id = CP.case_id;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_role IN ('Plaintiff', 'Defendant');",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE party_name LIKE '%John%' AND party_role = 'Plaintiff';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT CP.party_name, LC.case_name FROM case_parties CP INNER JOIN legal_cases LC ON CP.case_id = LC.case_id WHERE LC.case_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT party_role FROM case_parties;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM legal_cases ORDER BY case_initiation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE legal_cases (\n  case_id UUID PRIMARY KEY,\n  case_name VARCHAR(255),\n  case_status VARCHAR(50),\n  case_type VARCHAR(50),\n  case_initiation_date DATE,\n  case_resolution_date DATE\n)\n\nCREATE TABLE case_parties (\n  party_id UUID PRIMARY KEY,\n  party_name VARCHAR(255),\n  party_role VARCHAR(50),\n  party_contact VARCHAR(100),\n  case_id UUID REFERENCES legal_cases(case_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM case_parties WHERE party_role = 'Plaintiff';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_type FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_type, case_status FROM cases WHERE case_status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM cases WHERE case_type = 'Civil';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_role FROM case_parties;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_contact FROM case_parties WHERE party_role = 'Plaintiff';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_parties WHERE case_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM case_updates;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT update_date, update_description FROM case_updates;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT update_date, update_description FROM case_updates WHERE case_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, case_description FROM cases JOIN case_updates ON cases.case_id = case_updates.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, party_name, party_role FROM cases JOIN case_parties ON cases.case_id = case_parties.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, update_date, update_description FROM cases JOIN case_updates ON cases.case_id = case_updates.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT count(*) AS total_cases FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT count(*) AS total_parties FROM case_parties;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, COUNT(update_id) AS total_updates FROM cases JOIN case_updates ON cases.case_id = case_updates.case_id GROUP BY cases.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM cases WHERE case_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, MAX(update_date) AS latest_update FROM cases JOIN case_updates ON cases.case_id = case_updates.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_name, MIN(update_date) AS earliest_update FROM cases JOIN case_updates ON cases.case_id = case_updates.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT case_id, case_name, case_type, case_status FROM cases;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT * FROM cases WHERE case_type = 'criminal';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, p.party_name, p.party_role FROM cases c JOIN case_parties p ON c.case_id = p.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_date, cu.update_description FROM cases c JOIN case_updates cu ON c.case_id = cu.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_date, cu.update_description FROM cases c JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, COUNT(p.party_id) AS number_of_parties FROM cases c JOIN case_parties p ON c.case_id = p.case_id GROUP BY c.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, MAX(cu.update_date) AS last_update_date FROM cases c JOIN case_updates cu ON c.case_id = cu.case_id GROUP BY c.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c1.case_id, c1.case_name, c2.case_name AS previous_case_name FROM cases c1 LEFT JOIN cases c2 ON c1.case_id = c2.case_id - 1;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, c.case_description, GROUP_CONCAT(p.party_name) AS parties FROM cases c JOIN case_parties p ON c.case_id = p.case_id GROUP BY c.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_date, cu.update_description FROM cases c LEFT JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, p.party_name, p.party_role FROM cases c JOIN case_parties p ON c.case_id = p.case_id WHERE p.party_role = 'lawyer';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_description FROM cases c JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_description LIKE '%hearing%';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c1.case_id, c1.case_name, cu.update_date FROM cases c1 JOIN case_updates cu ON c1.case_id = cu.case_id WHERE cu.update_date = (SELECT MAX(update_date) FROM case_updates WHERE case_id = c1.case_id);",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, p.party_name, cu.update_date FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_date = (SELECT MAX(update_date) FROM case_updates WHERE case_id = c.case_id);",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, p.party_name, cu.update_date FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_date = (SELECT MAX(update_date) FROM case_updates WHERE case_id = c.case_id) AND p.party_role = 'client';",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_description, CONCAT_WS(' - ', p.party_name, p.party_contact) AS party_info FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_description, CONCAT_WS(' - ', p.party_name, p.party_contact) AS party_info FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_description, CONCAT_WS(' - ', p.party_name, p.party_contact) AS party_info FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_description IS NOT NULL ORDER BY cu.update_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE cases (\n case_id INT PRIMARY KEY,\n case_name VARCHAR(255),\n case_type VARCHAR(50),\n case_status VARCHAR(50),\n case_description TEXT\n)\n\nCREATE TABLE case_parties (\n party_id INT PRIMARY KEY,\n party_name VARCHAR(255),\n party_role VARCHAR(50),\n party_contact VARCHAR(50),\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\nCREATE TABLE case_updates (\n update_id INT PRIMARY KEY,\n update_date DATE,\n update_description TEXT,\n case_id INT,\n FOREIGN KEY (case_id) REFERENCES cases(case_id)\n)\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, cu.update_description, CONCAT_WS(' - ', p.party_name, p.party_contact) AS party_info FROM cases c JOIN case_parties p ON c.case_id = p.case_id JOIN case_updates cu ON c.case_id = cu.case_id WHERE cu.update_description IS NOT NULL ORDER BY cu.update_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, case_status FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM parties;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_type FROM parties;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM documents;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT document_name, document_type FROM documents;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM hearings;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT hearing_date, location FROM hearings;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, case_number, date_initiated FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, party_name, party_type FROM parties;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, document_name, date_created FROM documents;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, hearing_date, presiding_judge FROM hearings;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, case_number, case_status, date_resolved FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, party_name, party_type FROM case INNER JOIN parties ON case.id = parties.case_id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT document_name, document_type, case_number FROM documents INNER JOIN case ON documents.case_id = case.id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT presiding_judge, case_number, date_resolved FROM hearings INNER JOIN case ON hearings.case_id = case.id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_type, case_status FROM parties INNER JOIN case ON parties.case_id = case.id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT document_name, document_type, date_created FROM documents WHERE date_created > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM case WHERE date_initiated < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM hearings WHERE location LIKE '%court%';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT id, case_number, case_status FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_type FROM parties WHERE party_role = 'Plaintiff';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT document_name, document_type FROM documents WHERE date_created >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM parties WHERE party_type = 'Attorney' AND party_role = 'Defense';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM hearings WHERE location LIKE '%court%';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, date_initiated, date_resolved FROM case WHERE date_resolved IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT party_name FROM parties;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT MAX(hearing_date) FROM hearings;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT AVG(id) FROM case;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT MAX(date_created) FROM documents WHERE document_type = 'Evidence';",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, COUNT(*) FROM documents GROUP BY case_id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT presiding_judge, COUNT(*) FROM hearings GROUP BY presiding_judge;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_type FROM parties WHERE case_id IN (SELECT id FROM case WHERE date_resolved IS NULL);",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM case c JOIN parties p ON c.id = p.case_id;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, MAX(hearing_date) FROM case JOIN hearings ON case.id = hearings.case_id GROUP BY case_number;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, party_role FROM parties WHERE party_type = 'Witness' ORDER BY party_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(date_resolved, date_initiated)) AS avg_duration FROM case WHERE date_resolved IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, COUNT(*) AS total_documents FROM parties JOIN documents ON parties.case_id = documents.case_id GROUP BY party_name;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT case_number, COUNT(*) AS total_documents FROM case LEFT JOIN documents ON case.id = documents.case_id GROUP BY case_number;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT party_name, COUNT(*) AS total_hearings FROM parties LEFT JOIN hearings ON parties.case_id = hearings.case_id GROUP BY party_name;",
  "### TABLEDATA\n\nCREATE TABLE case (id INT PRIMARY KEY,\n case_number VARCHAR(50),\n case_status VARCHAR(20),\n case_type VARCHAR(50),\n date_initiated DATE,\n date_resolved DATE\n)\n\nCREATE TABLE parties (id INT PRIMARY KEY,\n case_id INT,\n party_name VARCHAR(50),\n party_type VARCHAR(20),\n party_role VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE documents (id INT PRIMARY KEY,\n case_id INT,\n document_name VARCHAR(100),\n document_type VARCHAR(50),\n date_created DATE,\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\nCREATE TABLE hearings (id INT PRIMARY KEY,\n case_id INT,\n hearing_date DATE,\n location VARCHAR(100),\n presiding_judge VARCHAR(50),\n FOREIGN KEY (case_id) REFERENCES case(id)\n)\n\n### STATEMENT\n\nSELECT * FROM case WHERE date_resolved BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT * FROM CaseDetails;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_name, case_status FROM CaseDetails;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_id, case_name, case_status FROM CaseDetails WHERE case_status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT * FROM CaseDetails WHERE case_resolution_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT party_name, party_type FROM CaseParties WHERE case_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT doc_name, doc_type FROM CaseDocuments WHERE case_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT note_date, note_content FROM CaseNotes WHERE case_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT status_date, status, status_description FROM CaseStatusHistory WHERE case_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT * FROM CaseDetails ORDER BY case_initiation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_name, case_status FROM CaseDetails WHERE case_resolution_date > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT party_role, party_name FROM CaseParties WHERE party_type = 'Defendant';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT doc_name, doc_type FROM CaseDocuments WHERE case_id = 5 AND doc_type = 'Report';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT note_date, note_content FROM CaseNotes WHERE case_id = 6 AND note_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT status_date, status, status_description FROM CaseStatusHistory WHERE case_id = 7 AND status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_cases FROM CaseDetails;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT MAX(case_initiation_date) AS latest_case_initiation FROM CaseDetails;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(case_resolution_date, case_initiation_date)) AS avg_resolution_time FROM CaseDetails WHERE case_resolution_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT MIN(note_date) AS first_note_date FROM CaseNotes;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT party_type, COUNT(*) AS party_count FROM CaseParties GROUP BY party_type;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT DISTINCT status FROM CaseStatusHistory;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT * FROM CaseDetails;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_name, case_initiation_date FROM CaseDetails WHERE case_status='Open';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_name, party_name, party_type FROM CaseDetails JOIN CaseParties ON CaseDetails.case_id = CaseParties.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT * FROM CaseParties WHERE party_type='Plaintiff' AND party_role='Attorney';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT doc_name, doc_type, LENGTH(doc_content) AS doc_size FROM CaseDocuments WHERE case_id=1001;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_name, note_date, note_content FROM CaseDetails d JOIN CaseNotes n ON d.case_id = n.case_id WHERE d.case_status='Closed';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT case_id, MAX(status_date) AS latest_status_date FROM CaseStatusHistory GROUP BY case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT party_name, COUNT(*) AS num_cases FROM CaseParties GROUP BY party_name ORDER BY num_cases DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT d.doc_name, COUNT(*) AS num_downloads FROM CaseDocuments d JOIN CaseDetails c ON d.case_id = c.case_id GROUP BY d.doc_name ORDER BY num_downloads DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, nh.status_date, nh.status FROM CaseDetails c JOIN (SELECT case_id, MAX(status_date) AS status_date, status FROM CaseStatusHistory GROUP BY case_id) nh ON c.case_id = nh.case_id ORDER BY nh.status_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, p.party_name, n.note_date, n.note_content FROM CaseDetails c LEFT JOIN CaseParties p ON c.case_id = p.case_id LEFT JOIN CaseNotes n ON c.case_id = n.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT cd.case_id, cd.case_name, cp.party_name, cn.note_content FROM CaseDetails cd JOIN CaseParties cp ON cd.case_id = cp.case_id LEFT JOIN CaseNotes cn ON cd.case_id = cn.case_id WHERE cp.party_role='Defendant';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_id, c.case_name, d.doc_name FROM CaseDetails c JOIN CaseDocuments d ON c.case_id = d.case_id WHERE LENGTH(d.doc_content) > 0;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT CD1.case_id, CD1.case_name, CD2.case_name AS related_case FROM CaseDetails CD1 JOIN CaseDetails CD2 ON CD1.case_id != CD2.case_id;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, ch.status_date, ch.status_description FROM CaseDetails c JOIN CaseStatusHistory ch ON c.case_id = ch.case_id WHERE ch.status='Resolved' ORDER BY ch.status_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, cp1.party_name AS plaintiff, cp2.party_name AS defendant FROM CaseDetails c JOIN CaseParties cp1 ON c.case_id = cp1.case_id JOIN CaseParties cp2 ON c.case_id = cp2.case_id WHERE cp1.party_type='Plaintiff' AND cp2.party_type='Defendant';",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, MAX(n.note_date) AS latest_note_date FROM CaseDetails c JOIN CaseNotes n ON c.case_id = n.case_id GROUP BY c.case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_id, COUNT(*) AS num_notes FROM CaseDetails c JOIN CaseNotes n ON c.case_id = n.case_id GROUP BY c.case_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, cd.case_status, ch.status FROM CaseDetails cd JOIN CaseStatusHistory ch ON cd.case_id = ch.case_id JOIN (SELECT case_id, MAX(status_date) AS latest_status_date FROM CaseStatusHistory GROUP BY case_id) AS latest ON ch.case_id = latest.case_id AND ch.status_date = latest.latest_status_date;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT c.case_name, cd.case_initiation_date, MAX(ch.status_date) AS latest_status_date FROM CaseDetails cd JOIN CaseStatusHistory ch ON cd.case_id = ch.case_id GROUP BY c.case_name;",
  "### TABLEDATA\n\nCREATE TABLE CaseDetails (case_id INT PRIMARY KEY, case_name VARCHAR(255), case_status VARCHAR(50), case_description TEXT, case_initiation_date TIMESTAMP, case_resolution_date TIMESTAMP);\n\nCREATE TABLE CaseParties (party_id INT PRIMARY KEY, case_id INT, party_name VARCHAR(255), party_type VARCHAR(50), party_role VARCHAR(50), FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseDocuments (doc_id INT PRIMARY KEY, case_id INT, doc_name VARCHAR(255), doc_type VARCHAR(50), doc_content BYTEA, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseNotes (note_id INT PRIMARY KEY, case_id INT, note_date TIMESTAMP, note_content TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\nCREATE TABLE CaseStatusHistory (status_id INT PRIMARY KEY, case_id INT, status_date TIMESTAMP, status VARCHAR(50), status_description TEXT, FOREIGN KEY (case_id) REFERENCES CaseDetails(case_id));\n\n### STATEMENT\n\nSELECT cd.case_id, cd.case_name, cp.party_name, ch.status_date AS latest_status_date FROMCaseDetails cd JOIN (SELECT case_id, MAX(status_date) AS status_date FROM CaseStatusHistory GROUP BY case_id) ch ON cd.case_id = ch.case_id JOIN CaseParties cp ON cd.case_id = cp.case_id WHERE cp.party_type='Plaintiff';"
]